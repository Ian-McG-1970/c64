
;6502/65C02/65816/CPU64/DTV Turbo Assembler V1.47 listing file of "mf_land_sky_v10.tas"
;done on Fri Aug 25 18:31:59 2023

=0001					ab01 = $01

=0002					SCREEN_POS_LO = $02

=0003					SCREEN_POS_HI = $03

=0006					ab06 = $06

=0007					ab07 = $07

=0008					ab08 = $08

=0009					ab09 = $09

=000a					ab0A = $0A

=000b					ab0B = $0B

=000e					FP_MULTIPLY_LO = $0E

=000f					FP_MULTIPLY_HI = $0F

=000e					FP_DIVIDE_LO = FP_MULTIPLY_LO

=000f					FP_DIVIDE_HI = FP_MULTIPLY_HI

=0016					ab16 = $16

=0017					ab17 = $17

=0018					ab18 = $18

=001a					SCREEN_LINE_ab1A = $1A

=0021					ab21 = $21 ; CONST

=0022					ab22 = $22

=0023					ab23 = $23

=0024					SCREEN_FLIP = $24

=0025					SCREEN_BANK = $25

=0026					ab26 = $26

=0027					ab27 = $27

=0028					ROLL_LO = $28 ; ROLL_LO

=0029					ROLL_HI = $29 ; ROLL_HI

=002a					PITCH_LO = $2A ; PITCH_LO

=002b					PITCH_HI = $2B ; PITCH_HI

=002c					YAW_LO = $2C ; YAW_LO 

=002d					YAW_HI = $2D ; YAW_HI

=002e					ROLL_SIN_FP_LO_ab2E = $2E

=002f					ROLL_SIN_FP_HI_ab2F = $2F

=0030					ROLL_COS_FP_LO_ab30 = $30

=0031					ROLL_COS_FP_HI_ab31 = $31

=0032					ab32 = $32

=0033					ab33 = $33

=0034					ab34 = $34

=0035					ab35 = $35

=0036					PITCH_SIN_FP_LO_ab36 = $36

=0037					PITCH_SIN_FP_HI_ab37 = $37

=0038					PITCH_COS_FP_LO_ab38 = $38

=0039					PITCH_COS_FP_HI_ab39 = $39

=003a					ab3A = $3A

=003b					ab3B = $3B

=003c					YAW_SIN_FP_LO_ab3C = $3C

=003d					YAW_SIN_FP_HI_ab3D = $3D

=003e					YAW_COS_FP_LO_ab3E = $3E

=003f					YAW_COS_FP_HI_ab3F = $3F

=0072					CURR_X_LSB = $72

=0073					CURR_X_MSB = $73

=0074					CURR_X_HSB = $74

=0075					CURR_Y_LSB = $75

=0076					CURR_Y_MSB = $76

=0077					CURR_Y_HSB = $77

=0078					CURR_Z_LSB = $78

=0079					CURR_Z_MSB = $79

=007a					CURR_Z_HSB = $7A

=007b					ab7B = $7B

=007c					HORIZON_SLOPE_ab7C = $7C ; horizon slope?

=007d					SIGN_ab7D = $7D

=007f					ab7F = $7F

=0080					ab80 = $80

=0082					SCREEN_TOP_COL_ab82 = $82

=0083					SCREEN_BOT_COL_ab83 = $83

=0084					FILL_EMPTY_RIGHT_WAY_UP_ab84 = $84

=0085					REGA = $85

=0086					REGX = $86

=0087					REGY = $87

=008c					ab8C = $8C ; constant 

=008d					ab8D = $8D ; constant

=009b					ab9B = $9B ; 1 STORE - PART OF ROTATION

=009c					ab9C = $9C ; 1 STORE - PART OF ROTATION

=009d					ab9D = $9D ; 1 STORE - PART OF ROTATION

=009e					ab9E = $9E ; 1 STORE - PART OF ROTATION

=00c1					abBEC0_JOYSTICK = $C1

=00c7					VIC_SCREEN_BANK = $C7

=00ec					abEC = $EC

=00ed					abED = $ED

=00f9					abF9 = $F9

=00fa					abFA = $FA

=0002					SCREEN_POS_PTR = $02

=fffe					fFFFE = $FFFE

=ffff					fFFFF = $FFFF

=e000					pE000 = $E000

=29dc					b29DC = $29dc

=140c					p140C = $140c

=0200					f0200 = $0200

=0400					f0400 = $0400

=0440					f0440 = $0440

=0500					f0500 = $0500

=0540					f0540 = $0540


.0801	 78		sei			SEI

.0802	 a9 00		lda #$00	 LDA #$00

.0804	 8d 20 d0	sta $d020	 STA $D020

.0807	 a9 01		lda #$01	 LDA #$01 ; $00

.0809	 8d 21 d0	sta $d021	 STA $D021

.080c	 a9 0b		lda #$0b	 LDA #$0B ; $00

.080e	 8d 22 d0	sta $d022	 STA $D022

.0811	 a9 0c		lda #$0c	 LDA #$0C ; $00

.0813	 8d 23 d0	sta $d023	 STA $D023

.0816	 a9 00		lda #$00	  LDA #$00 ; $01 ; colour 11 

.0818	 a2 00		ldx #$00	 LDX #<$D800

.081a	 a0 d8		ldy #$d8	 LDY #>$D800

.081c	 86 02		stx $02		 STX SCREEN_POS_LO+0

.081e	 84 03		sty $03		 STY SCREEN_POS_LO+1

.0820	 a2 03		ldx #$03	 LDX #>1000 

.0822	 a0 e8		ldy #$e8	 LDY #<1000

.0824	 20 9f 12	jsr $129f	 JSR MEMSET

.0827	 a9 bc		lda #$bc	 LDA #$BC ;$65 ; colour 01 (0000????) and colour 10 (????0000) - bank 1

.0829	 a2 00		ldx #$00	 LDX #<(SCREEN_COLOUR)

.082b	 a0 5c		ldy #$5c	 LDY #>(SCREEN_COLOUR)

.082d	 86 02		stx $02		 STX SCREEN_POS_LO+0

.082f	 84 03		sty $03		 STY SCREEN_POS_LO+1

.0831	 a2 03		ldx #$03	 LDX #>1000 

.0833	 a0 e8		ldy #$e8	 LDY #<1000

.0835	 20 9f 12	jsr $129f	 JSR MEMSET

.0838	 a9 35		lda #$35		LDA #$35

.083a	 85 01		sta $01			STA $1

.083c	 a9 70		lda #$70		LDA #$70

.083e	 8d 18 d0	sta $d018		STA $D018

.0841	 a9 3b		lda #$3b		LDA #$3B

.0843	 8d 11 d0	sta $d011		STA $D011

.0846	 a9 18		lda #$18		LDA #$18

.0848	 8d 16 d0	sta $d016		STA $D016

.084b	 a9 d4		lda #$d4		LDA #<IRQ1

.084d	 8d fe ff	sta $fffe		STA $FFFE

.0850	 a9 12		lda #$12		LDA #>IRQ1

.0852	 8d ff ff	sta $ffff		STA $FFFF

.0855	 a2 02		ldx #$02	 ldx #2

.0857	 bd ef 08	lda $08ef,x	zp_loop lda zp,x

.085a	 95 00		sta $00,x			sta 0,x

.085c	 e8		inx				inx

.085d	 d0 f8		bne $0857			 bne zp_loop

.085f	 a9 7f		lda #$7f	 LDA #$7F

.0861	 8d 0d dc	sta $dc0d	 STA $DC0D  ; disable timer interrupts which can be generated by the two CIA chips

.0864	 8d 0d dd	sta $dd0d	 STA $DD0D  ; the kernal uses such an interrupt to flash the cursor and scan the keyboard, so we better stop it.

.0867	 ad 0d dc	lda $dc0d	 LDA $DC0D  ; by reading this two registers we negate any pending CIA irqs.

.086a	 ad 0d dd	lda $dd0d	 LDA $DD0D  ; if we don't do this, a pending CIA irq might occur after we finish setting up our irq. we don't want that to happen.

.086d	 a9 01		lda #$01	  LDA #$01   ; this is how to tell the VICII to generate a raster interrupt

.086f	 8d 1a d0	sta $d01a	 STA $D01A

.0872	 a9 02		lda #$02	 LDA #2 ; SCRNBANK

.0874	 8d 00 dd	sta $dd00	 STA $DD00 ; bank

.0877	 a9 ba		lda #$ba		LDA #$BA

.0879	 8d 12 d0	sta $d012		STA $D012

.087c	 a9 01		lda #$01		LDA #$01

.087e	 8d 19 d0	sta $d019		STA $D019

.0881	 58		cli			CLI

.0882					main_loop
.0882	 20 83 15	jsr $1583	        JSR GET_ROT

.0885	 20 a3 13	jsr $13a3	        JSR DRAW_SCREEN

.0888	 20 7b 15	jsr $157b	        JSR READ_JOYSTICK_KEYBOARD

.088b	 20 f7 15	jsr $15f7	        JSR MOVMENT

.088e	 a6 73		ldx $73			LDX CURR_X_MSB

.0890	 a5 74		lda $74			LDA CURR_X_HSB

.0892	 a0 00		ldy #$00		LDY	#0

.0894	 20 b7 17	jsr $17b7		JSR	HEX16

.0897	 a5 72		lda $72			LDA CURR_X_LSB

.0899	 a2 20		ldx #$20		LDX #32

.089b	 a0 00		ldy #$00		LDY	#0

.089d	 20 ca 17	jsr $17ca		JSR	HEX8

.08a0	 a6 76		ldx $76			LDX CURR_Y_MSB

.08a2	 a5 77		lda $77			LDA CURR_Y_HSB

.08a4	 a0 06		ldy #$06		LDY	#6

.08a6	 20 b7 17	jsr $17b7		JSR	HEX16

.08a9	 a5 75		lda $75			LDA CURR_Y_LSB

.08ab	 a2 20		ldx #$20		LDX #32

.08ad	 a0 06		ldy #$06		LDY	#6

.08af	 20 ca 17	jsr $17ca		JSR	HEX8

.08b2	 a6 79		ldx $79			LDX CURR_Z_MSB

.08b4	 a5 7a		lda $7a			LDA CURR_Z_HSB

.08b6	 a0 0c		ldy #$0c		LDY	#12

.08b8	 20 b7 17	jsr $17b7		JSR	HEX16

.08bb	 a5 78		lda $78			LDA CURR_Z_LSB

.08bd	 a2 20		ldx #$20		LDX #32

.08bf	 a0 0c		ldy #$0c		LDY	#12

.08c1	 20 ca 17	jsr $17ca		JSR	HEX8

.08c4	 ad 77 15	lda $1577		LDA temp1

.08c7	 a2 00		ldx #$00		LDX #0

.08c9	 a0 18		ldy #$18		LDY	#24

.08cb	 20 ca 17	jsr $17ca		JSR	HEX8

.08ce	 ad 78 15	lda $1578		LDA temp2

.08d1	 a2 10		ldx #$10		LDX #16

.08d3	 a0 18		ldy #$18		LDY	#24

.08d5	 20 ca 17	jsr $17ca		JSR	HEX8

.08d8	 ad 79 15	lda $1579		LDA temp3

.08db	 a2 00		ldx #$00		LDX #0

.08dd	 a0 1e		ldy #$1e		LDY	#30

.08df	 20 ca 17	jsr $17ca		JSR	HEX8

.08e2	 ad 7a 15	lda $157a		LDA temp4

.08e5	 a2 10		ldx #$10		LDX #16

.08e7	 a0 1e		ldy #$1e		LDY	#30

.08e9	 20 ca 17	jsr $17ca		JSR	HEX8

.08ec	 4c 82 08	jmp $0882	        JMP MAIN_LOOP

.08ef					zp

>08ef	 2f 35 81 51 7b ad 01 00  	 .byte $2f, $35, $81, $51, $7b, $ad, $01, $00

>08f7	 00 81 37 40 ea 55 a0 40  	 .byte $00, $81, $37, $40, $ea, $55, $a0, $40

>08ff	 a7 54 00 00 00 00 5d 10  	 .byte $a7, $54, $00, $00, $00, $00, $5d, $10

>0907	 00 00 00 34 30 88 28 81  	 .byte $00, $00, $00, $34, $30, $88, $28, $81

>090f	 0a 18 4d f9 7e 40 76 84  	 .byte $0a, $18, $4d, $f9, $7e, $40, $76, $84

>0917	 fe ff 35 02 3c df 2e e5  	 .byte $fe, $ff, $35, $02, $3c, $df, $2e, $e5

>091f	 00 00 2e e5 b2 19 4a f9  	 .byte $00, $00, $2e, $e5, $b2, $19, $4a, $f9

>0927	 e5 fd 5d f8 dd fd 73 f8  	 .byte $e5, $fd, $5d, $f8, $dd, $fd, $73, $f8

>092f	 71 f8 1e e5 dd fc 37 f9  	 .byte $71, $f8, $1e, $e5, $dd, $fc, $37, $f9

>0937	 e5 fd bb f0 c4 fc 4a f9  	 .byte $e5, $fd, $bb, $f0, $c4, $fc, $4a, $f9

>093f	 5f f9 00 49 03 58 47 49  	 .byte $5f, $f9, $00, $49, $03, $58, $47, $49

>0947	 b0 49 e5 59 6a 51 5f 49  	 .byte $b0, $49, $e5, $59, $6a, $51, $5f, $49

>094f	 84 fc 51 f9 76 fc 80 06  	 .byte $84, $fc, $51, $f9, $76, $fc, $80, $06

>0957	 00 05 3a 73 3b 71 80 00  	 .byte $00, $05, $3a, $73, $3b, $71, $80, $00

>095f	 1b 20 7d 71 0c 2c 0e 00  	 .byte $1b, $20, $7d, $71, $0c, $2c, $0e, $00

>0967	 49 8c 0d 40 36 00 00 00  	 .byte $49, $8c, $0d, $40, $36, $00, $00, $00

>096f	 0f 01 55 aa 00 0c 00 0d  	 .byte $0f, $01, $55, $aa, $00, $0c, $00, $0d

>0977	 1b 1b 20 20 38 04 50 42  	 .byte $1b, $1b, $20, $20, $38, $04, $50, $42

>097f	 40 19 3c 18 07 19 16 18  	 .byte $40, $19, $3c, $18, $07, $19, $16, $18

>0987	 0b a8 de 8d fd 44 fd 00  	 .byte $0b, $a8, $de, $8d, $fd, $44, $fd, $00

>098f	 74 8f 18 01 06 05 0b a9  	 .byte $74, $8f, $18, $01, $06, $05, $0b, $a9

>0997	 00 01 40 18 10 49 00 3f  	 .byte $00, $01, $40, $18, $10, $49, $00, $3f

>099f	 0f 00 08 00 3f 35 06 dc  	 .byte $0f, $00, $08, $00, $3f, $35, $06, $dc

>09a7	 04 02 03 f6 03 00 87 df  	 .byte $04, $02, $03, $f6, $03, $00, $87, $df

>09af	 af 80 01 06 05 0b 00 78  	 .byte $af, $80, $01, $06, $05, $0b, $00, $78

>09b7	 00 00 00 00 0e 00 06 70  	 .byte $00, $00, $00, $00, $0e, $00, $06, $70

>09bf	 08 00 08 40 07 83 fe fb  	 .byte $08, $00, $08, $40, $07, $83, $fe, $fb

>09c7	 93 ee 40 b6 e3 fa 02 00  	 .byte $93, $ee, $40, $b6, $e3, $fa, $02, $00

>09cf	 00 7d 14 59 2a 02 00 03  	 .byte $00, $7d, $14, $59, $2a, $02, $00, $03

>09d7	 70 04 ff 00 00 84 ff 00  	 .byte $70, $04, $ff, $00, $00, $84, $ff, $00

>09df	 00 00 0c f9 00 00 7e 09  	 .byte $00, $00, $0c, $f9, $00, $00, $7e, $09

>09e7	 00 00 00 00 a0 60 21 7d  	 .byte $00, $00, $00, $00, $a0, $60, $21, $7d


.0a00					log_table

>0a00	 00 01 03 04 06 07 09 0a  	  .BYTE $00,$01,$03,$04,$06,$07,$09,$0A

>0a08	 0b 0d 0e 10 11 12 14 15  	  .BYTE $0B,$0D,$0E,$10,$11,$12,$14,$15

>0a10	 16 18 19 1a 1c 1d 1e 20  	  .BYTE $16,$18,$19,$1A,$1C,$1D,$1E,$20

>0a18	 21 22 24 25 26 28 29 2a  	  .BYTE $21,$22,$24,$25,$26,$28,$29,$2A

>0a20	 2c 2d 2e 2f 31 32 33 34  	  .BYTE $2C,$2D,$2E,$2F,$31,$32,$33,$34

>0a28	 36 37 38 39 3b 3c 3d 3e  	  .BYTE $36,$37,$38,$39,$3B,$3C,$3D,$3E

>0a30	 3f 41 42 43 44 45 47 48  	  .BYTE $3F,$41,$42,$43,$44,$45,$47,$48

>0a38	 49 4a 4b 4d 4e 4f 50 51  	  .BYTE $49,$4A,$4B,$4D,$4E,$4F,$50,$51

>0a40	 52 54 55 56 57 58 59 5a  	  .BYTE $52,$54,$55,$56,$57,$58,$59,$5A

>0a48	 5c 5d 5e 5f 60 61 62 63  	  .BYTE $5C,$5D,$5E,$5F,$60,$61,$62,$63

>0a50	 64 66 67 68 69 6a 6b 6c  	  .BYTE $64,$66,$67,$68,$69,$6A,$6B,$6C

>0a58	 6d 6e 6f 70 71 72 74 75  	  .BYTE $6D,$6E,$6F,$70,$71,$72,$74,$75

>0a60	 76 77 78 79 7a 7b 7c 7d  	  .BYTE $76,$77,$78,$79,$7A,$7B,$7C,$7D

>0a68	 7e 7f 80 81 82 83 84 85  	  .BYTE $7E,$7F,$80,$81,$82,$83,$84,$85

>0a70	 86 87 88 89 8a 8b 8c 8d  	  .BYTE $86,$87,$88,$89,$8A,$8B,$8C,$8D

>0a78	 8e 8f 90 91 92 93 94 95  	  .BYTE $8E,$8F,$90,$91,$92,$93,$94,$95

>0a80	 96 97 98 99 9a 9b 9b 9c  	  .BYTE $96,$97,$98,$99,$9A,$9B,$9B,$9C

>0a88	 9d 9e 9f a0 a1 a2 a3 a4  	  .BYTE $9D,$9E,$9F,$A0,$A1,$A2,$A3,$A4

>0a90	 a5 a6 a7 a8 a9 a9 aa ab  	  .BYTE $A5,$A6,$A7,$A8,$A9,$A9,$AA,$AB

>0a98	 ac ad ae af b0 b1 b2 b2  	  .BYTE $AC,$AD,$AE,$AF,$B0,$B1,$B2,$B2

>0aa0	 b3 b4 b5 b6 b7 b8 b9 b9  	  .BYTE $B3,$B4,$B5,$B6,$B7,$B8,$B9,$B9

>0aa8	 ba bb bc bd be bf c0 c0  	  .BYTE $BA,$BB,$BC,$BD,$BE,$BF,$C0,$C0

>0ab0	 c1 c2 c3 c4 c5 c6 c6 c7  	  .BYTE $C1,$C2,$C3,$C4,$C5,$C6,$C6,$C7

>0ab8	 c8 c9 ca cb cb cc cd ce  	  .BYTE $C8,$C9,$CA,$CB,$CB,$CC,$CD,$CE

>0ac0	 cf d0 d0 d1 d2 d3 d4 d4  	  .BYTE $CF,$D0,$D0,$D1,$D2,$D3,$D4,$D4

>0ac8	 d5 d6 d7 d8 d8 d9 da db  	  .BYTE $D5,$D6,$D7,$D8,$D8,$D9,$DA,$DB

>0ad0	 dc dc dd de df e0 e0 e1  	  .BYTE $DC,$DC,$DD,$DE,$DF,$E0,$E0,$E1

>0ad8	 e2 e3 e4 e4 e5 e6 e7 e7  	  .BYTE $E2,$E3,$E4,$E4,$E5,$E6,$E7,$E7

>0ae0	 e8 e9 ea ea eb ec ed ee  	  .BYTE $E8,$E9,$EA,$EA,$EB,$EC,$ED,$EE

>0ae8	 ee ef f0 f1 f1 f2 f3 f4  	  .BYTE $EE,$EF,$F0,$F1,$F1,$F2,$F3,$F4

>0af0	 f4 f5 f6 f7 f7 f8 f9 f9  	  .BYTE $F4,$F5,$F6,$F7,$F7,$F8,$F9,$F9

>0af8	 fa fb fc fc fd fe ff ff  	  .BYTE $FA,$FB,$FC,$FC,$FD,$FE,$FF,$FF


.0b00					exp_table

>0b00	 00 01 01 02 03 03 04 05  	  .BYTE $00,$01,$01,$02,$03,$03,$04,$05

>0b08	 06 06 07 08 08 09 0a 0b  	  .BYTE $06,$06,$07,$08,$08,$09,$0A,$0B

>0b10	 0b 0c 0d 0e 0e 0f 10 10  	  .BYTE $0B,$0C,$0D,$0E,$0E,$0F,$10,$10

>0b18	 11 12 13 13 14 15 16 16  	  .BYTE $11,$12,$13,$13,$14,$15,$16,$16

>0b20	 17 18 19 19 1a 1b 1c 1d  	  .BYTE $17,$18,$19,$19,$1A,$1B,$1C,$1D

>0b28	 1d 1e 1f 20 20 21 22 23  	  .BYTE $1D,$1E,$1F,$20,$20,$21,$22,$23

>0b30	 24 24 25 26 27 28 28 29  	  .BYTE $24,$24,$25,$26,$27,$28,$28,$29

>0b38	 2a 2b 2c 2c 2d 2e 2f 30  	  .BYTE $2A,$2B,$2C,$2C,$2D,$2E,$2F,$30

>0b40	 30 31 32 33 34 35 35 36  	  .BYTE $30,$31,$32,$33,$34,$35,$35,$36

>0b48	 37 38 39 3a 3a 3b 3c 3d  	  .BYTE $37,$38,$39,$3A,$3A,$3B,$3C,$3D

>0b50	 3e 3f 40 41 41 42 43 44  	  .BYTE $3E,$3F,$40,$41,$41,$42,$43,$44

>0b58	 45 46 47 48 48 49 4a 4b  	  .BYTE $45,$46,$47,$48,$48,$49,$4A,$4B

>0b60	 4c 4d 4e 4f 50 51 51 52  	  .BYTE $4C,$4D,$4E,$4F,$50,$51,$51,$52

>0b68	 53 54 55 56 57 58 59 5a  	  .BYTE $53,$54,$55,$56,$57,$58,$59,$5A

>0b70	 5b 5c 5d 5e 5e 5f 60 61  	  .BYTE $5B,$5C,$5D,$5E,$5E,$5F,$60,$61

>0b78	 62 63 64 65 66 67 68 69  	  .BYTE $62,$63,$64,$65,$66,$67,$68,$69

>0b80	 6a 6b 6c 6d 6e 6f 70 71  	  .BYTE $6A,$6B,$6C,$6D,$6E,$6F,$70,$71

>0b88	 72 73 74 75 76 77 78 79  	  .BYTE $72,$73,$74,$75,$76,$77,$78,$79

>0b90	 7a 7b 7c 7d 7e 7f 80 81  	  .BYTE $7A,$7B,$7C,$7D,$7E,$7F,$80,$81

>0b98	 82 83 84 85 87 88 89 8a  	  .BYTE $82,$83,$84,$85,$87,$88,$89,$8A

>0ba0	 8b 8c 8d 8e 8f 90 91 92  	  .BYTE $8B,$8C,$8D,$8E,$8F,$90,$91,$92

>0ba8	 93 95 96 97 98 99 9a 9b  	  .BYTE $93,$95,$96,$97,$98,$99,$9A,$9B

>0bb0	 9c 9d 9f a0 a1 a2 a3 a4  	  .BYTE $9C,$9D,$9F,$A0,$A1,$A2,$A3,$A4

>0bb8	 a5 a6 a8 a9 aa ab ac ad  	  .BYTE $A5,$A6,$A8,$A9,$AA,$AB,$AC,$AD

>0bc0	 af b0 b1 b2 b3 b4 b6 b7  	  .BYTE $AF,$B0,$B1,$B2,$B3,$B4,$B6,$B7

>0bc8	 b8 b9 ba bc bd be bf c0  	  .BYTE $B8,$B9,$BA,$BC,$BD,$BE,$BF,$C0

>0bd0	 c2 c3 c4 c5 c6 c8 c9 ca  	  .BYTE $C2,$C3,$C4,$C5,$C6,$C8,$C9,$CA

>0bd8	 cb cd ce cf d0 d2 d3 d4  	  .BYTE $CB,$CD,$CE,$CF,$D0,$D2,$D3,$D4

>0be0	 d6 d7 d8 d9 db dc dd de  	  .BYTE $D6,$D7,$D8,$D9,$DB,$DC,$DD,$DE

>0be8	 e0 e1 e2 e4 e5 e6 e8 e9  	  .BYTE $E0,$E1,$E2,$E4,$E5,$E6,$E8,$E9

>0bf0	 ea ec ed ee f0 f1 f2 f4  	  .BYTE $EA,$EC,$ED,$EE,$F0,$F1,$F2,$F4

>0bf8	 f5 f6 f8 f9 fa fc fd ff  	  .BYTE $F5,$F6,$F8,$F9,$FA,$FC,$FD,$FF


.0c00					sin_lsb

>0c00	 92 2e f7 60 c4 14 47 79  	  .BYTE $92,$2E,$F7,$60,$C4,$14,$47,$79

>0c08	 ab dd 08 21 3a 53 6c 85  	  .BYTE $AB,$DD,$08,$21,$3A,$53,$6C,$85

>0c10	 9e b7 d0 e9 01 0d 1a 26  	  .BYTE $9E,$B7,$D0,$E9,$01,$0D,$1A,$26

>0c18	 33 3f 4c 58 64 71 7d 89  	  .BYTE $33,$3F,$4C,$58,$64,$71,$7D,$89

>0c20	 96 a2 ae bb c7 d3 df ec  	  .BYTE $96,$A2,$AE,$BB,$C7,$D3,$DF,$EC

>0c28	 f8 02 08 0e 14 1a 20 26  	  .BYTE $F8,$02,$08,$0E,$14,$1A,$20,$26

>0c30	 2c 32 38 3e 44 4a 50 56  	  .BYTE $2C,$32,$38,$3E,$44,$4A,$50,$56

>0c38	 5c 62 68 6e 73 79 7f 85  	  .BYTE $5C,$62,$68,$6E,$73,$79,$7F,$85

>0c40	 8b 91 96 9c a2 a8 ad b3  	  .BYTE $8B,$91,$96,$9C,$A2,$A8,$AD,$B3

>0c48	 b9 be c4 ca cf d5 da e0  	  .BYTE $B9,$BE,$C4,$CA,$CF,$D5,$DA,$E0

>0c50	 e5 eb f1 f6 fb 00 03 06  	  .BYTE $E5,$EB,$F1,$F6,$FB,$00,$03,$06

>0c58	 09 0b 0e 11 13 16 19 1b  	  .BYTE $09,$0B,$0E,$11,$13,$16,$19,$1B

>0c60	 1e 20 23 26 28 2b 2d 30  	  .BYTE $1E,$20,$23,$26,$28,$2B,$2D,$30

>0c68	 32 35 37 3a 3c 3f 41 44  	  .BYTE $32,$35,$37,$3A,$3C,$3F,$41,$44

>0c70	 46 48 4b 4d 50 52 54 57  	  .BYTE $46,$48,$4B,$4D,$50,$52,$54,$57

>0c78	 59 5b 5e 60 62 64 67 69  	  .BYTE $59,$5B,$5E,$60,$62,$64,$67,$69

>0c80	 6b 6d 70 72 74 76 78 7a  	  .BYTE $6B,$6D,$70,$72,$74,$76,$78,$7A

>0c88	 7c 7f 81 83 85 87 89 8b  	  .BYTE $7C,$7F,$81,$83,$85,$87,$89,$8B

>0c90	 8d 8f 91 93 95 97 98 9a  	  .BYTE $8D,$8F,$91,$93,$95,$97,$98,$9A

>0c98	 9c 9e a0 a2 a4 a5 a7 a9  	  .BYTE $9C,$9E,$A0,$A2,$A4,$A5,$A7,$A9

>0ca0	 ab ac ae b0 b1 b3 b5 b6  	  .BYTE $AB,$AC,$AE,$B0,$B1,$B3,$B5,$B6

>0ca8	 b8 ba bb bd be c0 c1 c3  	  .BYTE $B8,$BA,$BB,$BD,$BE,$C0,$C1,$C3

>0cb0	 c4 c6 c7 c9 ca cb cd ce  	  .BYTE $C4,$C6,$C7,$C9,$CA,$CB,$CD,$CE

>0cb8	 d0 d1 d2 d3 d5 d6 d7 d8  	  .BYTE $D0,$D1,$D2,$D3,$D5,$D6,$D7,$D8

>0cc0	 da db dc dd de df e0 e2  	  .BYTE $DA,$DB,$DC,$DD,$DE,$DF,$E0,$E2

>0cc8	 e3 e4 e5 e6 e7 e8 e9 e9  	  .BYTE $E3,$E4,$E5,$E6,$E7,$E8,$E9,$E9

>0cd0	 ea eb ec ed ee ef ef f0  	  .BYTE $EA,$EB,$EC,$ED,$EE,$EF,$EF,$F0

>0cd8	 f1 f2 f3 f3 f4 f5 f5 f6  	  .BYTE $F1,$F2,$F3,$F3,$F4,$F5,$F5,$F6

>0ce0	 f6 f7 f8 f8 f9 f9 fa fa  	  .BYTE $F6,$F7,$F8,$F8,$F9,$F9,$FA,$FA

>0ce8	 fb fb fc fc fc fd fd fd  	  .BYTE $FB,$FB,$FC,$FC,$FC,$FD,$FD,$FD

>0cf0	 fe fe fe fe ff ff ff ff  	  .BYTE $FE,$FE,$FE,$FE,$FF,$FF,$FF,$FF

>0cf8	 ff 00 00 00 00 00 00 00  	  .BYTE $FF,$00,$00,$00,$00,$00,$00,$00


.0d00					sin_msb

>0d00	 dc e4 e4 e8 e8 ec ec ec  	  .BYTE $DC,$E4,$E4,$E8,$E8,$EC,$EC,$EC

>0d08	 ec ec f0 f0 f0 f0 f0 f0  	  .BYTE $EC,$EC,$F0,$F0,$F0,$F0,$F0,$F0

>0d10	 f0 f0 f0 f0 f4 f4 f4 f4  	  .BYTE $F0,$F0,$F0,$F0,$F4,$F4,$F4,$F4

>0d18	 f4 f4 f4 f4 f4 f4 f4 f4  	  .BYTE $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4

>0d20	 f4 f4 f4 f4 f4 f4 f4 f4  	  .BYTE $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4

>0d28	 f4 f8 f8 f8 f8 f8 f8 f8  	  .BYTE $F4,$F8,$F8,$F8,$F8,$F8,$F8,$F8

>0d30	 f8 f8 f8 f8 f8 f8 f8 f8  	  .BYTE $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8

>0d38	 f8 f8 f8 f8 f8 f8 f8 f8  	  .BYTE $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8

>0d40	 f8 f8 f8 f8 f8 f8 f8 f8  	  .BYTE $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8

>0d48	 f8 f8 f8 f8 f8 f8 f8 f8  	  .BYTE $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8

>0d50	 f8 f8 f8 f8 f8 fc fc fc  	  .BYTE $F8,$F8,$F8,$F8,$F8,$FC,$FC,$FC

>0d58	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0d60	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0d68	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0d70	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0d78	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0d80	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0d88	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0d90	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0d98	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0da0	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0da8	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0db0	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0db8	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0dc0	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0dc8	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0dd0	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0dd8	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0de0	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0de8	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0df0	 fc fc fc fc fc fc fc fc  	  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC

>0df8	 fc 00 00 00 00 00 00 00  	  .BYTE $FC,$00,$00,$00,$00,$00,$00,$00


.0e00					horizon_columns_lo

>0e00	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA 

>0e08	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e10	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e18	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e20	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e28	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e30	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e38	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e40	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e48	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e50	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e58	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e60	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e68	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

>0e70	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA


.0e78					ver_pos_hi

>0e78	 00 00 00 00 00 00 00 00  	  .BYTE $00,$00,$00,$00,$00,$00,$00,$00

>0e80	 01 01 01 01 01 01 01 01  	  .BYTE $01,$01,$01,$01,$01,$01,$01,$01

>0e88	 02 02 02 02 02 02 02 02  	  .BYTE $02,$02,$02,$02,$02,$02,$02,$02


.0e90					horizon_columns_hi

>0e90	 03 03 03 03 03 03 03 03  	  .BYTE $03,$03,$03,$03,$03,$03,$03,$03

>0e98	 05 05 05 05 05 05 05 05  	  .BYTE $05,$05,$05,$05,$05,$05,$05,$05

>0ea0	 06 06 06 06 06 06 06 06  	  .BYTE $06,$06,$06,$06,$06,$06,$06,$06

>0ea8	 07 07 07 07 07 07 07 07  	  .BYTE $07,$07,$07,$07,$07,$07,$07,$07

>0eb0	 08 08 08 08 08 08 08 08  	  .BYTE $08,$08,$08,$08,$08,$08,$08,$08

>0eb8	 0a 0a 0a 0a 0a 0a 0a 0a  	  .BYTE $0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A

>0ec0	 0b 0b 0b 0b 0b 0b 0b 0b  	  .BYTE $0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B

>0ec8	 0c 0c 0c 0c 0c 0c 0c 0c  	  .BYTE $0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C

>0ed0	 0d 0d 0d 0d 0d 0d 0d 0d  	  .BYTE $0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D

>0ed8	 0f 0f 0f 0f 0f 0f 0f 0f  	  .BYTE $0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F

>0ee0	 10 10 10 10 10 10 10 10  	  .BYTE $10,$10,$10,$10,$10,$10,$10,$10

>0ee8	 11 11 11 11 11 11 11 11  	  .BYTE $11,$11,$11,$11,$11,$11,$11,$11

>0ef0	 12 12 12 12 12 12 12 12  	  .BYTE $12,$12,$12,$12,$12,$12,$12,$12

>0ef8	 14 14 14 14 14 14 14 14  	  .BYTE $14,$14,$14,$14,$14,$14,$14,$14

>0f00	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA


.0f08					ver_pos_lo

>0f08	 00 01 02 03 04 05 06 07  	  .BYTE $00,$01,$02,$03,$04,$05,$06,$07

>0f10	 40 41 42 43 44 45 46 47  	  .BYTE $40,$41,$42,$43,$44,$45,$46,$47

>0f18	 80 81 82 83 84 85 86 87  	  .BYTE $80,$81,$82,$83,$84,$85,$86,$87

>0f20	 c0 c1 c2 c3 c4 c5 c6 c7  	  .BYTE $C0,$C1,$C2,$C3,$C4,$C5,$C6,$C7

>0f28	 00 01 02 03 04 05 06 07  	  .BYTE $00,$01,$02,$03,$04,$05,$06,$07

>0f30	 40 41 42 43 44 45 46 47  	  .BYTE $40,$41,$42,$43,$44,$45,$46,$47

>0f38	 80 81 82 83 84 85 86 87  	  .BYTE $80,$81,$82,$83,$84,$85,$86,$87

>0f40	 c0 c1 c2 c3 c4 c5 c6 c7  	  .BYTE $C0,$C1,$C2,$C3,$C4,$C5,$C6,$C7

>0f48	 00 01 02 03 04 05 06 07  	  .BYTE $00,$01,$02,$03,$04,$05,$06,$07

>0f50	 40 41 42 43 44 45 46 47  	  .BYTE $40,$41,$42,$43,$44,$45,$46,$47

>0f58	 80 81 82 83 84 85 86 87  	  .BYTE $80,$81,$82,$83,$84,$85,$86,$87

>0f60	 c0 c1 c2 c3 c4 c5 c6 c7  	  .BYTE $C0,$C1,$C2,$C3,$C4,$C5,$C6,$C7

>0f68	 00 01 02 03 04 05 06 07  	  .BYTE $00,$01,$02,$03,$04,$05,$06,$07

>0f70	 40 41 42 43 44 45 46 47  	  .BYTE $40,$41,$42,$43,$44,$45,$46,$47

>0f78	 80 81 82 83 84 85 86 87  	  .BYTE $80,$81,$82,$83,$84,$85,$86,$87

>0f80	 c0 c1 c2 c3 c4 c5 c6 c7  	  .BYTE $C0,$C1,$C2,$C3,$C4,$C5,$C6,$C7

>0f88	 00 01 02 03 04 05 06 07  	  .BYTE $00,$01,$02,$03,$04,$05,$06,$07

>0f90	 aa aa aa aa aa aa aa aa  	  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA


.0f98	 85 0f		sta $0f		FP_DIVIDE	STA		FP_DIVIDE_HI	; inputs = X-(LO) + Y-(HI) + A (HI) + FP_MULTILPLY_LO - outputs = AY

.0f9a	 b9 00 0a	lda $0a00,y				LDA 	LOG_TABLE,Y

.0f9d	 a4 0e		ldy $0e					LDY 	FP_DIVIDE_LO

.0f9f	 38		sec					SEC 

.0fa0	 f9 00 0a	sbc $0a00,y				SBC 	LOG_TABLE,Y

.0fa3	 a8		tay					TAY

.0fa4	 8a		txa					TXA

.0fa5	 be 00 0b	ldx $0b00,y				LDX 	EXP_TABLE,Y

.0fa8	 09 02		ora #$02				ORA 	#$02

.0faa	 b0 03		bcs $0faf				BCS 	_FP_DIV_CNT

.0fac	 e9 03		sbc #$03						SBC 	#$03	; subtract 4?

.0fae	 38		sec							SEC 

.0faf	 e5 0f		sbc $0f		_FP_DIV_CNT SBC 	FP_DIVIDE_HI

.0fb1	 29 fd		and #$fd				AND 	#$FD

.0fb3	 60		rts					RTS

.0fb4	 85 0f		sta $0f		FP_MULTIPLY	STA		FP_MULTIPLY_HI	; inputs = X-(LO) + Y-(HI) + A (HI) + FP_MULTILPLY_LO - outputs = AY

.0fb6	 bd 00 0a	lda $0a00,x				LDA 	LOG_TABLE,X		

.0fb9	 a6 0e		ldx $0e					LDX 	FP_MULTIPLY_LO

.0fbb	 18		clc					CLC 

.0fbc	 7d 00 0a	adc $0a00,x				ADC 	LOG_TABLE,X

.0fbf	 aa		tax					TAX 

.0fc0	 98		tya					TYA 

.0fc1	 bc 00 0b	ldy $0b00,x				LDY 	EXP_TABLE,X

.0fc4	 90 03		bcc $0fc9				BCC 	_FP_MUL_CNT

.0fc6	 69 03		adc #$03						ADC 	#$03	; add 4?

.0fc8	 18		clc							CLC 

.0fc9	 65 0f		adc $0f		_FP_MUL_CNT	ADC 	FP_MULTIPLY_HI

.0fcb	 29 fd		and #$fd				AND 	#$FD

.0fcd	 60		rts					RTS 

.0fce	 bd 00 0a	lda $0a00,x	FPMUL   LDA LOG_TABLE,X	; fpMul - ; Input:  [08] = fp multiplier ;         XY   = fp multiplicand ; Output: [08] and XY = result   

.0fd1	 a6 08		ldx $08		        LDX ab08

.0fd3	 18		clc		        CLC 

.0fd4	 7d 00 0a	adc $0a00,x	ab8300  ADC LOG_TABLE,X

.0fd7	 aa		tax		        TAX 

.0fd8	 98		tya		        TYA 

.0fd9	 90 03		bcc $0fde	        BCC b830A

.0fdb	 69 03		adc #$03				ADC #$03

.0fdd	 18		clc					CLC 

.0fde	 65 09		adc $09		b830A	ADC ab09

.0fe0	 70 0c		bvs $0fee	        BVS MATH_LIMIT

.0fe2	 29 fd		and #$fd	        AND #$FD

.0fe4	 85 09		sta $09		        STA ab09

.0fe6	 a8		tay		        TAY 

.0fe7	 bd 00 0b	lda $0b00,x	        LDA EXP_TABLE,X

.0fea	 aa		tax		        TAX 

.0feb	 85 08		sta $08		        STA ab08

.0fed	 60		rts		        RTS 

.0fee	 10 0c		bpl $0ffc	MATH_LIMIT	BPL b8328

.0ff0	 29 01		and #$01				AND #$01

.0ff2	 09 78		ora #$78				ORA #$78

.0ff4	 a8		tay					TAY 

.0ff5	 a2 00		ldx #$00				LDX #$00

.0ff7	 86 08		stx $08					STX ab08

.0ff9	 84 09		sty $09					STY ab09

.0ffb	 60		rts					RTS 

.0ffc	 29 01		and #$01	b8328		AND #$01

.0ffe	 09 84		ora #$84				ORA #$84

.1000	 a8		tay		b832C   	TAY 

.1001	 a2 00		ldx #$00				LDX #$00

.1003	 86 08		stx $08					STX ab08

.1005	 84 09		sty $09					STY ab09

.1007	 60		rts					RTS 

.1008	 84 06		sty $06		FPDIV 		STY		ab06	; fpDiv - Input:  [08] = fp divisor - XY   = fp dividend - Output: [08] and XY = result

.100a	 a4 08		ldy $08					LDY 	ab08

.100c	 b9 00 0a	lda $0a00,y				LDA 	LOG_TABLE,Y

.100f	 38		sec					SEC 

.1010	 fd 00 0a	sbc $0a00,x				SBC 	LOG_TABLE,X

.1013	 aa		tax					TAX 

.1014	 a5 09		lda $09					LDA 	ab09

.1016	 09 02		ora #$02				ORA	#$02

.1018	 b0 03		bcs $101d				BCS 	b8349

.101a	 e9 03		sbc #$03					SBC 	#$03

.101c	 38		sec						SEC 

.101d	 e5 06		sbc $06		b8349  		SBC 	ab06

.101f	 70 cd		bvs $0fee				BVS 	MATH_LIMIT

.1021	 29 fd		and #$fd				AND 	#$FD

.1023	 85 09		sta $09					STA 	ab09

.1025	 a8		tay					TAY

.1026	 bd 00 0b	lda $0b00,x				LDA 	EXP_TABLE,X

.1029	 aa		tax					TAX

.102a	 85 08		sta $08					STA 	ab08

.102c	 60		rts					RTS 

.102d	 a5 18		lda $18		FPADD_CONT	LDA ab18	 ; ($838B entry point)   

.102f	 4a		lsr					LSR 

.1030	 b0 15		bcs $1047				BCS b8373

.1032	 8a		txa					TXA 

.1033	 65 08		adc $08					ADC ab08

.1035	 6a		ror					ROR 

.1036	 c8		iny					INY 

.1037	 c8		iny					INY 

.1038	 c8		iny					INY 

.1039	 c8		iny					INY 

.103a	 aa		tax					TAX 

.103b	 85 08		sta $08					STA ab08

.103d	 84 09		sty $09					STY ab09

.103f	 60		rts					RTS 

.1040	 98		tya		b836C   TYA 

.1041	 0a		asl		        ASL 

.1042	 90 5c		bcc $10a0	        BCC b83CC

.1044	 4c ed 10	jmp $10ed	        JMP j8419

.1047	 8a		txa		b8373   TXA 

.1048	 e5 08		sbc $08		        SBC ab08

.104a	 f0 0b		beq $1057	        BEQ b8383

.104c	 b0 5b		bcs $10a9	        BCS b83D5

.104e	 a4 09		ldy $09		        LDY ab09

.1050	 49 ff		eor #$ff	        EOR #$FF

.1052	 69 01		adc #$01	        ADC #$01

.1054	 4c a9 10	jmp $10a9	        JMP b83D5

.1057	 98		tya		b8383   TYA 

.1058	 38		sec		        SEC 

.1059	 e9 24		sbc #$24	        SBC #$24

.105b	 70 9f		bvs $0ffc	        BVS b8328

.105d	 50 a1		bvc $1000	        BVC b832C

.105f	 98		tya		FP_ADD	TYA 

.1060	 38		sec		        SEC 

.1061	 e5 09		sbc $09		        SBC ab09

.1063	 70 db		bvs $1040	        BVS b836C

.1065	 85 18		sta $18		        STA ab18

.1067	 69 01		adc #$01	        ADC #$01

.1069	 70 d5		bvs $1040	        BVS b836C

.106b	 30 5c		bmi $10c9	        BMI b83F5

.106d	 4a		lsr		        LSR 

.106e	 4a		lsr		        LSR 

.106f	 f0 bc		beq $102d	        BEQ FPADD_CONT

.1071	 c9 09		cmp #$09	        CMP #$09

.1073	 b0 2b		bcs $10a0	        BCS b83CC

.1075	 49 0f		eor #$0f	        EOR #$0F

.1077	 8d 7f 10	sta $107f	        STA ab83AB

.107a	 a5 08		lda $08		        LDA ab08

.107c	 38		sec		        SEC 

.107d	 6a		ror		        ROR 

=107f					ab83AB   =*+$01

.107e	 d0 07		bne $1087	        BNE b83B3

.1080	 ea		nop		        NOP 

.1081	 ea		nop		        NOP 

.1082	 ea		nop		        NOP 

.1083	 ea		nop		        NOP 

.1084	 ea		nop		        NOP 

.1085	 ea		nop		        NOP 

.1086	 ea		nop		        NOP 

.1087	 4a		lsr		b83B3   LSR 

.1088	 4a		lsr		        LSR 

.1089	 4a		lsr		        LSR 

.108a	 4a		lsr		        LSR 

.108b	 4a		lsr		        LSR 

.108c	 4a		lsr		        LSR 

.108d	 4a		lsr		        LSR 

.108e	 85 06		sta $06		        STA ab06

.1090	 a5 18		lda $18		        LDA ab18

.1092	 4a		lsr		        LSR 

.1093	 8a		txa		        TXA 

.1094	 b0 0f		bcs $10a5	        BCS b83D1

.1096	 65 06		adc $06		b83C2   ADC ab06

.1098	 90 05		bcc $109f	        BCC b83CB

.109a	 4a		lsr		        LSR 

.109b	 c8		iny		        INY 

.109c	 c8		iny		        INY 

.109d	 c8		iny		        INY 

.109e	 c8		iny		        INY 

.109f	 aa		tax		b83CB   TAX 

.10a0	 86 08		stx $08		b83CC   STX ab08

.10a2	 84 09		sty $09		        STY ab09

.10a4	 60		rts		        RTS 

.10a5	 e5 06		sbc $06		b83D1   SBC ab06

.10a7	 b0 f6		bcs $109f	        BCS b83CB

.10a9	 84 06		sty $06		b83D5   STY ab06

.10ab	 a0 00		ldy #$00	        LDY #$00

.10ad	 0a		asl		b83D9   ASL 

.10ae	 88		dey		        DEY 

.10af	 90 fc		bcc $10ad	        BCC b83D9

.10b1	 aa		tax		        TAX 

.10b2	 98		tya		        TYA 

.10b3	 0a		asl		        ASL 

.10b4	 0a		asl		        ASL 

.10b5	 18		clc		        CLC 

.10b6	 65 06		adc $06		        ADC ab06

.10b8	 70 06		bvs $10c0	        BVS b83EC

.10ba	 a8		tay		        TAY 

.10bb	 86 08		stx $08		        STX ab08

.10bd	 84 09		sty $09		        STY ab09

.10bf	 60		rts		        RTS 

.10c0	 a2 d4		ldx #$d4	b83EC   LDX #<p8400

.10c2	 a0 10		ldy #$10	        LDY #>p8400

.10c4	 86 08		stx $08		        STX ab08

.10c6	 84 09		sty $09		f83F2   STY ab09

.10c8	 60		rts		        RTS 

.10c9	 c9 e0		cmp #$e0	b83F5   CMP #$E0

.10cb	 90 20		bcc $10ed	        BCC j8419

.10cd	 4a		lsr		        LSR 

.10ce	 4a		lsr		        LSR 

.10cf	 29 07		and #$07	        AND #$07

.10d1	 8d d8 10	sta $10d8	        STA ab8404

.10d4	 8a		txa		p8400   TXA 

.10d5	 38		sec		        SEC 

.10d6	 6a		ror		        ROR 

=10d8					ab8404   =*+$01

.10d7	 d0 00		bne $10d9	        BNE b8405

.10d9	 4a		lsr		b8405  	LSR 

.10da	 4a		lsr		        LSR 

.10db	 4a		lsr		        LSR 

.10dc	 4a		lsr		        LSR 

.10dd	 4a		lsr		        LSR 

.10de	 4a		lsr		        LSR 

.10df	 4a		lsr		        LSR 

.10e0	 85 06		sta $06		        STA ab06

.10e2	 a4 09		ldy $09		        LDY ab09

.10e4	 a5 18		lda $18		        LDA ab18

.10e6	 4a		lsr		        LSR 

.10e7	 a5 08		lda $08		        LDA ab08

.10e9	 90 ab		bcc $1096	        BCC b83C2

.10eb	 b0 b8		bcs $10a5	        BCS b83D1

.10ed	 a6 08		ldx $08		j8419  	LDX ab08

.10ef	 a4 09		ldy $09		        LDY ab09

.10f1	 60		rts		        RTS 

.10f2					fpto8bit
.10f2	 98		tya			TYA 

.10f3	 30 25		bmi $111a		BMI	b849F

.10f5	 4a		lsr			LSR 

.10f6					ab847b
.10f6	 4a		lsr			LSR 

.10f7	 c9 07		cmp #$07		CMP 	#$07

.10f9	 b0 26		bcs $1121		BCS 	b84A6

.10fb	 8d 02 11	sta $1102		STA 	ab8487

.10fe					ab8483
.10fe	 8a		txa			TXA 

.10ff	 38		sec			SEC 

.1100	 6a		ror			ROR 

=1102					ab8487   =*+$01

.1101	 d0 06		bne $1109		BNE	b848E

.1103	 4a		lsr			LSR 

.1104	 4a		lsr			LSR 

.1105	 4a		lsr			LSR 

.1106	 4a		lsr			LSR 

.1107	 4a		lsr			LSR 

.1108	 4a		lsr			LSR 

.1109					b848e
.1109	 4a		lsr			LSR 

.110a					b848f
.110a	 69 00		adc #$00		ADC	#$00

.110c	 30 12		bmi $1120		BMI	b84A5

.110e	 aa		tax			TAX 

.110f	 98		tya			TYA 

.1110	 4a		lsr			LSR 

.1111	 8a		txa			TXA 

.1112	 90 05		bcc $1119		BCC	b849E

.1114	 49 ff		eor #$ff		EOR	#$FF

.1116	 69 00		adc #$00		ADC	#$00

.1118	 18		clc			CLC 

.1119					b849e
.1119	 60		rts			RTS 

.111a					b849f
.111a	 c9 fc		cmp #$fc		CMP	#$FC

.111c	 a9 00		lda #$00		LDA	#$00

.111e	 f0 ea		beq $110a		BEQ	b848F

.1120					b84a5
.1120	 38		sec			SEC 

.1121					b84a6
.1121	 60		rts			RTS 

.1122					s84a7
.1122					fpto16bit
.1122	 98		tya			TYA 

.1123	 30 57		bmi $117c		BMI	b8501

.1125	 4a		lsr			LSR 

.1126	 4a		lsr			LSR 

.1127	 c9 0f		cmp #$0f		CMP	#$0F

.1129	 b0 f6		bcs $1121		BCS	b84A6

.112b	 85 06		sta $06			STA	ab06

.112d	 0a		asl			ASL 

.112e	 65 06		adc $06			ADC	ab06

.1130	 8d 3d 11	sta $113d		STA	ab84C2

.1133	 a9 00		lda #$00		LDA	#$00

.1135	 85 06		sta $06			STA	ab06

.1137	 8a		txa			TXA 

.1138	 38		sec			SEC 

.1139	 6a		ror			ROR 

.113a	 66 06		ror $06			ROR	ab06

=113d					ab84C2   =*+$01

.113c	 90 2a		bcc $1168		BCC	b84ED

.113e	 4a		lsr			LSR 

.113f					j84c4
.113f	 66 06		ror $06			ROR	ab06

.1141	 4a		lsr			LSR 

.1142	 66 06		ror $06			ROR	ab06

.1144	 4a		lsr			LSR 

.1145	 66 06		ror $06			ROR	ab06

.1147	 4a		lsr			LSR 

.1148	 66 06		ror $06			ROR	ab06

.114a	 4a		lsr			LSR 

.114b	 66 06		ror $06			ROR	ab06

.114d	 4a		lsr			LSR 

.114e	 66 06		ror $06			ROR	ab06

.1150	 4a		lsr			LSR 

.1151	 66 06		ror $06			ROR	ab06

.1153	 4a		lsr			LSR 

.1154					b84d9
.1154	 66 06		ror $06			ROR	ab06

.1156	 4a		lsr			LSR 

.1157	 66 06		ror $06			ROR	ab06

.1159	 4a		lsr			LSR 

.115a	 66 06		ror $06			ROR	ab06

.115c	 4a		lsr			LSR 

.115d	 66 06		ror $06			ROR	ab06

.115f	 4a		lsr			LSR 

.1160	 66 06		ror $06			ROR	ab06

.1162	 4a		lsr			LSR 

.1163	 66 06		ror $06			ROR	ab06

.1165	 4a		lsr			LSR 

.1166	 66 06		ror $06			ROR	ab06

.1168					b84ed
.1168	 4a		lsr			LSR 

.1169	 66 06		ror $06			ROR	ab06

.116b	 aa		tax			TAX 

.116c	 98		tya			TYA 

.116d	 a4 06		ldy $06			LDY	ab06

.116f	 4a		lsr			LSR 

.1170	 90 09		bcc $117b		BCC	b8500

.1172	 8a		txa			TXA 

.1173	 49 ff		eor #$ff		EOR	#$FF

.1175	 aa		tax			TAX 

.1176	 98		tya			TYA 

.1177	 49 ff		eor #$ff		EOR	#$FF

.1179	 a8		tay			TAY 

.117a	 18		clc			CLC 

.117b					b8500
.117b	 60		rts			RTS 

.117c					b8501
.117c	 98		tya			TYA 

.117d	 4a		lsr			LSR 

.117e	 90 06		bcc $1186		BCC	b850B

.1180	 a2 ff		ldx #$ff		LDX	#$FF

.1182	 a0 ff		ldy #$ff		LDY	#$FF

.1184	 18		clc			CLC 

.1185	 60		rts			RTS 

.1186					b850b
.1186	 a2 00		ldx #$00		LDX	#$00

.1188	 a0 00		ldy #$00	        LDY	#$00

.118a	 60		rts		        RTS 

.118b					bit24tofp
.118b	 85 06		sta $06			STA ab06

.118d	 09 00		ora #$00	        ORA #$00

.118f	 10 11		bpl $11a2	        BPL b8527

.1191	 a9 00		lda #$00	        LDA #$00

.1193	 38		sec		        SEC 

.1194	 e5 07		sbc $07		        SBC ab07

.1196	 85 07		sta $07		        STA ab07

.1198	 8a		txa		        TXA 

.1199	 49 ff		eor #$ff	        EOR #$FF

.119b	 69 00		adc #$00	        ADC #$00

.119d	 aa		tax		        TAX 

.119e	 a9 00		lda #$00	        LDA #$00

.11a0	 e5 06		sbc $06		        SBC ab06

.11a2					b8527
.11a2	 d0 0f		bne $11b3		BNE b8538

.11a4	 8a		txa		        TXA 

.11a5	 d0 23		bne $11ca	        BNE b854F

.11a7	 a5 07		lda $07		        LDA ab07

.11a9	 f0 23		beq $11ce	        BEQ b8553

.11ab	 a2 00		ldx #$00	        LDX #$00

.11ad	 86 07		stx $07		        STX ab07

.11af	 a2 08		ldx #$08	        LDX #$08

.11b1	 d0 04		bne $11b7	        BNE b853C

.11b3					b8538
.11b3	 86 07		stx $07			STX ab07

.11b5	 a2 18		ldx #$18	        LDX #$18

.11b7					b853c
.11b7	 ca		dex			DEX 

.11b8	 06 07		asl $07		        ASL ab07

.11ba	 2a		rol		        ROL 

.11bb	 90 fa		bcc $11b7	        BCC b853C

.11bd	 85 08		sta $08		        STA ab08

.11bf	 8a		txa		        TXA 

.11c0	 0a		asl		        ASL 

.11c1	 06 06		asl $06		        ASL ab06

.11c3	 2a		rol		        ROL 

.11c4	 aa		tax		        TAX 

.11c5	 86 09		stx $09		        STX ab09

.11c7	 a5 08		lda $08		        LDA ab08

.11c9	 60		rts		        RTS 

.11ca					b854f
.11ca	 a2 10		ldx #$10		LDX #$10

.11cc	 d0 e9		bne $11b7	        BNE b853C

.11ce					b8553
.11ce	 a9 00		lda #$00		LDA #<pE000

.11d0	 a2 e0		ldx #$e0	        LDX #>pE000

.11d2	 85 08		sta $08		        STA ab08

.11d4	 86 09		stx $09		        STX ab09

.11d6	 60		rts		        RTS 

.11d7	 48		pha		IRQ2	PHA 

.11d8	 a9 7e		lda #$7e	        LDA #$7E

.11da	 8d 18 d0	sta $d018	        STA $D018    ;VIC Memory Control Register

.11dd	 a9 1b		lda #$1b	        LDA #$1B

.11df	 8d 11 d0	sta $d011	        STA $D011    ;VIC Control Register 1

.11e2	 a9 08		lda #$08	        LDA #$08

.11e4	 8d 16 d0	sta $d016	        STA $D016    ;VIC Control Register 2

.11e7	 a9 d4		lda #$d4	        LDA #<IRQ1

.11e9	 8d fe ff	sta $fffe	        STA fFFFE    ;IRQ

.11ec	 a9 12		lda #$12	        LDA #>IRQ1

.11ee	 8d ff ff	sta $ffff	        STA fFFFF    ;IRQ

.11f1	 a9 00		lda #$00	        LDA #$00

.11f3	 8d 12 d0	sta $d012	        STA $D012    ;Raster Position

.11f6	 a9 01		lda #$01	        LDA #$01

.11f8	 8d 19 d0	sta $d019	        STA $D019    ;VIC Interrupt Request Register (IRR)

.11fb	 68		pla				PLA 

.11fc	 40		rti		        RTI 

.1200					draw_screen_column_backwards
.1200	 a0 30		ldy #$30	        LDY #$30

.1202	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1204	 a0 28		ldy #$28			LDY #$28

.1206	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1208	 a0 20		ldy #$20	        LDY #$20

.120a	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.120c	 a0 18		ldy #$18	        LDY #$18

.120e	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1210	 a0 10		ldy #$10	        LDY #$10

.1212	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1214	 a0 08		ldy #$08	        LDY #$08

.1216	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1218	 a0 00		ldy #$00	        LDY #$00

.121a	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.121c	 a0 f8		ldy #$f8	        LDY #$F8

.121e	 c6 03		dec $03		        DEC SCREEN_POS_HI

.1220	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1222	 a0 f0		ldy #$f0	        LDY #$F0

.1224	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1226	 a0 e8		ldy #$e8	        LDY #$E8

.1228	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.122a	 a0 e0		ldy #$e0	        LDY #$E0

.122c	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.122e	 a0 d8		ldy #$d8	        LDY #$D8

.1230	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1232	 a0 d0		ldy #$d0	        LDY #$D0

.1234	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1236	 a0 c8		ldy #$c8	        LDY #$C8

.1238	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.123a	 a0 c0		ldy #$c0	        LDY #$C0

.123c	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.123e	 a0 b8		ldy #$b8	        LDY #$B8

.1240	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1242	 a0 b0		ldy #$b0	        LDY #$B0

.1244	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1246	 a0 a8		ldy #$a8	        LDY #$A8

.1248	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.124a	 a0 a0		ldy #$a0	        LDY #$A0

.124c	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.124e	 a0 98		ldy #$98	        LDY #$98

.1250	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1252	 a0 90		ldy #$90	        LDY #$90

.1254	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1256	 a0 88		ldy #$88	        LDY #$88

.1258	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.125a	 a0 80		ldy #$80	        LDY #$80

.125c	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.125e	 a0 78		ldy #$78	        LDY #$78

.1260	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1262	 a0 70		ldy #$70	        LDY #$70

.1264	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1266	 a0 68		ldy #$68	        LDY #$68

.1268	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.126a	 a0 60		ldy #$60	        LDY #$60

.126c	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.126e	 a0 58		ldy #$58	        LDY #$58

.1270	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1272	 a0 50		ldy #$50	        LDY #$50

.1274	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1276	 a0 48		ldy #$48	        LDY #$48

.1278	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.127a	 a0 40		ldy #$40	        LDY #$40

.127c	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.127e	 a0 38		ldy #$38	        LDY #$38

.1280	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1282	 a0 30		ldy #$30	        LDY #$30

.1284	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1286	 a0 28		ldy #$28	        LDY #$28

.1288	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.128a	 a0 20		ldy #$20	        LDY #$20

.128c	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.128e	 a0 18		ldy #$18	        LDY #$18

.1290	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1292	 a0 10		ldy #$10	        LDY #$10

.1294	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1296	 a0 08		ldy #$08	        LDY #$08

.1298	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.129a	 a0 00		ldy #$00	        LDY #$00

.129c	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.129e	 60		rts		        RTS 

.129f	 8c b3 12	sty $12b3	MEMSET       STY    LSB_ONLY+1 ; store LSB count

.12a2	 e0 00		cpx #$00	             CPX    #0          ; MSB?     

.12a4	 f0 0c		beq $12b2	             BEQ    LSB_ONLY   ; no

.12a6	 a0 00		ldy #$00	             LDY    #0          ; yes so reset LSB

.12a8					msb_loop
.12a8	 91 02		sta ($02),y	LSB_LOOP      STA    (SCREEN_POS_LO),Y   ; clear whole MSB

.12aa	 88		dey		               DEY 

.12ab	 d0 fb		bne $12a8	               BNE    LSB_LOOP

.12ad	 e6 03		inc $03		              INC    SCREEN_POS_LO+1      ; inc MSB

.12af	 ca		dex		              DEX               ; dec MSB count

.12b0	 d0 f6		bne $12a8	              BNE    MSB_LOOP

.12b2	 a0 00		ldy #$00	LSB_ONLY    LDY    #0          ; LSB count 

.12b4	 f0 07		beq $12bd	             BEQ    MS_END

.12b6	 91 02		sta ($02),y	LAST_LSB_LOOP STA   (SCREEN_POS_LO),Y

.12b8	 88		dey		               DEY 

.12b9	 d0 fb		bne $12b6	               BNE   LAST_LSB_LOOP               

.12bb	 91 02		sta ($02),y	              STA   (SCREEN_POS_LO),Y     ; clear last Y (0)

.12bd	 60		rts		MS_END      RTS

.12be	 c8		iny		COS_FP	INY 

.12bf	 98		tya		SIN_FP	TYA 

.12c0	 4a		lsr				LSR 

.12c1	 90 06		bcc $12c9			BCC 	SIN_CNT

.12c3	 8a		txa						TXA 

.12c4	 49 ff		eor #$ff					EOR #$FF

.12c6	 aa		tax						TAX 

.12c7	 98		tya						TYA 

.12c8	 4a		lsr						LSR 

.12c9	 29 01		and #$01	SIN_CNT AND 	#$01

.12cb	 1d 00 0d	ora $0d00,x			ORA 	SIN_MSB,X

.12ce	 a8		tay				TAY 

.12cf	 bd 00 0c	lda $0c00,x			LDA 	SIN_LSB,X

.12d2	 aa		tax				TAX 

.12d3	 60		rts				RTS 

.12d4	 48		pha		IRQ1	PHA 

.12d5	 a5 c7		lda $c7		        LDA VIC_SCREEN_BANK

.12d7	 8d 18 d0	sta $d018	        STA $D018    ;VIC Memory Control Register

.12da	 a9 3b		lda #$3b	        LDA #$3B

.12dc	 8d 11 d0	sta $d011	        STA $D011    ;VIC Control Register 1

.12df	 a9 18		lda #$18	        LDA #$18

.12e1	 8d 16 d0	sta $d016	        STA $D016    ;VIC Control Register 2

.12e4	 a9 d7		lda #$d7	        LDA #<IRQ2

.12e6	 8d fe ff	sta $fffe	        STA fFFFE    ;IRQ

.12e9	 a9 11		lda #$11	        LDA #>IRQ2

.12eb	 8d ff ff	sta $ffff	        STA fFFFF    ;IRQ

.12ee	 a9 ba		lda #$ba	        LDA #$BA

.12f0	 8d 12 d0	sta $d012	        STA $D012    ;Raster Position

.12f3	 a9 01		lda #$01	        LDA #$01

.12f5	 8d 19 d0	sta $d019	        STA $D019    ;VIC Interrupt Request Register (IRR)

.12f8	 68		pla		        PLA 

.12f9	 40		rti		        RTI 

.1300					draw_screen_column_forwards
.1300	 a0 00		ldy #$00	        LDY #$00

.1302	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1304	 a0 08		ldy #$08	        LDY #$08

.1306	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1308	 a0 10		ldy #$10	        LDY #$10

.130a	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.130c	 a0 18		ldy #$18	        LDY #$18

.130e	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1310	 a0 20		ldy #$20	        LDY #$20

.1312	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1314	 a0 28		ldy #$28	        LDY #$28

.1316	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1318	 a0 30		ldy #$30	        LDY #$30

.131a	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.131c	 a0 38		ldy #$38	        LDY #$38

.131e	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1320	 a0 40		ldy #$40	        LDY #$40

.1322	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1324	 a0 48		ldy #$48	        LDY #$48

.1326	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1328	 a0 50		ldy #$50	        LDY #$50

.132a	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.132c	 a0 58		ldy #$58	        LDY #$58

.132e	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1330	 a0 60		ldy #$60	        LDY #$60

.1332	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1334	 a0 68		ldy #$68	        LDY #$68

.1336	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1338	 a0 70		ldy #$70	        LDY #$70

.133a	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.133c	 a0 78		ldy #$78	        LDY #$78

.133e	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1340	 a0 80		ldy #$80	        LDY #$80

.1342	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1344	 a0 88		ldy #$88	        LDY #$88

.1346	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1348	 a0 90		ldy #$90	        LDY #$90

.134a	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.134c	 a0 98		ldy #$98	        LDY #$98

.134e	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1350	 a0 a0		ldy #$a0	        LDY #$A0

.1352	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1354	 a0 a8		ldy #$a8	        LDY #$A8

.1356	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1358	 a0 b0		ldy #$b0	        LDY #$B0

.135a	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.135c	 a0 b8		ldy #$b8	        LDY #$B8

.135e	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1360	 a0 c0		ldy #$c0	        LDY #$C0

.1362	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1364	 a0 c8		ldy #$c8	        LDY #$C8

.1366	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1368	 a0 d0		ldy #$d0	        LDY #$D0

.136a	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.136c	 a0 d8		ldy #$d8	        LDY #$D8

.136e	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1370	 a0 e0		ldy #$e0	        LDY #$E0

.1372	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1374	 a0 e8		ldy #$e8	        LDY #$E8

.1376	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1378	 a0 f0		ldy #$f0	        LDY #$F0

.137a	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.137c	 a0 f8		ldy #$f8	        LDY #$F8

.137e	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1380	 a0 00		ldy #$00	        LDY #$00

.1382	 e6 03		inc $03		        INC SCREEN_POS_HI

.1384	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1386	 a0 08		ldy #$08	        LDY #$08

.1388	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.138a	 a0 10		ldy #$10	        LDY #$10

.138c	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.138e	 a0 18		ldy #$18	        LDY #$18

.1390	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1392	 a0 20		ldy #$20	        LDY #$20

.1394	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1396	 a0 28		ldy #$28	        LDY #$28

.1398	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.139a	 a0 30		ldy #$30	        LDY #$30

.139c	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.139e	 a0 38		ldy #$38			LDY #$38

.13a0	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.13a2	 60		rts		        RTS 

.13a3	 a9 78		lda #$78	DRAW_SCREEN		LDA #$78 				; 120 = 256-136?

.13a5	 85 1a		sta $1a						STA SCREEN_LINE_ab1A

.13a7	 a9 00		lda #$00					LDA 	#0

.13a9	 85 02		sta $02						STA 	SCREEN_POS_LO

.13ab	 a9 e0		lda #$e0					LDA		#$E0

.13ad	 cd 12 d0	cmp $d012	WAIT_RASTER			CMP 	$D012

.13b0	 d0 fb		bne $13ad						BNE 	WAIT_RASTER

.13b2	 e6 24		inc $24		bAF84   		INC		SCREEN_FLIP	; INCREMENT SCREEN FLIP

.13b4	 a5 24		lda $24						LDA		SCREEN_FLIP	; GET SCREEN FLIP

.13b6	 4a		lsr						LSR 			; SHIFT BIT0 INTO CARRY

.13b7	 b0 06		bcs $13bf					BCS		SCREEN1		; CARRY SET ?

.13b9	 a9 40		lda #$40						LDA		#$40			; SCREEN 0

.13bb	 a2 78		ldx #$78						LDX		#$78			; VIC BANK 0

.13bd	 d0 04		bne $13c3						BNE		bAFA1			; jump

.13bf	 a9 60		lda #$60	SCREEN1  		LDA		#$60			; SCREEN 1

.13c1	 a2 70		ldx #$70					LDX		#$70			; VIC BANK 1

.13c3	 85 25		sta $25		bAFA1			STA		SCREEN_BANK

.13c5	 85 03		sta $03						STA		SCREEN_POS_HI

.13c7	 86 c7		stx $c7						STX		VIC_SCREEN_BANK

.13c9	 a6 2b		ldx $2b				LDX PITCH_HI	; get pitch?

.13cb	 e8		inx				INX				; add 1 which flips sign? and reverses bit 1 into bit 2?

.13cc	 8a		txa				TXA

.13cd	 45 29		eor $29		        EOR ROLL_HI		; eor roll?

.13cf	 4a		lsr		        LSR 			; shift to remove sign?

.13d0	 a2 55		ldx #$55			LDX #$55	; ground colour

.13d2	 a0 aa		ldy #$aa	        LDY #$AA	; sky colour

.13d4	 29 01		and #$01	        AND #$01

.13d6	 f0 08		beq $13e0	        BEQ RIGHT_WAY_UP

.13d8	 a9 ff		lda #$ff				LDA #$FF

.13da	 84 82		sty $82					STY SCREEN_TOP_COL_ab82	; ground colour

.13dc	 86 83		stx $83					STX SCREEN_BOT_COL_ab83	; sky colour

.13de	 d0 04		bne $13e4				BNE bAFF7 ; jmp?

.13e0					right_way_up
.13e0	 86 82		stx $82		        STX SCREEN_TOP_COL_ab82	; sky colour

.13e2	 84 83		sty $83		        STY SCREEN_BOT_COL_ab83	; ground colour

.13e4	 85 84		sta $84		bAFF7	STA FILL_EMPTY_RIGHT_WAY_UP_ab84	; store 0 or FF depending on AND #$01 above?

.13e6	 a6 34		ldx $34				LDX ab34	; results of part of rotation caculation?

.13e8	 a5 35		lda $35		        LDA ab35	; results of part of rotation caculation?

.13ea	 49 01		eor #$01	        EOR #$01	; swap sign

.13ec	 a8		tay		        TAY 

.13ed	 29 01		and #$01	        AND #$01	; keep sign

.13ef	 85 7d		sta $7d		        STA SIGN_ab7D

.13f1	 98		tya		        TYA 

.13f2	 29 fc		and #$fc	        AND #$FC

.13f4	 18		clc		        CLC 

.13f5	 69 18		adc #$18	        ADC #$18	; focus?

.13f7	 70 06		bvs $13ff	        BVS bB012

.13f9	 a8		tay					TAY 

.13fa	 20 22 11	jsr $1122				JSR FPTO16BIT	; perspective point?

.13fd	 90 04		bcc $1403				BCC bB016

.13ff	 a2 ff		ldx #$ff	bB012   		LDX #$FF

.1401	 a0 ff		ldy #$ff					LDY #$FF

.1403	 98		tya		bB016   TYA 

.1404	 0a		asl		        ASL 

.1405	 85 7b		sta $7b		        STA ab7B

.1407	 8a		txa		        TXA 

.1408	 2a		rol		        ROL 

.1409	 85 7c		sta $7c		        STA HORIZON_SLOPE_ab7C

.140b	 a6 3a		ldx $3a		        LDX ab3A

.140d	 a5 3b		lda $3b		        LDA ab3B

.140f	 18		clc		        CLC 

.1410	 65 21		adc $21		        ADC ab21

.1412	 86 16		stx $16				STX ab16

.1414	 85 17		sta $17		        STA ab17

.1416	 49 01		eor #$01	        EOR #$01

.1418	 86 08		stx $08		        STX ab08

.141a	 85 09		sta $09		        STA ab09

.141c	 a6 2e		ldx $2e		        LDX ROLL_SIN_FP_LO_ab2E

.141e	 a4 2f		ldy $2f		        LDY ROLL_SIN_FP_HI_ab2F

.1420	 20 08 10	jsr $1008	        JSR FPDIV

.1423	 86 0a		stx $0a		        STX ab0A

.1425	 84 0b		sty $0b		        STY ab0B

.1427	 a2 0c		ldx #$0c	        LDX #<p140C ; edge of the screen?

.1429	 a0 14		ldy #$14	        LDY #>p140C

.142b	 86 08		stx $08		        STX ab08

.142d	 84 09		sty $09		        STY ab09

.142f	 a6 32		ldx $32		        LDX ab32

.1431	 a4 33		ldy $33		        LDY ab33

.1433	 20 08 10	jsr $1008	        JSR FPDIV

.1436	 a6 0a		ldx $0a		        LDX ab0A

.1438	 a4 0b		ldy $0b		        LDY ab0B

.143a	 20 5f 10	jsr $105f	        JSR FP_ADD

.143d	 20 f2 10	jsr $10f2	        JSR FPTO8BIT

.1440	 b0 0b		bcs $144d	        BCS bB06A

.1442	 69 50		adc #$50				ADC #$50 ; add hor screen half

.1444	 c9 a0		cmp #$a0				CMP #$A0 ; hor clip test

.1446	 b0 05		bcs $144d				BCS bB06A

.1448	 85 09		sta $09						STA ab09

.144a	 4c c1 14	jmp $14c1					JMP jB0E1

.144d	 a6 16		ldx $16		bB06A   LDX ab16

.144f	 a4 17		ldy $17		        LDY ab17

.1451	 86 08		stx $08		        STX ab08

.1453	 84 09		sty $09		        STY ab09

.1455	 a6 30		ldx $30		        LDX ROLL_COS_FP_LO_ab30

.1457	 a4 31		ldy $31		        LDY ROLL_COS_FP_HI_ab31

.1459	 20 08 10	jsr $1008	        JSR FPDIV

.145c	 86 0a		stx $0a		        STX ab0A

.145e	 84 0b		sty $0b		        STY ab0B

.1460	 a2 3c		ldx #$3c	        LDX #$3C

.1462	 a9 19		lda #$19	        LDA #$19

.1464	 45 7d		eor $7d		        EOR SIGN_ab7D

.1466	 86 08		stx $08		        STX ab08

.1468	 85 09		sta $09		        STA ab09

.146a	 a6 32		ldx $32		        LDX ab32

.146c	 a4 33		ldy $33		        LDY ab33

.146e	 20 ce 0f	jsr $0fce	        JSR FPMUL

.1471	 a6 0a		ldx $0a		        LDX ab0A

.1473	 a4 0b		ldy $0b		        LDY ab0B

.1475	 20 5f 10	jsr $105f	        JSR FP_ADD

.1478	 98		tya		        TYA 

.1479	 18		clc		        CLC 

.147a	 69 04		adc #$04	        ADC #$04

.147c	 70 0c		bvs $148a	        BVS bB0AA

.147e	 a8		tay		        TAY 

.147f	 20 f2 10	jsr $10f2	        JSR FPTO8BIT

.1482	 b0 06		bcs $148a	        BCS bB0AA

.1484	 69 44		adc #$44				ADC #$44 ; add ver screen half

.1486	 c9 88		cmp #$88				CMP #$88 ; ver clip test

.1488	 90 1d		bcc $14a7				BCC bB0C7

.148a	 a5 2b		lda $2b		bB0AA   		LDA PITCH_HI

.148c	 45 7d		eor $7d						EOR SIGN_ab7D

.148e	 85 06		sta $06						STA ab06

.1490	 a5 29		lda $29						LDA ROLL_HI

.1492	 18		clc						CLC 

.1493	 69 03		adc #$03					ADC #$03

.1495	 4a		lsr						LSR 

.1496	 45 06		eor $06						EOR ab06

.1498	 29 01		and #$01					AND #$01

.149a	 f0 04		beq $14a0					BEQ bB0C0

.149c	 a5 83		lda $83							LDA SCREEN_BOT_COL_ab83

.149e	 d0 02		bne $14a2						BNE bB0C2	; jmp?

.14a0	 a5 82		lda $82		bB0C0   				LDA SCREEN_TOP_COL_ab82

.14a2	 a2 88		ldx #$88	bB0C2   		LDX #$88	; bottom of screen

.14a4	 4c 58 15	jmp $1558					JMP DRAW_SCREEN_BLOCK_COLOUR

.14a7	 49 ff		eor #$ff	bB0C7   EOR #$FF

.14a9	 69 88		adc #$88	        ADC #$88 ; number of screen lines?

.14ab	 aa		tax		        TAX 

.14ac	 a5 7d		lda $7d		        LDA SIGN_ab7D

.14ae	 f0 08		beq $14b8	        BEQ bB0D8

.14b0	 a9 9f		lda #$9f				LDA #$9F ; start hor pos at right edge

.14b2	 85 09		sta $09					STA ab09

.14b4	 a5 83		lda $83					LDA SCREEN_BOT_COL_ab83

.14b6	 d0 06		bne $14be				BNE bB0DE ; jmp

.14b8	 a9 01		lda #$01	bB0D8   LDA #$01 ; start hor pos at left edge

.14ba	 85 09		sta $09		        STA ab09

.14bc	 a5 82		lda $82		        LDA SCREEN_TOP_COL_ab82

.14be	 20 58 15	jsr $1558	bB0DE   JSR DRAW_SCREEN_BLOCK_COLOUR

.14c1	 a9 00		lda #$00	jB0E1   LDA #$00

.14c3	 85 08		sta $08		        STA ab08

.14c5	 a5 09		lda $09		        LDA ab09

.14c7	 29 fc		and #$fc	LOOP_jB0E7   AND #$FC

.14c9	 85 06		sta $06		        STA ab06

.14cb	 49 ff		eor #$ff	        EOR #$FF

.14cd	 38		sec		        SEC 

.14ce	 69 a0		adc #$a0	        ADC #$A0

.14d0	 aa		tax		        TAX 

.14d1	 c9 84		cmp #$84	        CMP #$84

.14d3	 90 04		bcc $14d9	        BCC bB0F9

.14d5	 69 01		adc #$01				ADC #$01

.14d7	 e6 03		inc $03					INC SCREEN_POS_HI

.14d9	 8d df 14	sta $14df	bB0F9   STA abB0FF +1

.14dc	 a5 83		lda $83		        LDA SCREEN_BOT_COL_ab83

.14de	 20 00 13	jsr $1300	abB0FF	JSR DRAW_SCREEN_COLUMN_FORWARDS

.14e1	 a5 06		lda $06		        LDA ab06

.14e3	 c9 20		cmp #$20	        CMP #$20 		; is hor 32 chars across?

.14e5	 90 04		bcc $14eb	        BCC bB10B 		; no

.14e7	 69 01		adc #$01				ADC #$01 	; yes so change hi screen value

.14e9	 c6 03		dec $03					DEC SCREEN_POS_HI

.14eb	 8d f1 14	sta $14f1	bB10B   STA abB111 +1

.14ee	 a5 82		lda $82		        LDA SCREEN_TOP_COL_ab82

.14f0	 20 00 12	jsr $1200	abB111	JSR DRAW_SCREEN_COLUMN_BACKWARDS

.14f3	 8a		txa		        TXA 

.14f4	 38		sec		        SEC 

.14f5	 e9 04		sbc #$04	        SBC #$04

.14f7	 0a		asl		        ASL 

.14f8	 a8		tay		        TAY 

.14f9	 90 02		bcc $14fd	        BCC DRAW_HORIZON_DETAIL

.14fb	 e6 03		inc $03					INC	SCREEN_POS_HI

.14fd					draw_horizon_detail
.14fd	 a5 09		lda $09		        LDA ab09 ; horizontal position?

.14ff	 29 03		and #$03	        AND #$03

.1501	 aa		tax		        TAX 

.1502	 bd 86 17	lda $1786,x	        LDA HORIZON_DETAIL,X

.1505	 45 84		eor $84		        EOR FILL_EMPTY_RIGHT_WAY_UP_ab84

.1507	 91 02		sta ($02),y	        STA (SCREEN_POS_PTR),Y

.1509	 e6 1a		inc $1a		        INC SCREEN_LINE_ab1A

.150b	 f0 3a		beq $1547	        BEQ bB167

.150d	 a6 1a		ldx $1a		        LDX SCREEN_LINE_ab1A

.150f	 bd 90 0e	lda $0e90,x	        LDA HORIZON_COLUMNS_HI,X

.1512	 85 02		sta $02		        STA SCREEN_POS_LO

.1514	 bd 00 0e	lda $0e00,x	        LDA HORIZON_COLUMNS_LO,X

.1517	 05 25		ora $25		        ORA SCREEN_BANK

.1519	 85 03		sta $03		        STA SCREEN_POS_HI

.151b	 a5 7d		lda $7d		        LDA SIGN_ab7D

.151d	 d0 16		bne $1535	        BNE bB155

.151f	 a5 08		lda $08					LDA ab08 ; slope right?

.1521	 18		clc					CLC 

.1522	 65 7b		adc $7b					ADC ab7B

.1524	 85 08		sta $08					STA ab08

.1526	 a5 09		lda $09					LDA ab09

.1528	 65 7c		adc $7c					ADC HORIZON_SLOPE_ab7C

.152a	 b0 1c		bcs $1548				BCS DRAW_SCREEN_BLOCK

.152c	 c9 a0		cmp #$a0					CMP #$A0 ; screen right edge

.152e	 b0 18		bcs $1548					BCS DRAW_SCREEN_BLOCK ; draw the rest as a block?

.1530	 85 09		sta $09						STA ab09

.1532	 4c c7 14	jmp $14c7					JMP LOOP_jB0E7

.1535	 a5 08		lda $08		bB155   LDA ab08 ; slope left

.1537	 38		sec		        SEC 

.1538	 e5 7b		sbc $7b		        SBC ab7B

.153a	 85 08		sta $08		        STA ab08

.153c	 a5 09		lda $09		        LDA ab09

.153e	 e5 7c		sbc $7c		        SBC HORIZON_SLOPE_ab7C

.1540	 90 06		bcc $1548	        BCC DRAW_SCREEN_BLOCK

.1542	 85 09		sta $09		        STA ab09

.1544	 4c c7 14	jmp $14c7	        JMP LOOP_jB0E7

.1547	 60		rts		bB167   RTS 

.1548	 a9 00		lda #$00	DRAW_SCREEN_BLOCK	LDA 	#0 ; draw screen block?

.154a	 38		sec							SEC 

.154b	 e5 1a		sbc $1a							SBC 	SCREEN_LINE_ab1A

.154d	 aa		tax							TAX 

.154e	 a5 7d		lda $7d							LDA 	SIGN_ab7D

.1550	 f0 04		beq $1556						BEQ 	bB176

.1552	 a5 82		lda $82								LDA 	SCREEN_TOP_COL_ab82

.1554	 d0 02		bne $1558							BNE 	DRAW_SCREEN_BLOCK_COLOUR	; jmp

.1556	 a5 83		lda $83		bB176   					LDA 	SCREEN_BOT_COL_ab83

.1558					draw_screen_block_colour
.1558	 85 06		sta $06							STA 	ab06

.155a	 e0 00		cpx #$00						CPX 	#0

.155c	 f0 18		beq $1576						BEQ 	DSCF_XT

.155e	 20 00 13	jsr $1300	DSCF_LOOP				JSR 	DRAW_SCREEN_COLUMN_FORWARDS

.1561	 e6 1a		inc $1a								INC 	SCREEN_LINE_ab1A

.1563	 a4 1a		ldy $1a								LDY 	SCREEN_LINE_ab1A

.1565	 b9 90 0e	lda $0e90,y							LDA 	HORIZON_COLUMNS_HI,Y

.1568	 85 02		sta $02								STA 	SCREEN_POS_LO

.156a	 b9 00 0e	lda $0e00,y							LDA 	HORIZON_COLUMNS_LO,Y

.156d	 05 25		ora $25								ORA 	SCREEN_BANK

.156f	 85 03		sta $03								STA 	SCREEN_POS_HI

.1571	 a5 06		lda $06								LDA 	ab06

.1573	 ca		dex								DEX 

.1574	 d0 e8		bne $155e							BNE 	DSCF_LOOP

.1576	 60		rts		DSCF_XT				RTS 


>1577	 00                       	temp1 .byte 0

>1578	 00                       	temp2 .byte 0

>1579	 00                       	temp3 .byte 0

>157a	 00                       	temp4 .byte 0


.157b					read_joystick_keyboard
.157b	 ad 00 dc	lda $dc00	        LDA $DC00    ;CIA1: Data Port Register A

.157e	 29 0f		and #$0f	        AND #$0F

.1580	 85 80		sta $80		        STA ab80 ; JOYSTICK MOVEMENT

.1582	 60		rts				RTS

.1583	 a6 28		ldx $28		GET_ROT	LDX 	ROLL_LO

.1585	 a4 29		ldy $29		        LDY 	ROLL_HI

.1587	 20 be 12	jsr $12be	        JSR 	COS_FP

.158a	 86 30		stx $30		        STX 	ROLL_COS_FP_LO_ab30

.158c	 84 31		sty $31		        STY 	ROLL_COS_FP_HI_ab31

.158e	 a6 28		ldx $28		        LDX 	ROLL_LO

.1590	 a4 29		ldy $29		        LDY 	ROLL_HI

.1592	 20 bf 12	jsr $12bf	        JSR 	SIN_FP

.1595	 86 2e		stx $2e		        STX 	ROLL_SIN_FP_LO_ab2E

.1597	 84 2f		sty $2f		        STY 	ROLL_SIN_FP_HI_ab2F

.1599	 86 08		stx $08		        STX 	ab08

.159b	 84 09		sty $09		        STY 	ab09

.159d	 a6 30		ldx $30		        LDX 	ROLL_COS_FP_LO_ab30

.159f	 a4 31		ldy $31		        LDY 	ROLL_COS_FP_HI_ab31

.15a1	 20 08 10	jsr $1008	        JSR 	FPDIV ; (4)

.15a4	 86 32		stx $32		        STX 	ab32 ; ROLL_SIN_DIV_COS_LO ; SLOPE?

.15a6	 84 33		sty $33		        STY 	ab33 ; ROLL_SIN_DIV_COS_HI

.15a8	 a6 30		ldx $30		        LDX 	ROLL_COS_FP_LO_ab30

.15aa	 a4 31		ldy $31		        LDY 	ROLL_COS_FP_HI_ab31

.15ac	 86 08		stx $08		        STX 	ab08

.15ae	 84 09		sty $09		        STY 	ab09

.15b0	 a6 2e		ldx $2e		        LDX 	ROLL_SIN_FP_LO_ab2E

.15b2	 a4 2f		ldy $2f		        LDY 	ROLL_SIN_FP_HI_ab2F

.15b4	 20 08 10	jsr $1008	        JSR 	FPDIV ; (5)

.15b7	 86 34		stx $34		        STX 	ab34 ; ROLL_COS_DIV_SIN_LO ; SLOPE?

.15b9	 84 35		sty $35		        STY 	ab35 ; ROLL_COS_DIV_SIN_HI

.15bb	 a6 2a		ldx $2a		        LDX 	PITCH_LO

.15bd	 a4 2b		ldy $2b		        LDY 	PITCH_HI

.15bf	 20 be 12	jsr $12be	        JSR 	COS_FP

.15c2	 86 38		stx $38		        STX 	PITCH_COS_FP_LO_ab38

.15c4	 84 39		sty $39		        STY 	PITCH_COS_FP_HI_ab39

.15c6	 a6 2a		ldx $2a		        LDX 	PITCH_LO

.15c8	 a4 2b		ldy $2b		        LDY 	PITCH_HI

.15ca	 20 bf 12	jsr $12bf	        JSR 	SIN_FP

.15cd	 86 36		stx $36		        STX 	PITCH_SIN_FP_LO_ab36

.15cf	 84 37		sty $37		        STY 	PITCH_SIN_FP_HI_ab37

.15d1	 86 08		stx $08		        STX 	ab08

.15d3	 84 09		sty $09		        STY 	ab09

.15d5	 a6 38		ldx $38		        LDX 	PITCH_COS_FP_LO_ab38

.15d7	 a4 39		ldy $39		        LDY 	PITCH_COS_FP_HI_ab39

.15d9	 20 08 10	jsr $1008	        JSR 	FPDIV ; (8)

.15dc	 86 3a		stx $3a		        STX 	ab3A ; PITCH_SIN_DIV_COS_LO ; SLOPE?

.15de	 84 3b		sty $3b		        STY 	ab3B ; PITCH_SIN_DIV_COS_HI

.15e0	 a6 2c		ldx $2c		        LDX 	YAW_LO

.15e2	 a4 2d		ldy $2d		        LDY 	YAW_HI

.15e4	 20 bf 12	jsr $12bf	        JSR 	SIN_FP

.15e7	 86 3c		stx $3c		        STX 	YAW_SIN_FP_LO_ab3C

.15e9	 84 3d		sty $3d		        STY 	YAW_SIN_FP_HI_ab3D

.15eb	 a6 2c		ldx $2c		        LDX 	YAW_LO

.15ed	 a4 2d		ldy $2d		        LDY 	YAW_HI

.15ef	 20 be 12	jsr $12be	        JSR 	COS_FP

.15f2	 86 3e		stx $3e		        STX 	YAW_COS_FP_LO_ab3E

.15f4	 84 3f		sty $3f		        STY 	YAW_COS_FP_HI_ab3F

.15f6	 60		rts		        RTS 

.15f7	 a6 22		ldx $22		MOVMENT	LDX ab22

.15f9	 a4 23		ldy $23		        LDY ab23

.15fb	 86 08		stx $08		        STX ab08

.15fd	 84 09		sty $09		        STY ab09

.15ff	 ae 8a 17	ldx $178a	        LDX abBEA2

.1602	 ac 8b 17	ldy $178b	        LDY abBEA3

.1605	 20 ce 0f	jsr $0fce	        JSR FPMUL

.1608	 86 22		stx $22		        STX ab22

.160a	 84 23		sty $23		        STY ab23

.160c	 a9 04		lda #$04	JOY_LFT LDA #$04

.160e	 24 80		bit $80		        BIT ab80

.1610	 d0 0d		bne $161f	        BNE JOY_RGT

.1612	 ae 8c 17	ldx $178c	                LDX abBEA4

.1615	 ac 8d 17	ldy $178d	                LDY abBEA5

.1618	 20 5f 10	jsr $105f	                JSR FP_ADD

.161b	 86 22		stx $22		                STX ab22

.161d	 84 23		sty $23		                STY ab23

.161f	 a9 08		lda #$08	JOY_RGT	LDA #$08 

.1621	 24 80		bit $80		        BIT ab80

.1623	 d0 0e		bne $1633	        BNE JOY_UP

.1625	 ae 8c 17	ldx $178c	                LDX abBEA4

.1628	 ac 8d 17	ldy $178d	                LDY abBEA5

.162b	 c8		iny		                INY 

.162c	 20 5f 10	jsr $105f	                JSR FP_ADD

.162f	 86 22		stx $22		                STX ab22

.1631	 84 23		sty $23		                STY ab23

.1633	 a9 01		lda #$01	JOY_UP	LDA #$01

.1635	 24 80		bit $80		        BIT ab80

.1637	 d0 10		bne $1649	        BNE JOY_DWN

.1639	 a5 2a		lda $2a		                LDA PITCH_LO

.163b	 18		clc		                CLC 

.163c	 6d 8e 17	adc $178e	                ADC abBEA6

.163f	 85 2a		sta $2a		                STA PITCH_LO

.1641	 a5 2b		lda $2b		                LDA PITCH_HI

.1643	 69 00		adc #$00	                ADC #$00

.1645	 29 03		and #$03	                AND #$03

.1647	 85 2b		sta $2b		                STA PITCH_HI

.1649	 a9 02		lda #$02	JOY_DWN LDA #$02

.164b	 24 80		bit $80		        BIT ab80

.164d	 d0 10		bne $165f	        BNE MOVE

.164f	 38		sec		                SEC

.1650	 a5 2a		lda $2a		                LDA PITCH_LO

.1652	 ed 8e 17	sbc $178e	                SBC abBEA6

.1655	 85 2a		sta $2a		                STA PITCH_LO

.1657	 a5 2b		lda $2b		                LDA PITCH_HI

.1659	 e9 00		sbc #$00					SBC #$00

.165b	 29 03		and #$03					AND #$03

.165d	 85 2b		sta $2b						STA PITCH_HI

.165f	 a6 ec		ldx $ec		MOVE 	LDX abEC

.1661	 a5 ed		lda $ed		        LDA abED

.1663	 ac dc 29	ldy $29dc	        LDY b29DC

.1666	 10 03		bpl $166b	        BPL b9F98

.1668	 18		clc						CLC 

.1669	 69 04		adc #$04					ADC #$04

.166b	 86 08		stx $08		b9F98   STX ab08

.166d	 85 09		sta $09		        STA ab09

.166f	 ae 96 17	ldx $1796	        LDX abBEAE

.1672	 ac 97 17	ldy $1797			LDY abBEAF

.1675	 20 ce 0f	jsr $0fce	        JSR FPMUL

.1678	 a6 26		ldx $26		        LDX ab26

.167a	 a4 27		ldy $27		        LDY ab27

.167c	 20 5f 10	jsr $105f	        JSR FP_ADD

.167f	 ac 93 17	ldy $1793	        LDY abBEAB

.1682	 ae 92 17	ldx $1792	        LDX abBEAA

.1685	 20 ce 0f	jsr $0fce	        JSR FPMUL

.1688	 86 26		stx $26		        STX ab26

.168a	 84 27		sty $27		        STY ab27

.168c	 a6 38		ldx $38		        LDX PITCH_COS_FP_LO_ab38

.168e	 a4 39		ldy $39		        LDY PITCH_COS_FP_HI_ab39

.1690	 86 08		stx $08		        STX ab08

.1692	 84 09		sty $09		        STY ab09

.1694	 a6 3e		ldx $3e				LDX YAW_COS_FP_LO_ab3E

.1696	 a4 3f		ldy $3f				LDY YAW_COS_FP_HI_ab3F

.1698	 20 ce 0f	jsr $0fce	        JSR FPMUL

.169b	 a6 26		ldx $26		        LDX ab26

.169d	 a4 27		ldy $27		        LDY ab27

.169f	 20 ce 0f	jsr $0fce	        JSR FPMUL

.16a2	 20 22 11	jsr $1122			JSR FPTO16BIT

.16a5	 98		tya		        TYA 

.16a6	 18		clc		        CLC 

.16a7	 65 78		adc $78		        ADC CURR_Z_LSB

.16a9	 85 78		sta $78		        STA CURR_Z_LSB

.16ab	 a0 00		ldy #$00	        LDY #$00

.16ad	 8a		txa		        TXA 

.16ae	 10 02		bpl $16b2	        BPL b9FDF

.16b0	 a0 ff		ldy #$ff				LDY #$FF

.16b2	 65 79		adc $79		b9FDF   ADC CURR_Z_MSB

.16b4	 85 79		sta $79		        STA CURR_Z_MSB

.16b6	 98		tya		        TYA 

.16b7	 65 7a		adc $7a		        ADC CURR_Z_HSB

.16b9	 85 7a		sta $7a		        STA CURR_Z_HSB

.16bb	 a6 38		ldx $38		        LDX PITCH_COS_FP_LO_ab38

.16bd	 a4 39		ldy $39		        LDY PITCH_COS_FP_HI_ab39

.16bf	 86 08		stx $08		        STX ab08

.16c1	 84 09		sty $09		        STY ab09

.16c3	 a6 3c		ldx $3c		        LDX YAW_SIN_FP_LO_ab3C

.16c5	 a4 3d		ldy $3d		        LDY YAW_SIN_FP_HI_ab3D

.16c7	 20 ce 0f	jsr $0fce	        JSR FPMUL

.16ca	 a6 26		ldx $26		        LDX ab26

.16cc	 a4 27		ldy $27		        LDY ab27

.16ce	 20 ce 0f	jsr $0fce	        JSR FPMUL

.16d1	 20 22 11	jsr $1122	        JSR FPTO16BIT

.16d4	 98		tya		        TYA 

.16d5	 18		clc		        CLC 

.16d6	 65 72		adc $72		        ADC CURR_X_LSB

.16d8	 85 72		sta $72		        STA CURR_X_LSB

.16da	 a0 00		ldy #$00	        LDY #$00

.16dc	 8a		txa		        TXA 

.16dd	 10 02		bpl $16e1	        BPL bA00E

.16df	 a0 ff		ldy #$ff				LDY #$FF

.16e1	 65 73		adc $73		bA00E   ADC CURR_X_MSB

.16e3	 85 73		sta $73		        STA CURR_X_MSB

.16e5	 98		tya		        TYA 

.16e6	 65 74		adc $74		        ADC CURR_X_HSB

.16e8	 85 74		sta $74		        STA CURR_X_HSB

.16ea	 a5 7f		lda $7f		        LDA ab7F

.16ec	 f0 19		beq $1707	        BEQ bA037

.16ee	 a5 fa		lda $fa					LDA abFA

.16f0	 f0 02		beq $16f4				BEQ bA024

.16f2	 b0 13		bcs $1707					BCS bA037

.16f4	 a5 27		lda $27		bA024   	LDA ab27

.16f6	 49 80		eor #$80				EOR #$80

.16f8	 c9 9c		cmp #$9c				CMP #$9C

.16fa	 b0 0b		bcs $1707				BCS bA037

.16fc	 a9 00		lda #$00					LDA #<f0200

.16fe	 85 2a		sta $2a						STA PITCH_LO

.1700	 a9 02		lda #$02					LDA #>f0200

.1702	 85 2b		sta $2b						STA PITCH_HI

.1704	 4c 5c 17	jmp $175c					JMP jA102

.1707	 a6 36		ldx $36		bA037   LDX PITCH_SIN_FP_LO_ab36

.1709	 a4 37		ldy $37		        LDY PITCH_SIN_FP_HI_ab37

.170b	 86 08		stx $08		        STX ab08

.170d	 84 09		sty $09		        STY ab09

.170f	 a6 26		ldx $26		        LDX ab26

.1711	 a4 27		ldy $27		        LDY ab27

.1713	 20 ce 0f	jsr $0fce	        JSR FPMUL

.1716	 98		tya		        TYA 

.1717	 ac 91 17	ldy $1791	        LDY abBEA9

.171a	 4a		lsr		        LSR 

.171b	 b0 18		bcs $1735	        BCS bA06B

.171d	 ad 95 17	lda $1795				LDA abBEAD

.1720	 ae dc 29	ldx $29dc				LDX b29DC

.1723	 10 02		bpl $1727				BPL bA05D

.1725	 a9 5a		lda #$5a						LDA #$5A

.1727	 38		sec		bA05D   SEC 

.1728	 e5 77		sbc $77		        SBC CURR_Y_HSB

.172a	 10 09		bpl $1735	        BPL bA06B

.172c	 0a		asl					ASL 

.172d	 10 04		bpl $1733				BPL bA069

.172f	 0a		asl					ASL 

.1730	 a8		tay					TAY 

.1731	 30 02		bmi $1735				BMI bA06B

.1733	 a0 88		ldy #$88	bA069   	LDY #$88

.1735	 ae 90 17	ldx $1790	bA06B   LDX abBEA8

.1738	 20 ce 0f	jsr $0fce	        JSR FPMUL

.173b	 20 22 11	jsr $1122	        JSR FPTO16BIT

.173e	 98		tya		        TYA 

.173f	 18		clc		        CLC 

.1740	 65 75		adc $75		        ADC CURR_Y_LSB

.1742	 85 75		sta $75		        STA CURR_Y_LSB

.1744	 8a		txa		        TXA 

.1745	 65 76		adc $76		        ADC CURR_Y_MSB

.1747	 85 76		sta $76		        STA CURR_Y_MSB

.1749	 8a		txa		fA07F   TXA 

.174a	 10 04		bpl $1750	        BPL bA086

.174c	 a9 ff		lda #$ff				LDA #$FF

.174e	 30 02		bmi $1752				BMI bA088

.1750	 a9 00		lda #$00	bA086   LDA #$00

.1752	 65 77		adc $77		bA088   ADC CURR_Y_HSB

.1754	 85 77		sta $77		        STA CURR_Y_HSB

.1756	 a9 00		lda #$00	bA0F7   LDA #$00

.1758	 85 7f		sta $7f		        STA ab7F

.175a	 85 fa		sta $fa		        STA abFA

.175c	 a6 22		ldx $22		jA102   LDX ab22

.175e	 a4 23		ldy $23		        LDY ab23

.1760	 20 22 11	jsr $1122	        JSR FPTO16BIT

.1763	 8a		txa		        TXA 

.1764	 0a		asl		        ASL 

.1765	 98		tya		        TYA 

.1766	 65 2c		adc $2c		        ADC YAW_LO

.1768	 85 2c		sta $2c		        STA YAW_LO

.176a	 8a		txa		        TXA 

.176b	 65 2d		adc $2d		        ADC YAW_HI

.176d	 85 2d		sta $2d		        STA YAW_HI

.176f	 a5 7f		lda $7f		        LDA ab7F

.1771	 d0 12		bne $1785	        BNE jA12B

.1773	 a6 22		ldx $22					LDX ab22

.1775	 ad 8f 17	lda $178f				LDA abBEA7

.1778	 30 03		bmi $177d	        BMI bA123

.177a	 18		clc					CLC 

.177b	 65 23		adc $23					ADC ab23

.177d	 a8		tay		bA123   TAY 

.177e	 20 22 11	jsr $1122	        JSR FPTO16BIT

.1781	 84 28		sty $28		        STY ROLL_LO

.1783	 86 29		stx $29		        STX ROLL_HI

.1785	 60		rts		jA12B 	RTS 


>1786	 56 5a 6a aa              	HORIZON_DETAIL .BYTE $56,$5A,$6A,$AA ; $56 = %01010110, $5A = %01011010, $6A = %01101010, $AA = %10101010 - $56 = XXX0 $5A = XX00 $6A = X000 $AA = 0000

>178a	 e0                       	abBEA2  .BYTE $E0

>178b	 fc                       	abBEA3  .BYTE $FC

>178c	 00                       	abBEA4  .BYTE $00

>178d	 00                       	abBEA5  .BYTE $00

>178e	 08                       	abBEA6  .BYTE $08

>178f	 08                       	abBEA7  .BYTE $08

>1790	 00                       	abBEA8  .BYTE $00

>1791	 fc                       	abBEA9  .BYTE $FC

>1792	 00                       	abBEAA  .BYTE $00

>1793	 fc 10                    	abBEAB  .BYTE $FC,$10

>1795	 0a                       	abBEAD  .BYTE $0A

>1796	 90                       	abBEAE  .BYTE $90

>1797	 f8                       	abBEAF  .BYTE $F8


.1798	 b9 30 18	lda $1830,y	HEXCHAR		LDA		HEX0,Y

.179b	 9d cd ab	sta $abcd,x	HEX_NUMBER0	STA		$ABCD,X

.179e	 b9 40 18	lda $1840,y				LDA		HEX1,Y

.17a1	 9d cd ab	sta $abcd,x	HEX_NUMBER1	STA		$ABCD,X

.17a4	 b9 50 18	lda $1850,y				LDA		HEX2,Y

.17a7	 9d cd ab	sta $abcd,x	HEX_NUMBER2	STA		$ABCD,X

.17aa	 b9 60 18	lda $1860,y				LDA		HEX3,Y

.17ad	 9d cd ab	sta $abcd,x	HEX_NUMBER3	STA		$ABCD,X

.17b0	 b9 70 18	lda $1870,y				LDA		HEX4,Y

.17b3	 9d cd ab	sta $abcd,x	HEX_NUMBER4	STA		$ABCD,X

.17b6	 60		rts					RTS

.17b7	 84 87		sty $87		HEX16		STY		REGY	; Y = YPOS / A = HI / X = LO

.17b9	 86 86		stx $86					STX		REGX		

.17bb	 a2 00		ldx #$00				LDX		#0

.17bd	 20 ca 17	jsr $17ca				JSR		HEX8

.17c0	 a5 86		lda $86					LDA		REGX

.17c2	 a4 87		ldy $87					LDY		REGY

.17c4	 a2 10		ldx #$10				LDX		#16

.17c6	 20 ca 17	jsr $17ca				JSR		HEX8

.17c9	 60		rts					RTS

.17ca	 18		clc		HEX8		CLC		; A = NUM / Y = YPOS / X = XPOS

.17cb	 85 85		sta $85					STA		REGA

.17cd	 b9 08 0f	lda $0f08,y				LDA		VER_POS_LO+0,Y

.17d0	 8d 9c 17	sta $179c				STA		HEX_NUMBER0+1

.17d3	 b9 78 0e	lda $0e78,y				LDA		VER_POS_HI+0,Y

.17d6	 18		clc					CLC

.17d7	 65 25		adc $25					ADC	SCREEN_BANK

.17d9	 8d 9d 17	sta $179d				STA		HEX_NUMBER0+2

.17dc	 b9 09 0f	lda $0f09,y				LDA		VER_POS_LO+1,Y

.17df	 8d a2 17	sta $17a2				STA		HEX_NUMBER1+1

.17e2	 b9 79 0e	lda $0e79,y				LDA		VER_POS_HI+1,Y 

.17e5	 18		clc					CLC

.17e6	 65 25		adc $25					ADC	SCREEN_BANK

.17e8	 8d a3 17	sta $17a3				STA		HEX_NUMBER1+2

.17eb	 b9 0a 0f	lda $0f0a,y				LDA		VER_POS_LO+2,Y

.17ee	 8d a8 17	sta $17a8				STA		HEX_NUMBER2+1

.17f1	 b9 7a 0e	lda $0e7a,y				LDA		VER_POS_HI+2,Y 

.17f4	 18		clc					CLC

.17f5	 65 25		adc $25					ADC	SCREEN_BANK

.17f7	 8d a9 17	sta $17a9				STA		HEX_NUMBER2+2

.17fa	 b9 0b 0f	lda $0f0b,y				LDA		VER_POS_LO+3,Y

.17fd	 8d ae 17	sta $17ae				STA		HEX_NUMBER3+1

.1800	 b9 7b 0e	lda $0e7b,y				LDA		VER_POS_HI+3,Y 

.1803	 18		clc					CLC

.1804	 65 25		adc $25					ADC	SCREEN_BANK

.1806	 8d af 17	sta $17af				STA		HEX_NUMBER3+2

.1809	 b9 0c 0f	lda $0f0c,y				LDA		VER_POS_LO+4,Y

.180c	 8d b4 17	sta $17b4				STA		HEX_NUMBER4+1

.180f	 b9 7c 0e	lda $0e7c,y				LDA		VER_POS_HI+4,Y 

.1812	 18		clc					CLC

.1813	 65 25		adc $25					ADC	SCREEN_BANK

.1815	 8d b5 17	sta $17b5				STA		HEX_NUMBER4+2

.1818	 a5 85		lda $85					LDA		REGA

.181a	 4a		lsr					LSR

.181b	 4a		lsr					LSR

.181c	 4a		lsr					LSR

.181d	 4a		lsr					LSR

.181e	 a8		tay					TAY

.181f	 20 98 17	jsr $1798				JSR		HEXCHAR

.1822	 8a		txa					TXA

.1823	 18		clc					CLC

.1824	 69 08		adc #$08				ADC 	#8

.1826	 aa		tax					TAX

.1827	 a5 85		lda $85					LDA		REGA

.1829	 29 0f		and #$0f				AND		#15

.182b	 a8		tay					TAY

.182c	 20 98 17	jsr $1798				JSR		HEXCHAR

.182f	 60		rts					RTS


>1830	 80 a2 80 80 88 80 80 80 	HEX0	.BYTE %10000000,%10100010,%10000000,%10000000,%10001000,%10000000,%10000000,%10000000,%10000000,%10000000,%10000000,%10000000,%10000000,%10000010,%10000000,%10000000 

>1838	 80 80 80 80 80 82 80 80 
>1840	 88 82 a8 a8 88 8a 8a a8 	HEX1	.BYTE %10001000,%10000010,%10101000,%10101000,%10001000,%10001010,%10001010,%10101000,%10001000,%10001000,%10001000,%10001000,%10001010,%10001000,%10001010,%10001010 

>1848	 88 88 88 88 8a 88 8a 8a 
>1850	 88 a2 80 80 80 80 80 a8 	HEX2	.BYTE %10001000,%10100010,%10000000,%10000000,%10000000,%10000000,%10000000,%10101000,%10000000,%10000000,%10000000,%10000010,%10001010,%10001000,%10000000,%10000000

>1858	 80 80 80 82 8a 88 80 80 
>1860	 88 a2 8a a8 a8 a8 88 a8 	HEX3	.BYTE %10001000,%10100010,%10001010,%10101000,%10101000,%10101000,%10001000,%10101000,%10001000,%10101000,%10001000,%10001000,%10001010,%10001000,%10001010,%10001010

>1868	 88 a8 88 88 8a 88 8a 8a 
>1870	 80 80 80 80 a8 80 80 a8 	HEX4	.BYTE %10000000,%10000000,%10000000,%10000000,%10101000,%10000000,%10000000,%10101000,%10000000,%10000000,%10001000,%10000000,%10100000,%10000010,%10000000,%10001010

>1878	 80 80 88 80 a0 82 80 8a 
=4000					f4000 = $4000

=5c00					SCREEN_COLOUR = $5C00

=6000					f6000 = $6000


;******  end of code

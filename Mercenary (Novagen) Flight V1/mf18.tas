; 2a / 2b - pitch
; 2C / 2D - yaw
; 28 / 29 = roll

; work out what flags collision with ground sets 

; TODO - REMOVE LINE CONVERSION
;
; **** ZP FIELDS **** 
;
f03 = $03
f70 = $70
f72 = $72
f8C = $8C
;
; **** ZP ABSOLUTE ADRESSES **** 
;
ab00 = $00

ab01 = $01
SCREEN_POS_LO = $02
SCREEN_POS_HI = $03
ab04 = $04
ab05 = $05
ab06 = $06
ab07 = $07
ab08 = $08
ab09 = $09
ab0A = $0A
ab0B = $0B
ab0C = $0C
ab0D = $0D
ab16 = $16
ab17 = $17
ab18 = $18
ab19 = $19 ; temp point count / temp line count
ab1A = $1A
ab1B = $1B
ab1C = $1C
ab1D = $1D
ab1E = $1E
ab21 = $21
ab22 = $22
ab23 = $23
SCREEN_FLIP = $24
SCREEN_BANK = $25
ab26 = $26
ab27 = $27
ROLL_LO = $28 ; ROLL_LO
ROLL_HI = $29 ; ROLL_HI
PITCH_LO = $2A ; PITCH_LO
PITCH_HI = $2B ; PITCH_HI
YAW_LO = $2C ; YAW_LO 
YAW_HI = $2D ; YAW_HI
ab2E = $2E
ab2F = $2F
ab30 = $30
ab31 = $31
ab32 = $32
ab33 = $33
ab34 = $34
ab35 = $35
ab36 = $36
ab37 = $37
ab38 = $38
ab39 = $39
ab3A = $3A
ab3B = $3B
ab3C = $3C
ab3D = $3D
ab3E = $3E
ab3F = $3F
ab40 = $40 ; mx3
ab41 = $41
ab42 = $42 ; my3
ab43 = $43
ab44 = $44 ; mz3
ab45 = $45
ab46 = $46 ; mx2
ab47 = $47
ab48 = $48 ; my2
ab49 = $49
ab4A = $4A ; mz2
ab4B = $4B
ab4C = $4C ; mx1
ab4D = $4D
ab4E = $4E ; my1
ab4F = $4F
ab50 = $50 ; mz1
ab51 = $51
ab52 = $52 ; xpos
ab53 = $53
ab54 = $54 ; ypos
ab55 = $55
ab56 = $56 ; zpos
ab57 = $57
ab58 = $58
ab59 = $59
ab5A = $5A
ab5B = $5B
ab5C = $5C
ab5D = $5D
ab5E = $5E
ab5F = $5F
ab60 = $60
ab61 = $61
ab62 = $62
ab63 = $63
ab64 = $64
ab65 = $65
LINE_INC = $66
ab67 = $67
ab68 = $68
ab69 = $69
ab6A = $6A
ab6B = $6B
ab6C = $6C
ab6D = $6D
ab6E = $6E
ab6F = $6F
BUILDING_GROUND_POINTS = $70	; number of points?
POINTS_PTR_LO = $70
BUILDING_GROUND_LINES = $71
POINTS_PTR_HI = $71
CURR_X_LSB = $72
CURR_X_MSB = $73
CURR_X_HSB = $74
CURR_Y_LSB = $75
CURR_Y_MSB = $76
CURR_Y_HSB = $77
CURR_Z_LSB = $78
CURR_Z_MSB = $79
CURR_Z_HSB = $7A
ab7B = $7B
ab7C = $7C
ab7D = $7D
ab7F = $7F
ab80 = $80
ab81 = $81
ab82 = $82
ab83 = $83
ab84 = $84
ab85 = $85
ab86 = $86
ab87 = $87
ab88 = $88
ab89 = $89
ab8A = $8A
ab8B = $8B
ab8C = $8C
ab8D = $8D
ab8E = $8E
ab8F = $8F
ab90 = $90
ab91 = $91
ab92 = $92
ab93 = $93
ab94 = $94
ab95 = $95
ab96 = $96
ab97 = $97
BUILDING_LINE_START = $98
ab99 = $99
ab9A = $9A
ab9B = $9B
ab9C = $9C
ab9D = $9D
ab9E = $9E
ab9F = $9F
abA0 = $A0
abA1 = $A1
abA2 = $A2
abA3 = $A3
abA5 = $A5
abA6 = $A6
abA8 = $A8
abA9 = $A9
abAA = $AA
abAB = $AB
abAC = $AC
abAD = $AD
abAF = $AF
abB0 = $B0
abB1 = $B1
abB2 = $B2
abB3 = $B3
abB5 = $B5
abB6 = $B6
abB7 = $B7
abB8 = $B8
abB9 = $B9
abBA = $BA
abBB = $BB
abBC = $BC

abBEC0_JOYSTICK = $C1

abC2 = $C2
abC4 = $C4
abC5 = $C5
abC6 = $C6
abC7 = $C7
abC8 = $C8
abCA = $CA
abCB = $CB
abCC = $CC
abCD = $CD
abCF = $CF
abD0 = $D0
abD1 = $D1
abD2 = $D2
abD3 = $D3
abD4 = $D4
DIFF_X_LSB = $D5
DIFF_X_MSB = $D6
DIFF_X_HSB = $D7
DIFF_Y_LSB = $D8
DIFF_Y_MSB = $D9
DIFF_Y_HSB = $DA
DIFF_Z_LSB = $DB
DIFF_Z_MSB = $DC
DIFF_Z_HSB = $DD
abDE = $DE
abDF = $DF
abE0 = $E0
abE2 = $E2
abE3 = $E3
abE4 = $E4
abE6 = $E6
abE8 = $E8
abE9 = $E9 ; object to draw
abEA = $EA
abEB = $EB
abEC = $EC
abED = $ED
abEE = $EE
abEF = $EF
abF0 = $F0
abF1 = $F1
abF2 = $F2
abF3 = $F3
abF6 = $F6
abF7 = $F7
abF9 = $F9
abFA = $FA
abFB = $FB
abFC = $FC
abFD = $FD
abFE = $FE
;
; **** ZP POINTERS **** 
;
p00 = $00

SCREEN_POS_PTR = $02
p1B = $1B
OBJECT_POINTER = $1D
p34 = $34
p3C = $3C
p47 = $47
p48 = $48
p8B = $8B
pFB = $FB
pFD = $FD
;
; **** FIELDS **** 
;
fDB77 = $DB77
fFFFE = $FFFE
fFFFF = $FFFF

;
; **** ABSOLUTE ADRESSES **** 
;
abD800 = $D800
abDAFA = $DAFA
abDAFB = $DAFB
abDB22 = $DB22
abDB23 = $DB23
abDB42 = $DB42
abDB43 = $DB43
abDB44 = $DB44
abDB45 = $DB45
abDB4A = $DB4A
abDB4B = $DB4B
abDB6A = $DB6A
abDB6B = $DB6B
abDB6C = $DB6C
abDB6D = $DB6D
abDB72 = $DB72
abDB73 = $DB73
abEAEA = $EAEA
abFFFA = $FFFA
abFFFB = $FFFB
abFFFE = $FFFE
abFFFF = $FFFF
;
; **** POINTERS **** 
;
p0004 = $0004
p80 = $0080
p0200 = $0200
pE000 = $E000
;
; **** EXTERNAL JUMPS **** 
;
e0000 = $0000
e0038 = $0038
e0080 = $0080

;
; **** PREDEFINED LABELS **** 
;
ROM_CINT = $FF81
ROM_IOINIT = $FF84
ROM_SETLFS = $FFBA
ROM_SETNAM = $FFBD
ROM_LOAD = $FFD5
ROM_SAVE = $FFD8
;
; ** added labels **
;
f8024 = $8024
f0025 = $0025
f8028 = $8028
f0029 = $0029
fe057 = $e057
ab0077 = $0077
fD87E = $D87E
b2013 = $2013
p1C = $1C
f0040 = $0040
p08 = $08
f0000 = $0000
f7fe0 = $7fe0
p01 = $01
p03 = $03
p04 = $04
p06 = $06
p0B = $0B
p0E = $0E
p0F = $0F
p12 = $12
p16 = $16
p91 = $91
p4c = $4c
pB3 = $b3

abD07F = $d07f
abF85E = $f85e
f00BF = $00bf
ab2519 = $2519
p8C = $8c
f2D8C = $2d8c
f8B = $8b
b29EF = $29ef
ab0100 = $0100
f0004 = $0004
f9F = $9f
f009E =$009e
f0008 =$0008
b29DC =$29dc
fE09E = $e09e 
f2F9E = $2f9e
f3F = $3f
p51 = $51
p69 = $69
p50 = $50
f80AC = $80ac
fD800 = $d800
e0101 = $0101
f000B = $000b
f00 = $00
ab0042 = $0042
p2B = $2b
ab3200 = $3200
ab2400 = $2400
ab3421 = $3421
f2E = $2e
p21 = $21
f30 = $30
ab2329 = $2329
p22 = $22
fA3 = $a3

j5245 = $5245
 ab728D = $728D
 ab8c73 = $8C73
ab8c98 = $8C98
b8d1a = $8D1A
ab8d40 = $8D40
ab8E28 = $8e28
ab8E27 = $8e27

ab0F0E = $0f0e
ab230f = $2310

ab8DD9 = $8dd9
b98cd = $98cd
s9950 = $9950

f0140 = $0140
f0180 = $0180
f02C0 = $02C0
p140C = $140c
f0200 = $0200
f0340 = $0340
f0380 = $0380
f03C0 = $03C0
f0400 = $0400
f0440 = $0440
f0480 = $0480
f04C0 = $04C0
f0500 = $0500
f0540 = $0540
f0580 = $0580
f05C0 = $05C0
ab0600 = $0600
f0640 = $0640
f0680 = $0680 ; perspective hor pos
f06C0 = $06C0 ; perspective ver pos
f0700 = $0700
f0740 = $0740
f0780 = $0780
f07C0 = $07C0


       * = $801

    jmp STARTUP
OBJ53
	.byte $11,$FD,$08,$00
  .BYTE $03,$04,$00,$FD,$04,$00,$03,$08
  .BYTE $00,$FF,$07,$00,$01,$07,$00,$02
  .BYTE $09,$00,$02,$0A,$00,$01,$0B,$00
  .BYTE $FF,$0B,$00,$FE,$0A,$00,$FE,$09
  .BYTE $00,$FF,$0A,$00,$FF,$09,$00,$01
  .BYTE $0A,$00,$01,$09,$00,$FF,$08,$00
  .BYTE $01,$08,$00,$8C,$00,$01,$02,$03
  .BYTE $04,$05,$05,$06,$06,$07,$07,$08
  .BYTE $08,$09,$09,$0A,$0A,$0B,$0B,$04
  .BYTE $0C,$0D,$0E,$0F,$10,$11
OBJ5
  .byte $0C,$FE
  .BYTE $00,$E0,$02,$00,$E0,$06,$00,$10
  .BYTE $FA,$00,$10,$FC,$04,$E8,$04,$04
  .BYTE $E8,$06,$06,$16,$FA,$06,$16,$00
  .BYTE $04,$E8,$00,$0A,$1A,$00,$06,$16
  .BYTE $10,$00,$20,$F0,$00,$20,$15,$01
  .BYTE $12,$23,$30,$45,$56,$67,$74,$15
  .BYTE $04,$26,$37,$89,$9A,$A8,$1B,$B2
  .BYTE $0C,$C3,$6B,$7C,$BC,$0B,$FA,$00
  .BYTE $FF,$FA,$00,$02,$FD
OBJ27
  .byte $00,$03,$06
  .BYTE $00,$02,$06,$00,$FF,$FD,$00,$FE
  .BYTE $FA,$03,$FF,$FA,$03,$02,$FD,$03
  .BYTE $03,$06,$03,$02,$06,$03,$FF,$FD
  .BYTE $03,$FE,$11,$01,$12,$23,$34,$45
  .BYTE $50,$67,$78,$89,$9A,$AB,$06,$17
  .BYTE $28,$39,$4A,$5B,$B6
OBJ32
	.byte $0B,$06,$07
  .BYTE $00,$06,$0C,$00,$06,$0F,$00,$FA
  .BYTE $0F,$00,$FA,$07,$00,$04,$0B,$00
  .BYTE $02,$0D,$00,$00,$09,$00,$FE,$0B
  .BYTE $00,$FC,$0A,$00,$FB,$07,$00,$FA
  .BYTE $04,$00,$0A,$02,$23,$34,$40,$15
  .BYTE $56,$67,$78,$89,$9A,$AB
OBJ43
	.byte $12,$FA
  .BYTE $10,$00,$FC,$0E,$00,$FE,$0C,$00
  .BYTE $01,$09,$00,$05,$10,$00,$04,$0E
  .BYTE $00,$03,$0C,$00,$08,$09,$00,$07
  .BYTE $09,$00,$04,$09,$00,$07,$00,$00
  .BYTE $05,$03,$00,$03,$06,$00,$FA,$00
  .BYTE $00,$FC,$02,$00,$FF,$06,$00,$F8
  .BYTE $07,$00,$F9,$07,$00,$FD,$08,$00
  .BYTE $93,$00,$03,$04,$03,$07,$03,$0A
  .BYTE $03,$0E,$03,$11,$03,$0D,$0E,$10
  .BYTE $11,$01,$05,$05,$08,$08,$0B,$0B
  .BYTE $0E,$0E,$11,$11,$01,$02,$06,$06
  .BYTE $09,$09,$0C,$0C,$0F,$0F,$12,$12
  .BYTE $02
OBJ28
  .byte $09,$FE,$00,$FE,$00,$00,$02
  .BYTE $02,$00,$FE,$00,$01,$00,$00,$03
  .BYTE $00,$00,$07,$00,$FE,$06,$FF,$FE
  .BYTE $08,$01,$02,$08,$01,$02,$06,$FF
  .BYTE $09,$04,$14,$24,$35,$67,$78,$89
  .BYTE $96,$68,$79
OBJ42
	.byte $16,$F8,$00,$FD,$F8
  .BYTE $00,$04,$08,$00,$04,$08,$00,$FD
  .BYTE $F8,$07,$FD,$F8,$07,$04,$08,$07
  .BYTE $04,$08,$07,$FD,$F9,$07,$FE,$F9
  .BYTE $07,$02,$FF,$07,$02,$FF,$07,$FE
  .BYTE $F9,$04,$FE,$F9,$04,$02,$FF,$04
  .BYTE $02,$FF,$04,$FE,$FC,$07,$03,$FC
  .BYTE $09,$03,$FB,$09,$03,$FD,$09,$03
  .BYTE $FC,$08,$03,$FC,$08,$01,$FC,$06
  .BYTE $01,$9B,$00,$01,$01,$02,$02,$03
  .BYTE $03,$00,$04,$05,$05,$06,$06,$07
  .BYTE $07,$04,$00,$04,$01,$05,$02,$06
  .BYTE $03,$07,$08,$09,$09,$0A,$0A,$0B
  .BYTE $0B,$08,$0C,$0D,$0D,$0E,$0E,$0F
  .BYTE $0F,$0C,$0C,$08,$0D,$09,$0E,$0A
  .BYTE $0F,$0B,$10,$11,$12,$13,$14,$15
  .BYTE $15,$16
OBJ36
	.byte $13,$FC,$00,$FC,$FC,$00
  .BYTE $04,$04,$00,$04,$04,$00,$FC,$FC
  .BYTE $0A,$FC,$FC,$0A,$04,$04,$0A,$04
  .BYTE $04,$0A,$FC,$FF,$02,$FC,$FF,$04
  .BYTE $FC,$FD,$04,$FC,$FD,$06,$FC,$FF
  .BYTE $06,$FC,$FF,$08,$FC,$01,$08,$FC
  .BYTE $01,$06,$FC,$03,$06,$FC,$03,$04
  .BYTE $FC,$01,$04,$FC,$01,$02,$FC,$97
  .BYTE $00,$01,$01,$02,$02,$03,$03,$00
  .BYTE $04,$05,$05,$06,$06,$07,$07,$04
  .BYTE $00,$04,$01,$05,$02,$06,$03,$07
  .BYTE $08,$09,$09,$0A,$0A,$0B,$0B,$0C
  .BYTE $0C,$0D,$0D,$0E,$0E,$0F,$0F,$10
  .BYTE $10,$11,$11,$12,$12,$13,$13,$08
OBJ37
  .BYTE $1F,$FB,$00,$03,$FB,$00,$FD,$05
  .BYTE $00,$FD,$05,$00,$03,$FB,$06,$03
  .BYTE $FB,$06,$FD,$05,$06,$FD,$05,$06
  .BYTE $03,$FC,$02,$FD,$FC,$03,$FD,$FC
  .BYTE $04,$FD,$FD,$04,$FD,$FD,$03,$FD
  .BYTE $FE,$02,$FD,$FE,$03,$FD,$FE,$04
  .BYTE $FD,$FF,$04,$FD,$FF,$03,$FD,$FF
  .BYTE $02,$FD,$00,$02,$FD,$00,$03,$FD
  .BYTE $00,$04,$FD,$01,$04,$FD,$01,$03
  .BYTE $FD,$02,$02,$FD,$02,$03,$FD,$02
  .BYTE $04,$FD,$03,$04,$FD,$03,$03,$FD
  .BYTE $03,$02,$FD,$04,$02,$FD,$04,$04
  .BYTE $FD,$9D,$00,$01,$01,$02,$02,$03
  .BYTE $03,$00,$04,$05,$05,$06,$06,$07
  .BYTE $07,$04,$00,$04,$01,$05,$02,$06
  .BYTE $03,$07,$08,$0A,$0A,$0B,$0B,$0C
  .BYTE $0C,$09,$0D,$0F,$0F,$10,$0E,$11
  .BYTE $0D,$12,$13,$15,$15,$16,$16,$17
  .BYTE $17,$14,$18,$1D,$1D,$1C,$19,$1C
  .BYTE $19,$1A,$1A,$1B,$1E,$1F
OBJ31
	.byte $0F,$FB
  .BYTE $00,$FE,$FB,$00,$02,$00,$00,$02
  .BYTE $00,$00,$FE,$FB,$06,$FE,$FB,$06
  .BYTE $02,$00,$06,$02,$00,$06,$FE,$FB
  .BYTE $09,$FF,$FB,$09,$02,$00,$09,$02
  .BYTE $00,$09,$FF,$FB,$0B,$00,$FB,$0B
  .BYTE $02,$00,$0B,$02,$00,$0B,$00,$15
  .BYTE $01,$12,$23,$30,$45,$56,$67,$74
  .BYTE $04,$37,$1D,$2E,$89,$9A,$AB,$B8
  .BYTE $CD,$DE,$EF,$FC,$8C,$BF
OBJ30
	.byte $07,$F0
  .BYTE $00,$F0,$10,$00,$F0,$10,$00,$10
  .BYTE $F0,$00,$10,$F0,$10,$F0,$10,$10
  .BYTE $F0,$10,$10,$10,$F0,$10,$10,$0B
  .BYTE $01,$12,$23,$30,$45,$56,$67,$74
  .BYTE $04,$15,$26,$37
OBJ35
	.byte $0D,$FC,$00,$00
  .BYTE $FE,$05,$00,$FC,$07,$00,$FC,$09
  .BYTE $00,$FE,$0B,$00,$02,$0B,$00,$04
  .BYTE $09,$00,$04,$07,$00,$02,$05,$00
  .BYTE $04,$00,$00,$FD,$08,$00,$FF,$08
  .BYTE $00,$01,$08,$00,$03,$08,$00,$0B
  .BYTE $01,$12,$23,$34,$45,$56,$67,$78
  .BYTE $89,$18,$AB,$CD
OBJ41
	.byte $0A,$00,$05,$FE
  .BYTE $00,$0C,$FE,$00,$0C,$02,$00,$05
  .BYTE $02,$00,$06,$FF,$00,$0B,$FF,$00
  .BYTE $0B,$01,$00,$09,$01,$00,$09,$FF
  .BYTE $00,$05,$00,$00,$00,$00,$08,$01
  .BYTE $12,$23,$30,$45,$56,$67,$78,$9A
  .BYTE $00
OBJ39
	.byte $0F,$F6,$00,$FA,$F6,$00,$06
  .BYTE $0A,$00,$06,$0A,$00,$FA,$F8,$0A
  .BYTE $FC,$F8,$0A,$04,$08,$0A,$04,$08
  .BYTE $0A,$FC,$F6,$00,$FD,$F6,$00,$03
  .BYTE $FA,$00,$03,$FA,$00,$FD,$FA,$00
  .BYTE $00,$0A,$00,$00,$04,$00,$FF,$08
  .BYTE $00,$FF,$10,$01,$12,$23,$30,$45
  .BYTE $56,$67,$74,$04,$15,$26,$37,$9A
  .BYTE $AB,$B8,$CD,$EF
OBJ40
	.byte $05,$FA,$00,$FA
  .BYTE $06,$00,$FA,$06,$00,$06,$FA,$00
  .BYTE $06,$FA,$0C,$00,$06,$0C,$00,$08
  .BYTE $01,$12,$23,$30,$04,$43,$15,$52
  .BYTE $45
OBJ51
	.byte $04,$AA,$00,$AA,$AA,$00,$56
  .BYTE $56,$00,$56,$56,$00,$AA,$00,$7F
  .BYTE $00,$07,$01,$12,$23,$30,$04,$14
  .BYTE $24,$34
OBJ45
	.byte $0E,$00,$00,$00,$FC,$14
  .BYTE $FC,$FC,$14,$04,$04,$14,$04,$04
  .BYTE $14,$FC,$FC,$5A,$FC,$FC,$5A,$04
  .BYTE $04,$5A,$04,$04,$5A,$FC,$00,$6E
  .BYTE $00,$00,$7F,$00,$D8,$00,$D8,$D8
  .BYTE $00,$28,$28,$00,$28,$28,$00,$D8
  .BYTE $18,$01,$02,$03,$04,$12,$23,$34
  .BYTE $41,$56,$67,$78,$85,$15,$26,$37
  .BYTE $48,$59,$69,$79,$89,$B5,$C6,$D7
  .BYTE $E8,$0A
OBJ21
.byte $07,$FD,$06,$FE,$FD,$06
  .BYTE $02,$00,$06,$04,$03,$06,$02,$03
  .BYTE $06,$FE,$00,$06,$FC,$00,$06,$00
  .BYTE $00,$00,$00,$09,$01,$12,$23,$34
  .BYTE $45,$50,$03,$14,$25,$67
OBJ10 .BYTE $15,$FC
  .BYTE $00,$FC,$FC,$00,$04,$04,$00,$04
  .BYTE $04,$00,$FC,$FE,$09,$FE,$FE,$09
  .BYTE $02,$02,$09,$02,$02,$09,$FE,$FE
  .BYTE $0B,$FE,$FE,$0B,$02,$02,$0B,$02
  .BYTE $02,$0B,$FE,$FF,$0B,$FE,$FF,$09
  .BYTE $FE,$01,$0B,$FE,$01,$09,$FE,$00
  .BYTE $0B,$FA,$FB,$0B,$03,$05,$0B,$03
  .BYTE $00,$0E,$FE,$FE,$0E,$01,$02,$0E
  .BYTE $01,$9E,$00,$01,$01,$02,$02,$03
  .BYTE $03,$00,$04,$05,$05,$06,$06,$07
  .BYTE $07,$04,$08,$09,$09,$0A,$0A,$0B
  .BYTE $0B,$08,$0C,$0D,$0E,$0F,$10,$11
  .BYTE $11,$12,$12,$10,$13,$14,$14,$15
  .BYTE $15,$13,$00,$04,$01,$05,$02,$06
  .BYTE $03,$07,$04,$08,$05,$09,$06,$0A
  .BYTE $07,$0B,$10,$13,$11,$14,$12,$15
OBJ22
  .BYTE $0B,$FE,$00,$00,$01,$00,$02,$01
  .BYTE $00,$FE,$00,$03,$00,$00,$06,$00
  .BYTE $FE,$09,$00,$01,$09,$02,$01,$09
  .BYTE $FE,$00,$09,$00,$FA,$12,$00,$03
  .BYTE $12,$05,$03,$12,$FB,$11,$01,$12
  .BYTE $20,$03,$13,$23,$45,$46,$47,$56
  .BYTE $67,$75,$89,$8A,$8B,$9A,$AB,$B9
OBJ24
  .BYTE $0F,$00,$04,$FC,$FC,$04,$00,$00
  .BYTE $04,$04,$04,$04,$00,$00,$0C,$FC
  .BYTE $FC,$0C,$00,$00,$0C,$04,$04,$0C
  .BYTE $00,$FE,$06,$FE,$FE,$06,$02,$02
  .BYTE $06,$02,$02,$06,$FE,$FE,$0A,$FE
  .BYTE $FE,$0A,$02,$02,$0A,$02,$02,$0A
  .BYTE $FE,$07,$17,$35,$06,$24,$8E,$AC
  .BYTE $9F,$BD
OBJ47
	.byte $23,$FA,$00,$F6,$02,$00
  .BYTE $F0,$02,$00,$10,$FA,$00,$0A,$FA
  .BYTE $0A,$F6,$02,$10,$F0,$02,$10,$10
  .BYTE $FA,$0A,$0A,$FA,$04,$F6,$00,$04
  .BYTE $FD,$00,$04,$03,$FA,$04,$0A,$00
  .BYTE $0A,$FD,$00,$0A,$03,$FB,$05,$F7
  .BYTE $FB,$09,$F7,$FF,$09,$FC,$FF,$05
  .BYTE $FC,$FF,$05,$04,$FF,$09,$04,$FB
  .BYTE $09,$09,$FB,$05,$09,$00,$05,$FE
  .BYTE $00,$06,$FE,$00,$06,$FF,$00,$05
  .BYTE $FF,$00,$05,$01,$00,$06,$01,$00
  .BYTE $06,$02,$00,$05,$02,$00,$07,$FE
  .BYTE $00,$07,$02,$00,$08,$FE,$00,$08
  .BYTE $02,$00,$09,$FE,$00,$09,$02,$A4
  .BYTE $00,$01,$01,$05,$05,$04,$04,$00
  .BYTE $03,$07,$07,$06,$06,$02,$02,$03
  .BYTE $01,$02,$05,$06,$08,$09,$09,$0A
  .BYTE $0A,$0B,$04,$0C,$0C,$0D,$0D,$07
  .BYTE $09,$0C,$0A,$0D,$0E,$0F,$0F,$10
  .BYTE $10,$11,$11,$0E,$12,$13,$13,$14
  .BYTE $14,$15,$15,$12,$16,$17,$17,$18
  .BYTE $18,$19,$19,$16,$1A,$1B,$1B,$1C
  .BYTE $1C,$1D,$1D,$1A,$1E,$1F,$20,$21
  .BYTE $22,$23
OBJ38
	.byte $0F,$FE,$00,$FE,$FE,$00
  .BYTE $02,$02,$00,$02,$02,$00,$FE,$FE
  .BYTE $06,$FE,$FE,$06,$02,$02,$06,$02
  .BYTE $02,$06,$FE,$FF,$08,$FF,$FF,$08
  .BYTE $01,$01,$08,$01,$01,$08,$FF,$FF
  .BYTE $09,$FF,$FF,$09,$01,$01,$09,$01
  .BYTE $01,$09,$FF,$1B,$01,$12,$23,$30
  .BYTE $45,$56,$67,$74,$89,$9A,$AB,$B8
  .BYTE $CD,$DE,$EF,$FC,$04,$15,$26,$37
  .BYTE $48,$59,$6A,$7B,$8C,$9D,$AE,$BF
OBJ23
  .BYTE $0F,$00,$00,$F7,$FC,$02,$F7,$FA
  .BYTE $06,$F7,$FC,$0A,$F7,$00,$0C,$F7
  .BYTE $04,$0A,$F7,$06,$06,$F7,$04,$02
  .BYTE $F7,$00,$00,$09,$FC,$02,$09,$FA
  .BYTE $06,$09,$FC,$0A,$09,$00,$0C,$09
  .BYTE $04,$0A,$09,$06,$06,$09,$04,$02
  .BYTE $09,$0F,$08,$19,$2A,$3B,$4C,$5D
  .BYTE $6E,$7F,$0C,$48,$1D,$59,$2E,$6A
  .BYTE $3F,$7B
OBJ20
  .byte $0F,$00,$00,$F7,$FC,$02
  .BYTE $F7,$FA,$06,$F7,$FC,$0A,$F7,$00
  .BYTE $0C,$F7,$04,$0A,$F7,$06,$06,$F7
  .BYTE $04,$02,$F7,$00,$00,$09,$FC,$02
  .BYTE $09,$FA,$06,$09,$FC,$0A,$09,$00
  .BYTE $0C,$09,$04,$0A,$09,$06,$06,$09
  .BYTE $04,$02,$09,$1B,$08,$19,$2A,$3B
  .BYTE $4C,$5D,$6E,$7F,$01,$12,$23,$34
  .BYTE $45,$56,$67,$70,$89,$9A,$AB,$BC
  .BYTE $CD,$DE,$EF,$F8,$15,$37,$9D,$BF
OBJ25
  .BYTE $0F,$00,$00,$00,$00,$09,$00,$FE
  .BYTE $08,$FE,$FE,$08,$02,$FE,$0A,$FE
  .BYTE $FE,$0A,$02,$FE,$08,$00,$FE,$0A
  .BYTE $00,$FE,$09,$00,$08,$09,$00,$01
  .BYTE $09,$FE,$01,$09,$02,$04,$09,$FE
  .BYTE $04,$09,$02,$07,$09,$FE,$07,$09
  .BYTE $02,$07,$01,$89,$23,$45,$67,$AB
  .BYTE $CD,$EF
OBJ26
	.byte $0C,$FD,$00,$FE,$FD,$00
  .BYTE $02,$00,$00,$04,$03,$00,$02,$03
  .BYTE $00,$FE,$00,$00,$FC,$FD,$06,$FE
  .BYTE $FD,$06,$02,$00,$06,$04,$03,$06
  .BYTE $02,$03,$06,$FE,$00,$06,$FC,$00
  .BYTE $0C,$00,$17,$01,$12,$23,$34,$45
  .BYTE $50,$67,$78,$89,$9A,$AB,$B6,$06
  .BYTE $17,$28,$39,$4A,$5B,$6C,$7C,$8C
  .BYTE $9C,$AC,$BC
OBJ44
	.byte $0D,$FF,$00,$FF,$FF
  .BYTE $00,$01,$01,$00,$01,$01,$00,$FF
  .BYTE $FE,$09,$FE,$FE,$09,$02,$02,$09
  .BYTE $02,$02,$09,$FE,$FF,$0C,$FF,$FF
  .BYTE $0C,$01,$01,$0C,$01,$01,$0C,$FF
  .BYTE $00,$00,$00,$00,$09,$00,$10,$01
  .BYTE $12,$23,$30,$45,$56,$67,$74,$89
  .BYTE $9A,$AB,$B8,$CD,$48,$59,$6A,$7B
OBJ46
  .BYTE $11,$FB,$00,$FE,$FB,$00,$00,$FB
  .BYTE $06,$FE,$FB,$06,$00,$05,$00,$FE
  .BYTE $05,$00,$00,$05,$06,$FE,$05,$06
  .BYTE $00,$FD,$00,$00,$FD,$04,$00,$03
  .BYTE $04,$00,$03,$00,$00,$FE,$01,$00
  .BYTE $FE,$03,$00,$02,$03,$00,$02,$01
  .BYTE $00,$FE,$02,$00,$02,$02,$00,$92
  .BYTE $00,$01,$00,$02,$02,$03,$03,$01
  .BYTE $04,$05,$04,$06,$06,$07,$07,$05
  .BYTE $01,$05,$02,$06,$03,$07,$08,$09
  .BYTE $09,$0A,$0A,$0B,$0C,$0D,$0D,$0E
  .BYTE $0E,$0F
OBJ33
	.byte $0F,$0C,$10,$11,$07,$FE
  .BYTE $00,$FA,$FE,$00,$06,$02,$00,$06
  .BYTE $02,$00,$FA,$FF,$03,$FB,$FF,$03
  .BYTE $05,$01,$03,$05,$01,$03,$FB,$0B
  .BYTE $01,$12,$23,$30,$45,$56,$67,$74
  .BYTE $04,$15,$26,$37
OBJ34 .byte $19,$03,$00,$F6
  .BYTE $FD,$00,$F6,$FC,$06,$F6,$FD,$06
  .BYTE $F6,$FE,$03,$F6,$02,$03,$F6,$03
  .BYTE $00,$F8,$FE,$00,$F8,$FE,$03,$F8
  .BYTE $02,$03,$F8,$03,$00,$0A,$FD,$00
  .BYTE $0A,$FC,$06,$0A,$FD,$06,$0A,$FE
  .BYTE $03,$0A,$02,$03,$0A,$03,$00,$08
  .BYTE $FE,$00,$08,$FE,$03,$08,$02,$03
  .BYTE $08,$FE,$02,$F8,$02,$02,$F8,$02
  .BYTE $00,$F8,$FE,$02,$08,$02,$02,$08
  .BYTE $02,$00,$08,$A3,$00,$01,$01,$02
  .BYTE $02,$03,$03,$04,$04,$05,$05,$00
  .BYTE $06,$07,$07,$08,$08,$09,$09,$06
  .BYTE $0A,$0B,$0B,$0C,$0C,$0D,$0D,$0E
  .BYTE $0E
  .BYTE $0F,$0F,$0A ;SLO $0A0F
  .BYTE $10,$11,$11,$12,$12,$13,$13,$10
  .BYTE $14,$15,$15,$16,$17,$18,$18,$19
  .BYTE $01,$0B,$02,$0C,$03,$0D,$14,$17
  .BYTE $15,$18,$16,$19,$04,$08,$05,$09
  .BYTE $00,$06,$0E,$12,$0F,$13,$0A,$10
OBJ9
  .BYTE $12,$FC,$16,$04,$04,$16,$04,$00
  .BYTE $16,$FC,$FF,$12,$01,$01,$12,$01
  .BYTE $00,$12,$FF,$FD,$12,$03,$03,$12
  .BYTE $03,$00,$12,$FD,$F0,$16,$10,$10
  .BYTE $16,$10,$FE,$02,$02,$02,$02,$02
  .BYTE $00,$00,$FE,$FE,$00,$02,$02,$00
  .BYTE $02,$00,$02,$FE,$00,$13,$F9,$00
  .BYTE $0C,$E6,$9A,$00,$01,$01,$02,$02
  .BYTE $00,$03,$04,$04,$05,$05,$03,$00
  .BYTE $03,$01,$04,$02,$05,$06,$07,$07
  .BYTE $08,$08,$06,$09,$06,$09,$0B,$06
  .BYTE $0B,$0A,$07,$0A,$0C,$07,$0C,$0B
  .BYTE $0E,$0C,$0F,$08,$0D,$0D,$0E,$0E
  .BYTE $0F,$0F,$0D,$10,$11,$11,$12,$12
  .BYTE $10,$4C,$00,$00,$4B,$50,$35,$20
		
OBJ_X_MSB
		.BYTE $6F,$62,$7F,$04,$0A,$03,$01,$08
  .BYTE $73,$00,$88,$00,$01,$01,$00,$89
  .BYTE $04,$01,$01,$02,$04,$03,$01,$05
  .BYTE $02,$04,$03,$03,$04,$03,$03,$05
  .BYTE $06,$0A,$02,$02,$04,$02,$05,$00
  .BYTE $04,$06,$05,$06,$03,$05,$02,$05
  .BYTE $00,$03,$83,$01,$03,$02,$03,$03
  .BYTE $03,$00,$04,$01,$00,$72,$72,$70

OBJ_Y_MSB  
  .BYTE $80,$00,$00,$00,$00,$00,$00,$00
  .BYTE $FF,$00,$00,$00,$00,$00,$00,$B2
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$FC

OBJ_Z_MSB
		.BYTE $F2,$83,$80,$08,$04,$08,$04,$08
  .BYTE $8E,$03,$88,$03,$03,$00,$00,$89
  .BYTE $01,$01,$00,$02,$02,$02,$01,$01
  .BYTE $00,$02,$02,$02,$02,$02,$00,$01
  .BYTE $02,$01,$01,$02,$03,$04,$02,$01
  .BYTE $02,$04,$03,$03,$02,$02,$04,$03
  .BYTE $04,$00,$8D,$00,$06,$02,$02,$00
  .BYTE $57,$01,$00,$00,$06,$72,$72,$70

OBJ_X_HSB
  .BYTE $00,$0F,$0C,$00,$00,$00,$00,$00
  .BYTE $03,$00,$08,$00,$00,$00,$00,$08
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$DE,$00,$00,$00,$00,$00
  .BYTE $B5,$00,$00,$00,$00,$51,$88,$08

OBJ_Y_HSB
		.BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $FF,$00,$00,$00,$00,$00,$00,$FF
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$40

OBJ_Z_HSB
		.BYTE $07,$0E,$0D,$00,$00,$00,$00,$00
  .BYTE $0F,$00,$08,$00,$00,$00,$00,$08
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$0B,$00,$00,$00,$00,$00
  .BYTE $D9,$00,$00,$00,$00,$23,$88,$08

OBJECT_SHAPE_PTR_LO   
 .BYTE <OBJ1,<OBJ1,<OBJ2,<OBJ3,<OBJ4,<OBJ5,<OBJ6,<OBJ7
 .BYTE <OBJ8,<OBJ1,<OBJ9,<OBJ1,<OBJ10,<OBJ1,<OBJ8,<OBJ4
 .BYTE <OBJ11,<OBJ12,<OBJ13,<OBJ14,<OBJ15,<OBJ16,<OBJ17,<OBJ18
 .BYTE <OBJ19,<OBJ20,<OBJ21,<OBJ22,<OBJ23,<OBJ24,<OBJ25,<OBJ26
 .BYTE <OBJ27,<OBJ28,<OBJ29,<OBJ30,<OBJ31,<OBJ32,<OBJ33,<OBJ34
 .BYTE <OBJ35,<OBJ36,<OBJ37,<OBJ38,<OBJ39,<OBJ40,<OBJ41,<OBJ42
 .BYTE <OBJ43,<OBJ44,<OBJ45,<OBJ46,<OBJ47,<OBJ48,<OBJ49,<OBJ50
 .BYTE <OBJ51,<OBJ52,<OBJ53,<OBJ53,<OBJ52,<OBJ54,<OBJ54,<OBJ55

OBJECT_SHAPE_PTR_HI   
 .BYTE >OBJ1,>OBJ1,>OBJ2,>OBJ3,>OBJ4,>OBJ5,>OBJ6,>OBJ7
 .BYTE >OBJ8,>OBJ1,>OBJ9,>OBJ1,>OBJ10,>OBJ1,>OBJ8,>OBJ4
 .BYTE >OBJ11,>OBJ12,>OBJ13,>OBJ14,>OBJ15,>OBJ16,>OBJ17,>OBJ18
 .BYTE >OBJ19,>OBJ20,>OBJ21,>OBJ22,>OBJ23,>OBJ24,>OBJ25,>OBJ26
 .BYTE >OBJ27,>OBJ28,>OBJ29,>OBJ30,>OBJ31,>OBJ32,>OBJ33,>OBJ34
 .BYTE >OBJ35,>OBJ36,>OBJ37,>OBJ38,>OBJ39,>OBJ40,>OBJ41,>OBJ42
 .BYTE >OBJ43,>OBJ44,>OBJ45,>OBJ46,>OBJ47,>OBJ48,>OBJ49,>OBJ50
 .BYTE >OBJ51,>OBJ52,>OBJ53,>OBJ53,>OBJ52,>OBJ54,>OBJ54,>OBJ55
				
OBJ_X_LSB
  .BYTE $41,$6C,$2E,$57,$0E,$78,$A8,$00
  .BYTE $7D,$9C,$00,$9C,$61,$3C,$00,$37
  .BYTE $E5,$B7,$F1,$F6,$AE,$A7,$16,$C7
  .BYTE $1D,$28,$53,$53,$28,$53,$02,$9E
  .BYTE $11,$C0,$51,$B3,$B5,$D0,$87,$20
  .BYTE $4F,$85,$2E,$0B,$10,$58,$60,$8C
  .BYTE $6E,$CF,$05,$A6,$DF,$8C,$5A,$58
  .BYTE $DA,$00,$80,$80,$00,$00,$00,$00

OBJ_Y_LSB   
  .BYTE $01,$00,$00,$00,$00,$00,$00,$00
  .BYTE $A4,$00,$00,$00,$00,$00,$00,$E6
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$C0

OBJ_Z_LSB
		.BYTE $A4,$9B,$44,$20,$4B,$90,$37,$00
  .BYTE $2C,$72,$00,$72,$D9,$FE,$00,$0A
  .BYTE $65,$72,$BA,$95,$15,$B0,$8A,$74
  .BYTE $BA,$22,$27,$27,$22,$27,$FE,$8A
  .BYTE $70,$28,$7A,$7B,$B1,$00,$A3,$67
  .BYTE $2B,$5E,$8E,$5D,$3E,$13,$80,$B9
  .BYTE $AB,$B9,$58,$20,$C4,$A2,$ED,$AC
  .BYTE $69,$80,$00,$00,$80,$00,$00,$00

f2940   .BYTE $00
ab2941  .BYTE $FF,$00,$07,$03,$02,$36,$05,$FF
  .BYTE $FF,$00,$FF,$66,$FF,$FF,$FF,$4A
  .BYTE $3E,$3A,$A4,$42,$6D,$52,$39,$A6
  .BYTE $89,$2F,$11,$43,$45,$62,$48,$34
  .BYTE $9B,$44,$47,$A3,$A2,$33,$A8,$09
  .BYTE $0C,$32,$8E,$0F,$6C,$50,$A3,$58
  .BYTE $A8,$00,$A8,$10,$29,$29,$A5,$00
  .BYTE $90,$6F,$62,$AB,$00,$00,$00

f2980   
		.BYTE $00,$3F,$3E,$3D,$38,$32,$0A,$02
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00

f29C0   
		.BYTE $30,$20,$20,$20,$20,$20,$08,$24
  .BYTE $10,$10,$10,$10,$04,$10,$10,$10
  .BYTE $08,$00,$00,$00,$00,$00,$00,$00
  .BYTE $08,$08,$08
ab29DB  .BYTE $08
  .BYTE $08,$28,$08,$08,$08,$00,$08,$08
  .BYTE $00,$10,$08,$00,$08,$08,$08,$08
  .BYTE $08,$08
ab29EE  .BYTE $08
  .BYTE $08,$10,$00,$10,$10,$10,$00,$00
  .BYTE $00,$10,$10,$10,$10,$10,$10,$10
  .BYTE $10

OBJ1
  .BYTE $05
  
  .BYTE $F0,$00,$20,$10,$00,$20,$FD,$02
  .BYTE $20,$03,$02,$20,$00,$0C,$20,$00
  .BYTE $00,$E1,$09,$01
		
f3B3A   
		.BYTE $13,$34,$42,$20,$05,$15,$25,$35
  .BYTE $45
OBJ2
  .BYTE $0F,$F8,$00,$10,$FA,$0C,$0C
  .BYTE $FA,$0C,$00,$F9,$06,$FD,$F9,$04
  .BYTE $F4,$FC,$04,$F0,$FC,$00,$F0,$F9
  .BYTE $00,$F4,$08,$00,$10,$06,$0C,$0C
  .BYTE $06,$0C,$00,$07,$06,$FD,$07,$04
  .BYTE $F4,$04,$04,$F0,$04,$00,$F0,$07
  .BYTE $00,$F4,$17,$01,$12,$23,$34,$45
  .BYTE $56,$67,$70,$89,$9A,$AB,$BC,$CD
  .BYTE $DE,$EF,$F8,$47,$CF,$08,$19,$2A
  .BYTE $3B,$5D,$6E
OBJ3
	.BYTE $0F,$F8,$04,$18,$08
  .BYTE $04,$18,$00,$04,$E8,$00,$0C,$18
  .BYTE $E2,$04,$18,$1E,$04,$18,$FC,$04
  .BYTE $00,$04,$04,$00,$00,$14,$18,$00
  .BYTE $0A,$0C,$F2,$04,$10,$F2,$00,$10
  .BYTE $0E,$04,$10,$0E,$00,$10,$00,$04
  .BYTE $F0,$00,$00,$F0,$0C,$20,$23,$21
  .BYTE $13,$03,$45,$46,$57,$38,$89,$AB
  .BYTE $CD,$EF
OBJ4
  .byte $07,$00,$00,$00,$EC,$07
  .BYTE $00,$F6,$07,$11,$0A,$07,$11,$14
  .BYTE $07,$00,$0A,$07,$EF,$F6,$07,$EF
  .BYTE $00,$10,$00,$11,$01,$02,$03,$04
  .BYTE $05,$06,$71,$72,$73,$74,$75,$76
  .BYTE $12,$23,$34,$45,$56,$61
OBJ6 
	.byte $05,$F4
  .BYTE $00,$10,$00,$00,$F0,$0C,$00,$10
  .BYTE $F4,$0A,$10,$00,$0A,$F0,$0C,$0A
  .BYTE $10,$08,$01,$12,$20,$34,$45,$53
  .BYTE $03,$14,$25
OBJ7
  .byte $0F,$F0,$00,$10,$10
  
  .BYTE $00,$10,$00,$00,$EC,$FC,$00,$04
  .BYTE $04,$00,$04,$00,$00,$FC,$FD,$04
  .BYTE $03,$03,$04,$03,$00,$04,$FD,$FE
  .BYTE $14,$02,$02,$14,$02,$00,$14,$FE
  .BYTE $FF,$04,$01,$01,$04,$01,$00,$04
  .BYTE $FF,$00,$34,$00,$14,$F6,$F7,$F8
  .BYTE $90,$A1,$B2,$06,$17,$28,$C3,$D4
  .BYTE $E5,$34,$45,$53,$67,$78,$86,$CD
  .BYTE $DE,$EC
OBJ8
	.byte $07,$F8,$F8,$F8,$08,$F8
  .BYTE $F8,$08,$F8,$08,$F8,$F8,$08,$F8
  .BYTE $08,$F8,$08,$08,$F8,$08,$08,$08
  .BYTE $F8,$08,$08,$0B,$01,$12,$23,$30
  .BYTE $04,$15,$26,$37,$45,$56,$67,$74
  .BYTE $09,$FC,$07,$04,$04,$07,$04,$00
OBJ11
  .BYTE $07,$FC,$00,$0E,$00,$FF,$07,$01
  .BYTE $01,$07,$01,$00,$07,$FF,$FE,$00
  .BYTE $02,$02,$00,$02,$00,$00,$FE,$0E
  .BYTE $01,$12,$20,$03,$13,$23,$45,$56
  .BYTE $64,$78,$89,$97,$47,$58,$69
OBJ12
  .BYTE $05
  .BYTE $FB,$00,$FF,$05,$00,$FF,$00,$0C
  .BYTE $FF,$FB,$00,$01,$05,$00,$01,$00
  .BYTE $0C,$01,$08,$01,$12,$20,$34,$45
  .BYTE $53,$03,$14,$25
OBJ13 .BYTE $07,$FF,$00,$FC
  .BYTE $FF,$00,$04,$FF,$0C,$02,$FF,$0C
  .BYTE $FE,$01,$00,$FC,$01,$00,$04,$01
  .BYTE $0C,$02,$01,$0C,$FE,$0B,$01,$12
  .BYTE $23,$30,$45,$56,$67,$74,$04,$15
  .BYTE $26,$37
OBJ14
  .byte $09,$04,$00,$FF,$FC,$00
  .BYTE $FF,$FA,$08,$FF,$00,$0C,$FF,$06
  .BYTE $08,$FF,$04,$00,$01,$FC,$00,$01
  .BYTE $FA,$08,$01,$00,$0C,$01,$06,$08
  .BYTE $01,$0E,$01,$12,$23,$34,$40,$56
  .BYTE $67,$78,$89,$95,$05,$16,$27,$38
  .BYTE $49
OBJ15
  .byte $09,$FD,$00,$FF,$03,$00,$FF
  .BYTE $03,$0A,$FF,$00,$0C,$FF,$FD,$0A
  .BYTE $FF,$FD,$00,$01,$03,$00,$01,$03
  .BYTE $0A,$01,$00,$0C,$01,$FD,$0A,$01
  .BYTE $0E,$01,$12,$23,$34,$40,$56,$67
  .BYTE $78,$89,$95,$05,$16,$27,$38,$49
OBJ16
  .BYTE $07,$FE,$00,$FF,$02,$00,$FF,$04
  .BYTE $0C,$FF,$FC,$0C,$FF,$FE,$00,$01
  .BYTE $02,$00,$01,$04,$0C,$01,$FC,$0C
  .BYTE $01,$0B,$01,$12,$23,$30,$45,$56
  .BYTE $67,$74,$04,$15,$26,$37
OBJ17 
	.byte $0B,$02
  .BYTE $00,$FF,$04,$06,$FF,$02,$0C,$FF
  .BYTE $FE,$0C,$FF,$FC,$06,$FF,$FE,$00
  .BYTE $FF,$02,$00,$01,$04,$06,$01,$02
  .BYTE $0C,$01,$FE,$0C,$01,$FC,$06,$01
  .BYTE $FE,$00,$01,$11,$01,$12,$23,$34
  .BYTE $45,$50,$67,$78,$89,$9A,$AB,$B6
  .BYTE $06,$17,$28,$39,$4A,$5B
OBJ18
	.byte $0B,$03
  .BYTE $00,$FF,$03,$08,$FF,$01,$0C,$FF
  .BYTE $FF,$0C,$FF,$FD,$08,$FF,$FD,$00
  .BYTE $FF,$03,$00,$01,$03,$08,$01,$01
  .BYTE $0C,$01,$FF,$0C,$01,$FD,$08,$01
  .BYTE $FD,$00,$01,$11,$01,$12,$23,$34
  .BYTE $45,$50,$67,$78,$89,$9A,$AB,$B6
  .BYTE $06,$17,$28,$39,$4A,$5B
OBJ19 .byte $09,$FC
  .BYTE $07,$04,$04,$07,$04,$00,$07,$FC
  .BYTE $00,$09,$00,$FF,$07,$01,$01,$07
  .BYTE $01,$00,$07,$FF,$FF,$00,$01,$01
  .BYTE $00,$01,$00,$00,$FF,$0E,$01,$12
  .BYTE $20,$03,$13,$23,$45,$56,$64,$78
  .BYTE $89,$97,$47,$58,$69
OBJ29
	.byte $0F,$F9,$07
  .BYTE $FF,$F9,$09,$FF,$07,$09,$FF,$07
  .BYTE $00,$FF,$05,$00,$FF,$04,$04,$FF
  .BYTE $02,$04,$FF,$02,$07,$FF,$F9,$07
  .BYTE $01,$F9,$09,$01,$07,$09,$01,$07
  .BYTE $00,$01,$05,$00,$01,$04,$04,$01
  .BYTE $02,$04,$01,$02,$07,$01,$17,$01
  .BYTE $12,$23,$34,$45,$56,$67,$70,$89
  .BYTE $9A,$AB,$BC,$CD,$DE,$EF,$F8,$08
  .BYTE $19,$2A,$3B,$4C,$5D,$6E,$7F
OBJ48
	.byte $0B
  .BYTE $F9,$00,$F3,$07,$00,$F3,$07,$00
  .BYTE $0D,$F9,$00,$0D,$F9,$06,$F3,$07
  .BYTE $06,$F3,$07,$06,$0D,$F9,$06,$0D
  .BYTE $F6,$06,$F0,$0A,$06,$F0,$0A,$06
  .BYTE $10,$F6,$06,$10,$07,$04,$15,$26
  .BYTE $37,$89,$9A,$AB,$B8
OBJ49
	.byte $0B,$FE,$00
  .BYTE $FE,$FE,$00,$02,$02,$00,$02,$02
  .BYTE $00,$FE,$FE,$04,$FE,$FE,$04,$02
  .BYTE $02,$04,$02,$02,$04,$FE,$02,$06
  .BYTE $02,$02,$06,$FE,$02,$07,$02,$02
  .BYTE $07,$FE,$09,$04,$15,$2A,$3B,$45
  .BYTE $56,$67,$74,$89,$AB
OBJ50
	.byte $0D,$F6,$00
  .BYTE $FB,$F6,$00,$05,$0A,$00,$05,$0A
  .BYTE $00,$FB,$F6,$02,$FB,$F6,$02,$05
  .BYTE $0A,$02,$05,$0A,$02,$FB,$F6,$04
  .BYTE $FB,$F6,$04,$05,$0A,$04,$05,$0A
  .BYTE $04,$FB,$0A,$08,$05,$0A,$08,$FB
  .BYTE $0C,$08,$19,$2C,$3D,$45,$56,$67
  .BYTE $74,$89,$9A,$AB,$B8,$CD
OBJ52
	.byte $11,$00
  .BYTE $08,$FD,$00,$04,$03,$00,$04,$FD
  .BYTE $00,$08,$03,$00,$07,$FF,$00,$07
  .BYTE $01,$00,$09,$02,$00,$0A,$02,$00
  .BYTE $0B,$01,$00,$0B,$FF,$00,$0A,$FE
  .BYTE $00,$09,$FE,$00,$0A,$FF,$00,$09
  .BYTE $FF,$00,$0A,$01,$00,$09,$01,$00
  .BYTE $08,$FF,$00,$08,$01,$8C,$00,$01
  .BYTE $02,$03,$04,$05,$05,$06,$06,$07
  .BYTE $07,$08,$08,$09,$09,$0A,$0A,$0B
  .BYTE $0B,$04,$0C,$0D,$0E,$0F,$10,$11
OBJ54
  .BYTE $0F,$E0,$00,$E0,$E0,$00,$20,$20
  .BYTE $00,$20,$20,$00,$E0,$E0,$06,$E0
  .BYTE $E0,$06,$20,$20,$06,$20,$20,$06
  .BYTE $E0,$E0,$0C,$E0,$E0,$0C,$20,$20
  .BYTE $0C,$20,$20,$0C,$E0,$E0,$12,$E0
  .BYTE $E0,$12,$20,$20,$12,$20,$20,$12
  .BYTE $E0,$10,$01,$12,$23,$30,$45,$67
  .BYTE $74,$89,$AB,$B8,$CD,$EF,$FC,$0C
  .BYTE $1D,$2E,$3F
OBJ55
	.byte $15,$80,$E0,$80,$7F
  .BYTE $E0,$80,$7F,$E0,$7F,$80,$E0,$7F
  .BYTE $80,$20,$80,$7F,$20,$80,$7F,$20
  .BYTE $7F,$80,$20,$7F,$80,$E0,$FD,$80
  .BYTE $E0,$03,$80,$EC,$03,$80,$EC,$FD
  .BYTE $B0,$20,$80,$B0,$20,$70,$40,$20
  .BYTE $70,$40,$20,$00,$00,$20,$00,$00
  .BYTE $20,$50,$D0,$20,$50,$D0,$20,$80
  .BYTE $00,$20,$40,$40,$20,$40,$96,$00
  .BYTE $01,$01,$02,$02,$03,$03,$00,$00
  .BYTE $04,$01,$05,$02,$06,$03,$07,$04
  .BYTE $05,$05,$06,$06,$07,$07,$04,$09
  .BYTE $0A,$0A,$0B,$0B,$08,$0C,$0D,$0D
  .BYTE $0E,$0E,$0F,$0F,$10,$10,$11,$11
  .BYTE $12,$12,$13,$14,$15,$00

;	* = $4000
;p4000
	* = $5000
f5000
	* = $54c8
	
HORIZON_COLUMNS_LO
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA 
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA
	.BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA
VER_POS_HI
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $01
  .BYTE $01,$01,$01,$01,$01
  .BYTE $01
  .BYTE $01
  .BYTE $02,$02,$02,$02,$02,$02,$02,$02
HORIZON_COLUMNS_HI
  .BYTE $03,$03,$03,$03,$03,$03,$03,$03
  .BYTE $05,$05,$05,$05,$05,$05,$05,$05
  .BYTE $06,$06,$06,$06,$06,$06,$06,$06
  .BYTE $07,$07,$07,$07,$07,$07,$07,$07
  .BYTE $08,$08,$08,$08,$08,$08,$08,$08
  .BYTE $0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A
  .BYTE $0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B
  .BYTE $0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C
  .BYTE $0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D
  .BYTE $0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F
  .BYTE $10,$10,$10,$10,$10,$10,$10,$10
  .BYTE $11,$11,$11,$11,$11,$11,$11,$11
  .BYTE $12,$12,$12,$12,$12,$12,$12,$12
  .BYTE $14,$14
  .BYTE $14,$14,$14,$14,$14,$14,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA
VER_POS_LO
  .BYTE $00,$01,$02,$03,$04,$05,$06
   .BYTE $07,$40,$41,$42,$43,$44,$45,$46
  .BYTE $47,$80,$81,$82,$83,$84,$85,$86
  .BYTE $87,$C0,$C1,$C2,$C3,$C4,$C5,$C6
  .BYTE $C7,$00,$01,$02,$03,$04,$05,$06
  .BYTE $07,$40,$41,$42,$43,$44,$45,$46
  .BYTE $47,$80,$81,$82
  .BYTE $83,$84,$85,$86,$87,$C0,$C1,$C2
  .BYTE $C3,$C4,$C5,$C6,$C7,$00,$01,$02
  .BYTE $03,$04,$05,$06,$07,$40,$41,$42
  .BYTE $43,$44,$45,$46,$47,$80,$81,$82
  .BYTE $83,$84,$85,$86,$87,$C0,$C1,$C2
  .BYTE $C3,$C4,$C5,$C6,$C7,$00,$01,$02
  .BYTE $03,$04,$05,$06,$07,$40,$41,$42
  .BYTE $43,$44,$45,$46,$47,$80,$81,$82
  .BYTE $83,$84
   .BYTE $85,$86,$87,$C0
   .BYTE $C1,$C2,$C3,$C4,$C5,$C6,$C7,$00
  .BYTE $01,$02,$03,$04,$05,$06,$07,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA

ORA_PIXEL_POS
  .BYTE $40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01,$40
  .BYTE $10,$04,$01,$40,$10,$04,$01
HOR_SCR_POS
  .BYTE $00,$00,$00,$00,$08,$08,$08,$08
  .BYTE $10,$10,$10,$10,$18,$18,$18,$18
  .BYTE $20,$20,$20,$20,$28,$28,$28,$28
  .BYTE $30,$30,$30,$30,$38,$38,$38,$38
  .BYTE $40,$40,$40,$40,$48,$48,$48,$48
  .BYTE $50,$50,$50,$50,$58,$58,$58,$58
  .BYTE $60,$60,$60,$60,$68,$68,$68,$68
  .BYTE $70,$70,$70,$70,$78,$78,$78,$78
  .BYTE $80,$80,$80,$80,$88,$88,$88,$88
  .BYTE $90,$90,$90,$90,$98,$98,$98,$98
  .BYTE $A0,$A0,$A0,$A0,$A8,$A8,$A8,$A8
  .BYTE $B0,$B0,$B0,$B0,$B8,$B8,$B8,$B8
  .BYTE $C0,$C0,$C0,$C0,$C8,$C8,$C8,$C8
  .BYTE $D0,$D0,$D0,$D0,$D8,$D8,$D8,$D8
  .BYTE $E0,$E0,$E0,$E0,$E8,$E8,$E8,$E8
  .BYTE $F0,$F0,$F0,$F0,$F8,$F8,$F8,$F8
  .BYTE $00,$00,$00,$00,$08,$08,$08,$08
  .BYTE $10,$10,$10,$10
f578C   .BYTE $18,$18,$18,$18,$20,$20,$20,$20
  .BYTE $28,$28,$28,$28,$30,$30,$30,$30
  .BYTE $38,$38,$38,$38
f57A0   .BYTE $00,$00,$00,$00,$80,$40,$80,$00
  .BYTE $00,$80,$80,$00,$00,$80,$00,$00
f57B0   .BYTE $29,$B8,$28,$B8,$24,$28,$24,$20
  .BYTE $21,$25,$25,$21,$20,$24,$1D,$1C
f57C0   .BYTE $80,$80,$80,$00,$C0,$00,$C0,$00
  .BYTE $00,$C0,$40
j57CB   .BYTE $80,$80,$40,$00,$00
f57D0   .BYTE $25,$28,$25,$25,$20,$20,$20,$24
  .BYTE $24,$20,$24,$24,$24,$24,$18,$18
  .BYTE $09,$15,$0A,$16,$0B,$17,$18,$19
  .BYTE $19,$1A,$1B,$1C,$1C,$1D,$01,$3D
  .BYTE $1B,$3D,$1A,$3C,$1D,$3C,$22,$E2
  .BYTE $22,$60,$1F,$60,$1F,$E2,$1D,$62
		
LOG_TABLE ; f5800   
		.BYTE $00,$01,$03,$04,$06,$07,$09,$0A
  .BYTE $0B,$0D,$0E,$10,$11,$12,$14,$15
  .BYTE $16,$18,$19,$1A,$1C,$1D,$1E,$20
  .BYTE $21,$22,$24,$25,$26,$28,$29,$2A
  .BYTE $2C,$2D,$2E,$2F,$31,$32,$33,$34
  .BYTE $36,$37,$38,$39,$3B,$3C,$3D,$3E
  .BYTE $3F,$41,$42,$43,$44,$45,$47,$48
  .BYTE $49,$4A,$4B,$4D,$4E,$4F,$50,$51
  .BYTE $52,$54,$55,$56,$57,$58,$59,$5A
  .BYTE $5C,$5D,$5E,$5F,$60,$61,$62,$63
  .BYTE $64,$66,$67,$68,$69,$6A,$6B,$6C
  .BYTE $6D,$6E,$6F,$70,$71,$72,$74,$75
  .BYTE $76,$77,$78,$79,$7A,$7B,$7C,$7D
  .BYTE $7E,$7F,$80,$81,$82,$83,$84,$85
  .BYTE $86,$87,$88,$89,$8A,$8B,$8C,$8D
  .BYTE $8E,$8F,$90,$91,$92,$93,$94,$95
  .BYTE $96,$97,$98,$99,$9A,$9B,$9B,$9C
  .BYTE $9D,$9E,$9F,$A0,$A1,$A2,$A3,$A4
  .BYTE $A5,$A6,$A7,$A8,$A9,$A9,$AA,$AB
  .BYTE $AC,$AD,$AE,$AF,$B0,$B1,$B2,$B2
  .BYTE $B3,$B4,$B5,$B6,$B7,$B8,$B9,$B9
  .BYTE $BA,$BB,$BC,$BD,$BE,$BF,$C0,$C0
  .BYTE $C1,$C2,$C3,$C4,$C5,$C6,$C6,$C7
  .BYTE $C8,$C9,$CA,$CB,$CB,$CC,$CD,$CE
  .BYTE $CF,$D0,$D0,$D1,$D2,$D3,$D4,$D4
  .BYTE $D5,$D6,$D7,$D8,$D8,$D9,$DA,$DB
  .BYTE $DC,$DC,$DD,$DE,$DF,$E0,$E0,$E1
  .BYTE $E2,$E3,$E4,$E4,$E5,$E6,$E7,$E7
  .BYTE $E8,$E9,$EA,$EA,$EB,$EC,$ED,$EE
  .BYTE $EE,$EF,$F0,$F1,$F1,$F2,$F3,$F4
  .BYTE $F4,$F5,$F6,$F7,$F7,$F8,$F9,$F9
  .BYTE $FA,$FB,$FC,$FC,$FD,$FE,$FF,$FF

EXP_TABLE ; f5900
		.BYTE $00,$01,$01,$02,$03,$03,$04,$05
  .BYTE $06,$06,$07,$08,$08,$09,$0A,$0B
  .BYTE $0B,$0C,$0D,$0E,$0E
  .BYTE $0F,$10,$10,$11,$12,$13,$13,$14
  .BYTE $15,$16,$16,$17,$18,$19,$19,$1A
  .BYTE $1B,$1C,$1D,$1D,$1E,$1F,$20,$20
  .BYTE $21,$22,$23,$24,$24,$25,$26,$27
  .BYTE $28,$28,$29,$2A,$2B,$2C,$2C,$2D
  .BYTE $2E,$2F,$30,$30,$31,$32,$33,$34
  .BYTE $35,$35,$36
  .BYTE $37,$38,$39,$3A,$3A
   .BYTE $3B,$3C,$3D,$3E,$3F,$40,$41
   .BYTE $41,$42,$43,$44,$45,$46,$47,$48
  .BYTE $48,$49,$4A,$4B,$4C,$4D,$4E,$4F
  .BYTE $50,$51,$51,$52,$53,$54,$55,$56
  .BYTE $57,$58,$59,$5A,$5B,$5C,$5D,$5E
  .BYTE $5E,$5F,$60,$61,$62,$63,$64,$65
  .BYTE $66,$67,$68,$69,$6A,$6B,$6C,$6D
  .BYTE $6E,$6F,$70,$71,$72,$73,$74,$75
  .BYTE $76,$77,$78,$79,$7A,$7B,$7C,$7D
  .BYTE $7E,$7F,$80,$81,$82,$83,$84,$85
  .BYTE $87,$88,$89,$8A,$8B,$8C,$8D,$8E
  .BYTE $8F,$90,$91,$92,$93,$95,$96,$97
  .BYTE $98,$99,$9A,$9B,$9C,$9D,$9F,$A0
  .BYTE $A1,$A2,$A3,$A4,$A5,$A6,$A8,$A9
  .BYTE $AA,$AB,$AC,$AD,$AF,$B0,$B1,$B2
  .BYTE $B3,$B4,$B6,$B7,$B8,$B9,$BA,$BC
  .BYTE $BD,$BE,$BF,$C0,$C2,$C3,$C4,$C5
  .BYTE $C6,$C8,$C9,$CA,$CB,$CD,$CE,$CF
  .BYTE $D0,$D2,$D3,$D4,$D6,$D7,$D8,$D9
  .BYTE $DB,$DC,$DD,$DE,$E0,$E1,$E2,$E4
  .BYTE $E5
   .BYTE $E6,$E8,$E9,$EA,$EC,$ED,$EE,$F0
  .BYTE $F1,$F2,$F4,$F5,$F6,$F8,$F9,$FA
  .BYTE $FC,$FD,$FF
 
SIN_LSB 
  .BYTE $92,$2E,$F7,$60,$C4,$14,$47,$79
  .BYTE $AB,$DD,$08,$21,$3A,$53,$6C,$85
  .BYTE $9E,$B7,$D0,$E9,$01,$0D,$1A,$26
  .BYTE $33,$3F,$4C,$58,$64,$71,$7D,$89
  .BYTE $96,$A2
   .BYTE $AE,$BB,$C7,$D3,$DF,$EC,$F8,$02
  .BYTE $08,$0E,$14,$1A,$20,$26,$2C,$32
  .BYTE $38,$3E,$44,$4A,$50,$56,$5C,$62
  .BYTE $68,$6E,$73,$79,$7F,$85,$8B,$91
  .BYTE $96,$9C,$A2,$A8,$AD,$B3,$B9,$BE
  .BYTE $C4,$CA,$CF,$D5,$DA,$E0,$E5,$EB
  .BYTE $F1,$F6,$FB,$00,$03,$06,$09,$0B
  .BYTE $0E,$11,$13
   .BYTE $16,$19,$1B,$1E,$20,$23,$26,$28
  .BYTE $2B,$2D,$30,$32,$35,$37,$3A,$3C
  .BYTE $3F,$41,$44,$46,$48,$4B,$4D,$50
  .BYTE $52,$54,$57,$59,$5B,$5E,$60,$62
  .BYTE $64,$67,$69,$6B,$6D,$70,$72,$74
  .BYTE $76,$78,$7A,$7C,$7F,$81,$83
   .BYTE $85,$87,$89,$8B,$8D,$8F,$91,$93
  .BYTE $95,$97,$98,$9A,$9C,$9E,$A0,$A2
  .BYTE $A4,$A5,$A7,$A9,$AB,$AC,$AE,$B0
  .BYTE $B1,$B3,$B5,$B6,$B8,$BA,$BB,$BD
  .BYTE $BE,$C0,$C1,$C3,$C4,$C6,$C7,$C9
  .BYTE $CA,$CB,$CD,$CE,$D0,$D1,$D2,$D3
  .BYTE $D5,$D6,$D7,$D8,$DA,$DB,$DC,$DD
  .BYTE $DE,$DF,$E0,$E2,$E3,$E4,$E5,$E6
  .BYTE $E7,$E8,$E9,$E9,$EA,$EB,$EC,$ED
  .BYTE $EE,$EF,$EF,$F0,$F1,$F2,$F3,$F3
  .BYTE $F4,$F5,$F5,$F6,$F6,$F7,$F8,$F8
  .BYTE $F9,$F9,$FA,$FA,$FB,$FB,$FC,$FC
  .BYTE $FC,$FD,$FD,$FD,$FE,$FE,$FE,$FE
  .BYTE $FF,$FF,$FF,$FF,$FF,$00,$00,$00
  .BYTE $00,$00,$00,$00
  
SIN_MSB 
  .BYTE $DC,$E4,$E4,$E8,$E8,$EC,$EC,$EC
  .BYTE $EC,$EC,$F0,$F0,$F0,$F0,$F0,$F0
  .BYTE $F0,$F0,$F0,$F0,$F4,$F4,$F4,$F4
  .BYTE $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4
  .BYTE $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4
  .BYTE $F4,$F8,$F8,$F8,$F8,$F8,$F8,$F8
  .BYTE $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8
  .BYTE $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8
  .BYTE $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8
  .BYTE $F8,$F8
   .BYTE $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8
  .BYTE $F8,$F8,$F8,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC
   .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC
   .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$00,$00,$00,$00,$00,$00
   .BYTE $00

	* = $5C00
ab5C00 .fill $400,$65

	* = $6000
f6000
 
	* = $7400
 p7400   .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA
   .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AB,$AB,$AB,$BA,$EA
  .BYTE $EB,$EB,$EB,$AB,$AE,$AE,$E8,$EA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$A8,$08
  .BYTE $A0,$A8,$AA,$AA,$AA,$AA,$2A,$28
  .BYTE $02,$2A,$AA,$AA,$AA,$AA,$2A,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA
   .BYTE $AA,$AA,$AA,$AA
   .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA
   .BYTE $AA,$AA
   .BYTE $AA,$AA
   .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA
		
f7540   .BYTE $A9,$50,$A8,$A6,$0C,$BD,$D0,$55
  .BYTE $F0,$DC,$F0,$DC,$D0,$DC,$D0,$99
  .BYTE $96,$DC,$D0,$99,$96,$8F,$B9,$99
  .BYTE $96,$8F,$B9,$79,$BD,$99,$96,$8F
  .BYTE $B9,$79,$D6,$99,$96,$8F,$B9,$79
  .BYTE $D6,$76,$99,$96,$B9,$79,$D6,$76
  .BYTE $6D,$68,$67,$63,$FA,$0A,$77,$37
  .BYTE $66,$46,$5F,$50
ab757C  .BYTE $7C
ab757D  .BYTE $73
ab757E  .BYTE $78
ab757F  .BYTE $38
f7580   .BYTE $B9,$3C
f7582   .BYTE $3E,$3A,$38,$36,$34,$32,$30,$2E
  .BYTE $2C,$2A,$28,$26,$25,$23,$22,$20
  .BYTE $1F,$1D,$1C,$1C,$1A,$19,$17,$20
  .BYTE $13,$1C,$11,$0F,$18,$0D,$0B,$3E
  .BYTE $2E,$A9,$AA,$CA,$30,$15,$BC,$DE
  .BYTE $75,$D1,$02,$F0,$0E,$91,$02,$91
  .BYTE $04,$BC,$F2,$75,$91,$0E,$91,$10
  .BYTE $4C,$A5,$75,$C6,$0C,$30
f75C0   .BYTE $14,$3D
f75C2   .BYTE $3F,$3B,$39,$37,$35,$33,$31,$2F
  .BYTE $2D,$2B,$29,$27,$32,$24,$23,$21
  .BYTE $30,$1E,$20,$1D,$1B,$2F,$18,$1A
  .BYTE $14,$16,$12,$10,$12,$0E,$0C,$0A
  .BYTE $08,$70,$68,$60,$58,$50,$48
        RTI 

  .BYTE $38,$30,$28,$20,$18,$10,$08,$00
  .BYTE $00,$08,$10,$18,$20,$28,$30,$38
  .BYTE $40,$48,$50,$58,$60,$68
f7600   .BYTE $2B,$35,$4D,$6D,$8E,$AB,$AF,$A3
  .BYTE $D4,$EE,$20,$51,$73,$9F,$B1,$9F
  .BYTE $EE,$08,$41,$80,$A2,$E2,$03,$EC
  .BYTE $96,$5B,$3C,$DC,$61,$0A,$67,$42
  .BYTE $3D,$85,$EC,$C3,$47,$0F,$DB,$64
  .BYTE $A5,$A1,$DC,$3F,$1E,$CD,$F2,$3B
  .BYTE $37,$B9,$F1,$FD,$30,$34,$F2,$92
  .BYTE $28,$B8,$3F,$34,$30,$B4,$41,$F8
  .BYTE $FF,$00,$FF,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $FC,$FC
f7682   .BYTE $3C,$FC,$FC,$E0,$E4,$24,$E4,$E0
  .BYTE $FC,$FC,$3C,$FC,$FC,$E0,$FC,$20
  .BYTE $E7,$E0,$E0,$FC,$20,$FC,$E0,$E4
  .BYTE $E4,$20,$FC,$FC,$E0,$E7,$20,$FC
  .BYTE $E0,$E0,$E7,$20,$E4,$E0,$E0,$FC
  .BYTE $3C,$FC,$FC,$E0,$E4,$20,$E4,$E0
  .BYTE $E0,$E4,$20,$FC,$FC,$E0,$E4,$20
  .BYTE $E4,$E0,$E0,$FC,$3C,$FC,$FC,$E0
  .BYTE $E7,$20,$E4,$E0,$E0,$E7,$20,$FC
  .BYTE $E0,$E4,$E4,$20,$FC,$FC,$E0,$FC
  .BYTE $20,$FC,$E0,$E0,$FC,$20,$E7,$E0
  .BYTE $FC,$FC,$3C,$FC,$FC,$E0,$E4,$24
  .BYTE $E4,$E0,$FC,$FC,$3C,$FC
f76E8   .BYTE $FC,$C1,$C9,$C9,$C9,$C1,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$40,$00,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $04,$00,$00,$80,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA

AND_PIXEL_POS
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $3F,$CF,$F3,$FC,$3F,$CF,$F3,$FC
  .BYTE $FF,$81,$99,$99,$99,$99,$81,$FF
  .BYTE $FF,$E7,$E7,$E7,$E7,$E7,$E7,$FF
  .BYTE $FF,$81,$F9,$81,$9F,$99,$81,$FF
  .BYTE $FF,$C1,$F9,$C1,$F9,$F9,$C1,$FF
  .BYTE $FF,$99,$99,$81,$81,$F9,$F9,$FF
  .BYTE $FF,$81,$9F,$81,$F9,$99,$81,$FF
  .BYTE $FF,$81,$9F,$81,$99,$99,$81,$FF
  .BYTE $FF,$81,$F9,$F9,$F9,$F9,$F9,$FF
  .BYTE $FF,$81,$99,$81,$99,$99,$81,$FF
  .BYTE $FF,$81,$99,$81,$F9,$F9,$F9,$FF
  .BYTE $00,$66,$3C,$FF,$3C,$66,$00,$00
  .BYTE $00,$18,$18,$7E,$18,$18,$00,$00
  .BYTE $00,$00,$00,$00,$00,$18,$18,$30
  .BYTE $00,$00,$00,$7E,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$18,$18,$00
  .BYTE $00,$06,$0C,$18,$30,$60,$40,$00
  .BYTE $00,$3C,$66,$6E,$76,$66,$3C,$00
  .BYTE $00,$18,$38,$18,$18,$18,$7E,$00
  .BYTE $00,$3C,$66,$0C,$18,$30,$7E,$00
  .BYTE $00,$7E,$0C,$18,$0C,$66,$3C,$00
  .BYTE $00,$0C,$1C,$3C,$6C,$7E,$0C,$00
  .BYTE $00,$7E,$60,$7C,$06,$66,$3C,$00
  .BYTE $00,$3C,$60,$7C,$66,$66,$3C,$00
  .BYTE $00,$7E,$06,$0C,$18,$30,$30,$00
  .BYTE $00,$3C,$66,$3C,$66,$66,$3C,$00
  .BYTE $00,$3C,$66,$3E,$06,$0C,$38,$00
  .BYTE $00,$00,$18,$18,$00,$18,$18,$00
  .BYTE $00,$00,$18,$18,$00,$18,$18,$30
  .BYTE $06,$0C,$18,$30,$18,$0C,$06,$00
  .BYTE $00,$00,$7E,$00,$00,$7E,$00,$00
  .BYTE $60,$30,$18,$0C,$18,$30,$60,$00
  .BYTE $00,$3C,$66,$0C,$18,$00,$18,$55
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $33,$FF,$00,$18,$3C,$66,$7E,$66
  .BYTE $33,$FF,$00,$7C,$66,$7C,$66,$7C
  .BYTE $33,$FF,$00,$3C,$66,$60,$66,$3C
  .BYTE $33,$FF,$00,$78,$6C,$6C,$6C,$78
  .BYTE $33,$FF,$00,$7E,$60,$7C,$60,$7E
  .BYTE $33,$FF,$00,$7E,$60,$7C,$60,$60
  .BYTE $33,$FF,$00,$3E,$60,$6E,$66,$3E
  .BYTE $33,$FF,$00,$66,$66,$7E,$66,$66
  .BYTE $33,$FF,$00,$7E,$18,$18,$18,$7E
  .BYTE $33,$FF,$00,$06,$06,$06,$66,$3C
  .BYTE $33,$FF,$00,$66,$6C,$78,$6C,$66
  .BYTE $33,$FF,$00,$60,$60,$60,$60,$7E
  .BYTE $33,$FF,$00,$63,$77,$7F,$6B,$63
  .BYTE $33,$FF,$00,$66,$76,$7E,$6E,$66
  .BYTE $33,$FF,$00,$3C,$66,$66,$66,$3C
  .BYTE $33,$FF,$00,$7C,$66,$7C,$60,$60
  .BYTE $33,$FF,$00,$3C,$66,$66,$6C,$36
  .BYTE $33,$FF,$00,$7C,$66,$7C,$6C,$66
  .BYTE $33,$FF,$00,$3C,$60,$3C,$06,$3C
  .BYTE $33,$FF,$00,$7E,$18,$18,$18,$18
  .BYTE $33,$FF,$00,$66,$66,$66,$66,$7E
  .BYTE $33,$FF,$00,$66,$66,$66,$3C,$18
  .BYTE $33,$FF,$00,$63,$6B,$7F,$77,$63
  .BYTE $33,$FF,$00,$66,$3C,$18,$3C,$66
  .BYTE $33,$FF,$00,$66,$66,$3C,$18,$18
  .BYTE $33,$FF,$00,$7E,$0C,$18,$30,$7E
  .BYTE $FF,$E1,$B1,$99,$8D,$87,$83,$FF
  .BYTE $FF,$E1,$B1,$99,$8D,$87,$83,$FF
  .BYTE $FF,$E1,$B1,$99,$8D,$87,$83,$FF
  .BYTE $FF,$E1,$B1,$99,$8D,$87,$83,$FF
  .BYTE $FF,$E1,$B1,$99,$8D,$87,$83,$FF
  .BYTE $33,$CC,$33,$CC,$33,$CC,$33,$CC
  .BYTE $00,$7E,$66,$66,$7E,$66,$66,$00
  .BYTE $00,$7C,$66,$7C,$66,$66,$7C,$00
  .BYTE $00,$7E,$66,$60,$60,$66,$7E,$00
  .BYTE $00,$7C,$66,$66,$66,$66,$7C,$00
  .BYTE $00,$7E,$60,$7C,$60,$60,$7E,$00
  .BYTE $00,$7E,$60,$7C,$60,$60,$60,$00
  .BYTE $00,$7E,$60,$60,$6E,$66,$7E,$00
  .BYTE $00,$66,$66,$7E,$66,$66,$66,$00
  .BYTE $00,$7E,$18,$18,$18,$18,$7E,$00
  .BYTE $00,$06,$06,$06,$06,$66,$7E,$00
  .BYTE $00,$66,$6C,$78,$78,$6C,$66,$00
  .BYTE $00,$60,$60,$60,$60,$60,$7E,$00
  .BYTE $00,$63,$77,$7F,$6B,$63,$63,$00
  .BYTE $00,$66,$76,$7E,$7E,$6E,$66,$00
  .BYTE $00,$7E,$66,$66,$66
   .BYTE $66,$7E,$00,$00,$7E,$66,$66,$7E
  .BYTE $60,$60,$00,$00,$7E,$66,$66,$66
  .BYTE $6E,$7E,$03,$00,$7E,$66,$66,$7C
  .BYTE $6C,$66,$00,$00,$7E,$60,$7E,$06
  .BYTE $06,$7E,$00,$00,$7E,$18,$18,$18
  .BYTE $18,$18,$00,$00,$66,$66,$66,$66
  .BYTE $66,$7E,$00,$00,$66,$66,$66,$66
  .BYTE $3C,$18,$00,$00,$63,$63,$6B,$7F
  .BYTE $77,$63,$00,$00,$66,$66,$3C,$3C
  .BYTE $66,$66,$00,$00,$66,$66,$7E,$18
  .BYTE $18,$18,$00,$00,$7E,$0C,$18,$30
  .BYTE $60,$7E,$00,$00,$0C,$4C,$0C,$CC
  .BYTE $CC,$00,$00,$FF,$1E,$9E,$9E,$9E
  .BYTE $1E,$FF,$FF,$FF,$0C,$4C,$0C,$4C
  .BYTE $0C,$FF,$FF,$FF,$1E,$9F,$9F,$9F
  .BYTE $1F,$FF,$FF,$FF,$0C,$CC,$CC,$CC
  .BYTE $CC,$FF,$FF,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$18,$18,$18,$18,$18
  .BYTE $18,$18,$18,$30,$30,$30,$30,$30
  .BYTE $30,$30,$30,$60,$60,$60,$60,$60
  .BYTE $60,$60,$60,$C0,$C0,$C0,$C0,$C0
  .BYTE $C0,$C0,$C0,$81,$81,$81,$81,$81
  .BYTE $81,$81,$81,$03,$03,$03,$03,$03
  .BYTE $03,$03,$03,$06,$06,$06,$06,$06
  .BYTE $06,$06,$06,$0C,$0C,$0C,$0C,$0C
  .BYTE $0C,$0C,$0C,$FF,$E1,$B1,$99,$8D
  .BYTE $87,$83,$FF,$FF,$81,$81,$81,$81
  .BYTE $81,$81,$FF,$C9,$C1,$FF,$FF,$FF
  .BYTE $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
  .BYTE $C1,$C9,$C9,$FC,$FC,$FF,$FF,$FF
  .BYTE $FF,$FF,$00,$FF,$FF,$FF,$FF,$FF
  .BYTE $E0,$E4,$24,$E4,$E0,$FF,$FF,$FF
  .BYTE $FF,$FF,$00,$FF,$FF,$FF,$FF,$FF
  .BYTE $FC,$FC,$3C,$00,$7E,$66,$66,$66
  .BYTE $66,$7E,$00,$00,$18,$18,$18,$18
  .BYTE $18,$18,$00,$00,$7E,$06,$7E,$60
  .BYTE $66,$7E,$00,$00,$3E,$06,$3E,$06
  .BYTE $06,$3E,$00,$00,$66,$66,$7E,$7E
  .BYTE $06,$06,$00,$00,$7E,$60,$7E,$06
  .BYTE $66,$7E,$00,$00,$7E,$60,$7E,$66
  .BYTE $66,$7E,$00,$00,$7E,$06,$06,$06
  .BYTE $06,$06,$00,$00,$7E,$66,$7E,$66
  .BYTE $66,$7E,$00,$00,$7E,$66,$7E,$06
  .BYTE $06,$06,$00,$FF,$99,$C3,$00,$C3
  .BYTE $99,$FF,$FF,$FF,$E7,$E7,$81,$E7
  .BYTE $E7,$FF,$FF,$FF,$FF,$FF,$FF,$FF
  .BYTE $E7,$E7,$CF,$FF,$FF,$FF,$81,$FF
  .BYTE $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
  .BYTE $E7,$E7,$FF,$FF,$F9,$F3,$E7,$CF
  .BYTE $9F,$BF,$FF,$FF,$C3,$99,$91,$89
  .BYTE $99,$C3,$FF,$FF,$E7,$C7,$E7,$E7
  .BYTE $E7,$81,$FF,$FF,$C3,$99,$F3,$E7
  .BYTE $CF,$81,$FF,$FF,$81,$F3,$E7,$F3
  .BYTE $99,$C3,$FF,$FF,$F3,$E3,$C3,$93
  .BYTE $81,$F3,$FF,$FF,$81,$9F,$83,$F9
  .BYTE $99,$C3,$FF,$FF,$C3,$9F,$83,$99
  .BYTE $99,$C3,$FF,$FF,$81,$F9,$F3,$E7
  .BYTE $CF,$CF,$FF,$FF,$C3,$99,$C3,$99
  .BYTE $99,$C3,$FF,$FF,$C3,$99,$C1,$F9
  .BYTE $F3,$C7,$FF,$FF,$FF,$E7,$E7,$FF
  .BYTE $E7,$E7,$FF,$FF,$FF,$E7,$E7,$FF
  .BYTE $E7,$E7,$CF,$F9,$F3,$E7,$CF,$E7
  .BYTE $F3,$F9,$FF,$FF,$FF,$81,$FF,$FF
  .BYTE $81,$FF,$FF,$9F,$CF,$E7,$F3,$E7
  .BYTE $CF,$9F,$FF,$FF,$C3,$99,$F3,$E7
  .BYTE $FF,$E7,$AA,$FF,$FF,$FF,$FF,$FF
  .BYTE $FF,$FF,$FF,$CC,$00,$FF,$E7,$C3
  .BYTE $99,$81,$99,$CC,$00,$FF,$83,$99
  .BYTE $83,$99,$83,$CC,$00,$FF,$C3,$99
  .BYTE $9F,$99,$C3,$CC,$00,$FF,$87,$93
  .BYTE $93,$93,$87,$CC,$00,$FF,$81,$9F
  .BYTE $83,$9F,$81,$CC,$00,$FF,$81,$9F
  .BYTE $83,$9F,$9F,$CC,$00,$FF,$C1,$9F
  .BYTE $91,$99,$C1,$CC,$00,$FF,$99,$99
  .BYTE $81,$99,$99,$CC,$00,$FF,$81,$E7
  .BYTE $E7,$E7,$81,$CC,$00,$FF,$F9,$F9
  .BYTE $F9,$99,$C3,$CC,$00,$FF,$99,$93
  .BYTE $87,$93,$99,$CC,$00,$FF,$9F,$9F
  .BYTE $9F,$9F,$81,$CC,$00,$FF,$9C,$88
  .BYTE $80,$94,$9C,$CC,$00,$FF,$99,$89
  .BYTE $81,$91,$99,$CC,$00,$FF,$C3,$99
  .BYTE $99,$99,$C3,$CC,$00,$FF,$83,$99
  .BYTE $83,$9F,$9F,$CC,$00,$FF,$C3,$99
  .BYTE $99,$93,$C9,$CC,$00,$FF,$83,$99
  .BYTE $83,$93,$99,$CC,$00,$FF,$C3,$9F
  .BYTE $C3,$F9,$C3,$CC,$00,$FF,$81,$E7
  .BYTE $E7,$E7,$E7,$CC,$00,$FF,$99,$99
  .BYTE $99,$99,$81,$CC,$00,$FF,$99,$99
  .BYTE $99,$C3,$E7,$CC,$00,$FF,$9C,$94
  .BYTE $80,$88,$9C,$CC,$00,$FF,$99,$C3
  .BYTE $E7,$C3,$99,$CC,$00,$FF,$99,$99
  .BYTE $C3,$E7,$E7,$CC,$00,$FF,$81,$F3
  .BYTE $E7,$CF,$81,$00,$1E,$4E,$66,$72
  .BYTE $78,$7C,$00,$00,$1E,$4E,$66,$72
  .BYTE $78,$7C,$00,$00,$1E,$4E,$66,$72
  .BYTE $78,$7C,$00,$00,$1E,$4E,$66,$72
  .BYTE $78,$7C,$00,$00,$1E,$4E,$66,$72
  .BYTE $78,$7C,$00,$CC,$33,$CC,$33,$CC
  .BYTE $33,$CC,$33,$FF,$81,$99,$99,$81
  .BYTE $99,$99,$FF,$FF,$83,$99,$83,$99
  .BYTE $99,$83,$FF,$FF,$81,$99,$9F,$9F
  .BYTE $99,$81,$FF,$FF,$83,$99,$99,$99
  .BYTE $99,$83,$FF,$FF,$81,$9F,$83,$9F
  .BYTE $9F,$81,$FF,$FF,$81,$9F,$83,$9F
  .BYTE $9F,$9F,$FF,$FF,$81,$9F,$9F,$91
  .BYTE $99,$81,$FF,$FF,$99,$99,$81,$99
  .BYTE $99,$99,$FF,$FF,$81,$E7,$E7,$E7
  .BYTE $E7,$81,$FF,$FF,$F9,$F9,$F9,$F9
  .BYTE $99,$81,$FF,$FF,$99,$93,$87,$87
  .BYTE $93,$99,$FF,$FF,$9F,$9F,$9F,$9F
  .BYTE $9F,$81,$FF,$FF,$9C,$88,$80,$94
  .BYTE $9C,$9C,$FF,$FF,$99,$89,$81,$81
  .BYTE $91,$99,$FF,$FF,$81,$99,$99,$99
  .BYTE $99,$81,$FF,$FF,$81,$99,$99,$81
  .BYTE $9F,$9F,$FF,$FF,$81,$99,$99,$99
  .BYTE $91,$81,$FC,$FF,$81,$99,$99,$83
  .BYTE $93,$99,$FF,$FF,$81,$9F,$81,$F9
  .BYTE $F9,$81,$FF,$FF,$81,$E7,$E7,$E7
  .BYTE $E7,$E7,$FF,$FF,$99,$99,$99,$99
  .BYTE $99,$81,$FF,$FF,$99,$99,$99,$99
  .BYTE $C3,$E7,$FF,$FF,$9C,$9C,$94,$80
  .BYTE $88,$9C,$FF,$FF,$99,$99,$C3,$C3
  .BYTE $99,$99,$FF,$FF,$99,$99,$81,$E7
  .BYTE $E7,$E7,$FF,$FF,$81,$F3,$E7,$CF
  .BYTE $9F,$81,$FF,$FF,$07,$07,$07,$07
  .BYTE $07,$FF,$FF,$FF,$E6,$E6,$E6,$E6
  .BYTE $E6,$FF,$FF,$FF,$0F,$4F,$4F,$4F
  .BYTE $0F,$FF,$FF,$FF,$06,$26,$26,$26
  .BYTE $06,$FF,$FF,$FF,$0F,$4F,$4F,$4F
  .BYTE $0F,$FF,$FF,$FF,$E6,$E6,$E6,$E6
  .BYTE $E6,$FF,$FF,$FF,$E1,$B1,$99,$8D
  .BYTE $87,$83,$FF,$FF,$E1,$B1,$99,$8D
  .BYTE $87,$83,$FF,$FF,$E1,$B1,$99,$8D
  .BYTE $87,$83,$FF,$FF,$E1,$B1,$99,$8D
  .BYTE $87,$83,$FF,$33,$FF,$60,$D0,$48
  .BYTE $C4,$42,$C1,$33,$FE,$07,$0A,$13
  .BYTE $22,$43,$82,$83,$42,$23,$12,$0B
  .BYTE $06,$FF,$CC,$41,$C2,$44,$C8,$50
  .BYTE $E0,$7F,$CC,$33,$FF,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$FF,$CC,$03,$02,$03,$02,$03
  .BYTE $02,$03,$02,$40,$C0,$40,$C0,$40
  .BYTE $C0,$40,$C0,$FF,$81,$99,$E1,$E7
  .BYTE $FF,$E7,$FF,$FF,$E7,$E7,$E7,$E7
  .BYTE $FF,$E7,$FF,$FF,$E7,$E7,$E7,$FF
  .BYTE $FF
   .BYTE $FF,$FF,$E7,$E7,$E7,$E7,$E7,$E7
  .BYTE $E7,$E7,$CF,$CF,$CF,$CF,$CF,$CF
  .BYTE $CF,$CF,$9F,$9F,$9F,$9F,$9F,$9F
  .BYTE $9F,$9F,$3F,$3F,$3F,$3F,$3F,$3F
  .BYTE $3F,$3F,$7E,$7E,$7E,$7E,$7E,$7E
  .BYTE $7E,$7E,$FC,$FC,$FC,$FC,$FC,$FC
  .BYTE $FC,$FC,$F9,$F9,$F9,$F9,$F9,$F9
  .BYTE $F9,$F9,$F3,$F3,$F3,$F3,$F3,$F3
  .BYTE $F3,$F3,$00,$1E,$4E,$66,$72,$78
  .BYTE $7C,$00,$00,$7E,$7E,$7E,$7E,$7E
  .BYTE $7E
f7FCF   .BYTE $00
f7FD0   .BYTE $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
  .BYTE $FF,$FF,$C1,$C9,$C9,$C9,$C1
f7FDF   .BYTE $FF
  .BYTE $FF
f7FE1   .BYTE $FF,$FF,$FF,$00,$FF,$FF,$FF,$FF
  .BYTE $FF,$E0
f7FEB   .BYTE $E4
f7FEC   .BYTE $24
f7FED   .BYTE $E4
f7FEE   .BYTE $E0
ab7FEF  .BYTE $FF
ab7FF0  .BYTE $FF
f7FF1   .BYTE $FF,$FF,$FF,$00,$FF,$FF,$FF,$FF
  .BYTE $FF,$FC,$FC,$3C,$FC,$FC
ab7FFF  .BYTE $FF,$70,$21,$C1,$80,$00,$00,$00
  .BYTE $00,$00
p8009   .BYTE $40
f800A   .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
f801A   .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
f802A   .BYTE $20,$38,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$01,$02,$03,$04,$05,$06,$07
  .BYTE $08,$09,$10,$11,$12,$13,$14,$15
  .BYTE $16,$17,$18,$19,$20,$21,$22,$23
  .BYTE $24,$25,$26,$27,$28,$29,$30,$31
  .BYTE $32,$33,$34,$35,$36,$37,$38,$39
  .BYTE $40,$41,$42,$43,$44,$45,$46,$47
  .BYTE $48,$49,$50,$51,$52,$53,$54,$55
  .BYTE $56,$57,$58,$59,$60,$61,$62,$63
  .BYTE $64,$65,$66,$67,$68,$69,$70,$71
  .BYTE $72,$73,$74,$75,$76,$77,$78,$79
  .BYTE $80,$81,$82,$83,$84,$85,$86,$87
  .BYTE $88,$89,$90,$91,$92,$93,$94,$95
  .BYTE $96,$97,$98,$99,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
  .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA

     .BYTE $A9,$36,$85,$01,$20,$F6,$B8,$A9
        .BYTE $36,$85,$01,$A2,$FF,$9A,$20,$3D
        .BYTE $81,$A6,$A6,$E8,$8E,$00,$D8,$A2
        .BYTE $FF,$86,$EE,$A5,$CD,$F0,$06,$20
        .BYTE $62,$91,$4C,$A1,$85,$20
   .BYTE $0D,$95,$4C,$A1,$85,$20,$35,$81
j80E8   .BYTE $EA,$EA,$EA,$A9,$80,$85,$85,$A9
        .BYTE $80,$85,$75,$A9,$00,$85,$76,$A9
        .BYTE $00,$85,$77,$A9,$00,$85,$A8,$85
        .BYTE $CD,$A9,$01,$85,$A9,$20,$99,$9D
        .BYTE $A9
   .BYTE $10,$85,$AC,$A5,$74,$29,$0F,$85
        .BYTE $74,$A5,$7A,$29,$0F,$85,$7A,$A9
        .BYTE $00,$85,$2C,$85,$2A,$A9,$02,$85
        .BYTE $2D,$85,$2B,$20,$50,$99,$20,$70
        .BYTE $B2,$A9,$FF,$8D,$41,$29,$EA,$EA
        .BYTE $EA,$4C,$A1,$85

zp
 .byte $2f, $35, $81, $51, $7b, $ad, $01, $00
 .byte $00, $81, $37, $40, $ea, $55, $a0, $40
 .byte $a7, $54, $00, $00, $00, $00, $5d, $10
 .byte $00, $00, $00, $34, $30, $88, $28, $81
 .byte $0a, $18, $4d, $f9, $7e, $40, $76, $84
 .byte $fe, $ff, $35, $02, $3c, $df, $2e, $e5
 .byte $00, $00, $2e, $e5, $b2, $19, $4a, $f9
 .byte $e5, $fd, $5d, $f8, $dd, $fd, $73, $f8
 .byte $71, $f8, $1e, $e5, $dd, $fc, $37, $f9
 .byte $e5, $fd, $bb, $f0, $c4, $fc, $4a, $f9
 .byte $5f, $f9, $00, $49, $03, $58, $47, $49
 .byte $b0, $49, $e5, $59, $6a, $51, $5f, $49
 .byte $84, $fc, $51, $f9, $76, $fc, $80, $06
 .byte $00, $05, $3a, $73, $3b, $71, $80, $00
 .byte $1b, $20, $7d, $71, $0c, $2c, $0e, $00
 .byte $49, $8c, $0d, $40, $36, $00, $00, $00
 .byte $0f, $01, $55, $aa, $00, $0c, $00, $0d
 .byte $1b, $1b, $20, $20, $38, $04, $50, $42
 .byte $40, $19, $3c, $18, $07, $19, $16, $18
 .byte $0b, $a8, $de, $8d, $fd, $44, $fd, $00
 .byte $74, $8f, $18, $01, $06, $05, $0b, $a9
 .byte $00, $01, $40, $18, $10, $49, $00, $3f
 .byte $0f, $00, $08, $00, $3f, $35, $06, $dc
 .byte $04, $02, $03, $f6, $03, $00, $87, $df
 .byte $af, $80, $01, $06, $05, $0b, $00, $78
 .byte $00, $00, $00, $00, $0e, $00, $06, $70
 .byte $08, $00, $08, $40, $07, $83, $fe, $fb
 .byte $93, $ee, $40, $b6, $e3, $fa, $02, $00
 .byte $00, $7d, $14, $59, $2a, $02, $00, $03
 .byte $70, $04, $ff, $00, $00, $84, $ff, $00
 .byte $00, $00, $0c, $f9, $00, $00, $7e, $09
 .byte $00, $00, $00, $00, $a0, $60, $21, $7d

UMUL8 ; MATH_uMul ; Input:  A = unsigned 8 bit multiplier ;         Y = unsigned 8 bit multiplicand ; Output: AY = unsigned 16 bit product   
	STA ab08
        STY ab09
        LDY #$08
        LDA #$00
b82C3  
	ROR ab09
        BCC b82CA
        CLC 
        ADC ab08
b82CA   
	ROR 
        ROR ab06
        DEY 
        BNE b82C3
        LDY ab06
        RTS 

FPMUL        ; fpMul - ; Input:  [08] = fp multiplier ;         XY   = fp multiplicand ; Output: [08] and XY = result   
	LDA LOG_TABLE,X
        LDX ab08
        CLC 
ab8300  
	ADC LOG_TABLE,X
        TAX 
        TYA 
        BCC b830A
        ADC #$03
        CLC 
b830A ; done   
	ADC ab09
        BVS MATH_LIMIT
        AND #$FD
        STA ab09
        TAY 
        LDA EXP_TABLE,X
        TAX 
        STA ab08
        RTS 

MATH_LIMIT ; done
	BPL b8328
        AND #$01
        ORA #$78
        TAY 
        LDX #$00
        STX ab08
        STY ab09
        RTS 

b8328  ; done 
	AND #$01
        ORA #$84
b832C   
	TAY 
        LDX #$00
        STX ab08
        STY ab09
        RTS 

FPDIV ; fpDiv - Input:  [08] = fp divisor - XY   = fp dividend - Output: [08] and XY = result
	STY	ab06
	LDY 	ab08
	LDA 	LOG_TABLE,Y
	SEC 
	SBC 	LOG_TABLE,X
	TAX 
	LDA 	ab09
	ORA	#$02
	BCS 	b8349
		SBC 	#$03
		SEC 
b8349  
	SBC 	ab06
	BVS 	MATH_LIMIT
	AND 	#$FD
	STA 	ab09
	TAY
	LDA 	EXP_TABLE,X
	TAX
	STA 	ab08
	RTS 

FPADD_CONT ; ($838B entry point)   
	LDA ab18
        LSR 
        BCS b8373
        TXA 
        ADC ab08
        ROR 
        INY 
        INY 
        INY 
        INY 
        TAX 
        STA ab08
        STY ab09
        RTS 

b836C   
	TYA 
        ASL 
        BCC b83CC
        JMP j8419

b8373   
	TXA 
        SBC ab08
        BEQ b8383
        BCS b83D5
        LDY ab09
        EOR #$FF
        ADC #$01
        JMP b83D5

b8383   
	TYA 
        SEC 
        SBC #$24
        BVS b8328
        BVC b832C

FP_ADD   
	TYA 
        SEC 
        SBC ab09
        BVS b836C
        STA ab18
        ADC #$01
        BVS b836C
        BMI b83F5
        LSR 
        LSR 
        BEQ FPADD_CONT
        CMP #$09
        BCS b83CC
        EOR #$0F
        STA ab83AB
        LDA ab08
        SEC 
        ROR 
ab83AB   =*+$01
        BNE b83B3
        NOP 
        NOP 
        NOP 
        NOP 
        NOP 
        NOP 
        NOP 
b83B3   
	LSR 
        LSR 
        LSR 
        LSR 
        LSR 
        LSR 
        LSR 
        STA ab06
        LDA ab18
        LSR 
        TXA 
        BCS b83D1
b83C2   
	ADC ab06
        BCC b83CB
        LSR 
        INY 
        INY 
        INY 
        INY 
b83CB   
	TAX 
b83CC   
	STX ab08
        STY ab09
        RTS 

b83D1   
	SBC ab06
        BCS b83CB
b83D5   
	STY ab06
        LDY #$00
b83D9   
	ASL 
        DEY 
        BCC b83D9
        TAX 
        TYA 
        ASL 
        ASL 
        CLC 
        ADC ab06
        BVS b83EC
        TAY 
        STX ab08
        STY ab09
        RTS 

b83EC   
	LDX #<p8400
        LDY #>p8400
        STX ab08
f83F2   
	STY ab09
        RTS 

b83F5   
	CMP #$E0
        BCC j8419
        LSR 
        LSR 
        AND #$07
        STA ab8404
p8400   
	TXA 
        SEC 
        ROR 
ab8404   =*+$01
        BNE b8405
b8405  
	LSR 
        LSR 
        LSR 
        LSR 
        LSR 
        LSR 
        LSR 
        STA ab06
        LDY ab09
        LDA ab18
        LSR 
        LDA ab08
        BCC b83C2
        BCS b83D1
j8419  
	LDX ab08
        LDY ab09
        RTS 

COS_FP	INY 
SIN_FP	TYA 
        LSR 
        BCC 	SIN_CNT
			TXA 
			EOR 	#$FF
			TAX 
			TYA 
			LSR 
SIN_CNT AND 	#$01
        ORA 	SIN_MSB,X
        TAY 
        LDA 	SIN_LSB,X
        TAX 
        RTS 

FPTO8BIT  
	TYA 
	BMI	b849F
	LSR 
ab847B  
	LSR 
	CMP 	#$07
	BCS 	b84A6
	STA 	ab8487
ab8483  
	TXA 
	SEC 
	ROR 
ab8487   =*+$01
	BNE	b848E
	LSR 
	LSR 
	LSR 
	LSR 
	LSR 
	LSR 
b848E  
	LSR 
b848F   
	ADC	#$00
	BMI	b84A5
	TAX 
	TYA 
	LSR 
	TXA 
	BCC	b849E
	EOR	#$FF
	ADC	#$00
	CLC 
b849E   
	RTS 

b849F   
	CMP	#$FC
	LDA	#$00
	BEQ	b848F
b84A5  
	SEC 
b84A6  
	RTS 

s84A7
FPTO16BIT  
	TYA 
	BMI	b8501
	LSR 
	LSR 
	CMP	#$0F
	BCS	b84A6
	STA	ab06
	ASL 
	ADC	ab06
	STA	ab84C2
	LDA	#$00
	STA	ab06
	TXA 
	SEC 
	ROR 
	ROR	ab06
ab84C2   =*+$01
	BCC	b84ED
	LSR 
j84C4   
	ROR	ab06
	LSR 
	ROR	ab06
	LSR 
	ROR	ab06
	LSR 
	ROR	ab06
	LSR 
	ROR	ab06
	LSR 
	ROR	ab06
	LSR 
	ROR	ab06
	LSR 
b84D9   
	ROR	ab06
	LSR 
	ROR	ab06
	LSR 
	ROR	ab06
	LSR 
	ROR	ab06
	LSR 
	ROR	ab06
	LSR 
	ROR	ab06
	LSR 
	ROR	ab06
b84ED  
	LSR 
	ROR	ab06
	TAX 
	TYA 
	LDY	ab06
	LSR 
	BCC	b8500
	TXA 
	EOR	#$FF
	TAX 
	TYA 
	EOR	#$FF
	TAY 
	CLC 
b8500  
	RTS 

b8501   
	TYA 
	LSR 
	BCC	b850B
	LDX	#$FF
	LDY	#$FF
	CLC 
	RTS 

b850B   
	LDX	#$00
        LDY	#$00
        RTS 

BIT24TOFP ; MATH_24BitToFP (FP.SetToObjectSpaceCoordinate24) ; Enter: A =    Coordinate.MSB ;        X =    Coordinate.PSB ;        [07] = Coordinate.LSB ; Usese: [06].b  Temporary store for coordinate MSB ; Exit:  [08].fp Result, also stored in X:A (exp:man)  
	STA ab06
        ORA #$00
        BPL b8527
        LDA #$00
        SEC 
        SBC ab07
        STA ab07
        TXA 
        EOR #$FF
        ADC #$00
        TAX 
        LDA #$00
        SBC ab06
b8527   
	BNE b8538
        TXA 
        BNE b854F
        LDA ab07
        BEQ b8553
        LDX #$00
        STX ab07
        LDX #$08
        BNE b853C
b8538   
	STX ab07
        LDX #$18
b853C   
	DEX 
        ASL ab07
        ROL 
        BCC b853C
        STA ab08
        TXA 
        ASL 
        ASL ab06
        ROL 
        TAX 
        STX ab09
        LDA ab08
        RTS 

b854F   
	LDX #$10
        BNE b853C
b8553   
	LDA #<pE000
        LDX #>pE000
        STA ab08
        STX ab09
        RTS 

STARTUP	; CALL STARTUP BEFORE CALLING MAIN - needs to setup vic pointers?
	SEI

 LDA #$00
 STA $D020
 LDA #$01 ; $00
 STA $D021
 LDA #$0B ; $00
 STA $D022
 LDA #$0C ; $00
 STA $D023
 
	LDA #$35
	STA $1
	LDA #$70
	STA $D018
	LDA #$3B
	STA $D011
	LDA #$00 
	STA $D021
	LDA #$18
	STA $D016
	LDA #<pB9BB
	STA $FFFE
	LDA #>pB9BB
	STA $FFFF

 ldx #2
zp_loop lda zp,x
		sta 0,x
		inx
		 bne zp_loop

 LDA #$7F
 STA $DC0D  ; disable timer interrupts which can be generated by the two CIA chips
 STA $DD0D  ; the kernal uses such an interrupt to flash the cursor and scan the keyboard, so we better stop it.

 LDA $DC0D  ; by reading this two registers we negate any pending CIA irqs.
 LDA $DD0D  ; if we don't do this, a pending CIA irq might occur after we finish setting up our irq. we don't want that to happen.

  LDA #$01   ; this is how to tell the VICII to generate a raster interrupt
 STA $D01A
	
 LDA #2 ; SCRNBANK
 STA $DD00 ; bank
	
	LDA #$BA
	STA $D012
	LDA #$01
	STA $D019
		
	CLI

	JMP		MAIN_LOOP

	* = $855c

MAIN_LOOP
        JSR GET_ROT
        JSR CALC_ROT_MAT ; calc rotation?
        JSR DRAW_SCREEN
		JSR COLOUR_SETUP_BLACK
        JSR PLOT_POINTS_DRAW_OBJECTS
        JSR READ_JOYSTICK_KEYBOARD
        JSR MOVEMENT
        JMP MAIN_LOOP

	.REPT 2026+69+255+346+1812
		NOP
	.NEXT
     
s8DA4
s8DAA   

s8EC2   

s8F7F   


s8FAE  

s8FC3

s8FF8

s90BE   
s950D   
   RTS 

PLOT_POINTS_DRAW_OBJECTS
        LDA abE9 ; ground object?
        STA abB8 ; object to draw?
b9715	; draw objects  
	LDY	abB2 	; get number of objects
	BEQ 	b9727	; exit if 0
		STY	abB3	; object count
b971B   
		LDX 	f2980,Y	; get object in X ?
		JSR 	DRAW_OBJECT	; draw object
		DEC 	abB3		; dec object count
		LDY 	abB3		; get object count
		BNE	b971B	; exit if 0
b9727   
	RTS	; exit

DRAW_OBJECT
	STX	abAF	; store object number 
	LDA	OBJECT_SHAPE_PTR_LO,X	; get object pos hi
	STA	ab1D	; store in pointer
	LDA	OBJECT_SHAPE_PTR_HI,X	; get object pos lo
	STA	ab1E		; store in pointer
	JSR	CAMERA_OBJECT_DIFF
	JSR	s97FA 	; draw object
        BCS	b973D
b973C   
	RTS 

b973D   
	LDX	#$00
        STX	ab19
        LDY	#$01
        JSR	s999A
        BCC	b978A ; draw object
        LDA	DIFF_Y_HSB
        BPL	b9755
        LDY	abB9
        LDX	#$00
        JSR	s999A
        BCS	b973C ;exit

b9755 ; object is a point ; draw point
	LDA	DIFF_X_LSB
        STA	ab07
        LDX	DIFF_X_MSB
        LDA	DIFF_X_HSB
        JSR	BIT24TOFP
        STA	ab52
        STX	ab53
        LDA	DIFF_Y_LSB
        STA	ab07
        LDX	DIFF_Y_MSB
        LDA	DIFF_Y_HSB
        JSR	BIT24TOFP ; 9E93
        STA	ab54
        STX	ab55
        LDA	DIFF_Z_LSB
        STA	ab07
        LDX	DIFF_Z_MSB
        LDA	DIFF_Z_HSB
        JSR	BIT24TOFP
        STA	ab56
        STX	ab57
        JSR	sA75C
        LDX	#$00
        JMP	PLOT_POINT 	; PLOT POINT

b978A   
	LDA DIFF_X_MSB
        SEC 
        SBC #$08
        STA DIFF_X_MSB
        BCS b9795
        DEC DIFF_X_HSB
b9795   
	LDA DIFF_Y_MSB
        SEC 
        SBC #$08
        STA DIFF_Y_MSB
        BCS b97A0
        DEC DIFF_Y_HSB
b97A0   
	LDA DIFF_Z_MSB
        SEC 
        SBC #$08
        STA DIFF_Z_MSB
        BCS b97AB
        DEC DIFF_Z_HSB
b97AB   
	LDY #$00
        STY ab19 ; start point count
        LDA (OBJECT_POINTER),Y ; object point count
        STA abB0 ; number of points?
        STY abAD ; store mem pos
b97B5   
	JSR sA61F
        JSR sA75C
        LDA ab19 ; get point count
        INC ab19 ; inc point count
        CMP abB0 ; last point yn
        BNE b97B5  ; no so do next
        INC abAD ; inc mem pos
        LDY abAD ; get mem pos
        LDA (OBJECT_POINTER),Y  ; object line count
        STA ab19  ; number of lines?
        BPL b97E1
b97CD   
	LDY abAD ; get mem pos
        INY  ; inc mem pos
        LDA (OBJECT_POINTER),Y ; get 1st point
        TAX ; 1st point
        INY ; inc mem pos
        LDA (OBJECT_POINTER),Y ; get 2nd point
        STY abAD ; store 2nd point?
        TAY ; 2nd point
        JSR LINE_DRAW ; draw line
        DEC ab19 ; dec line count
        BMI b97CD ; last line y/n
        RTS ; yes

b97E1    ; first and second point are stored in 1 byte as 2 nibbles
	LDY abAD ; get mem pos
        INY  ; inc mem pos
        STY abAD ; store mem pos
        LDA (OBJECT_POINTER),Y ; get point count
        TAX  ; store backup
        AND #$0F ; and with 15 = 1st point
        TAY ; y = first point
        TXA  ; get backup
        LSR  ; /2
        LSR  ; /2
        LSR  ; /2
        LSR  ; /2
        TAX  ; divide by 16 = 2nd point
        JSR LINE_DRAW       ; DRAW LINE
        DEC ab19 ; dec line count
        BPL b97E1 ; last line yn
        RTS  ; yes

s97FA ; draw the object
	LDA abB8 ; object to draw
        CMP #$16
        BNE b984F
        LDX #$01
        LDY #$00
        JSR s999A
        BCS b984D
        LDX abAF
        LDA b29EF
        BMI b9823
        LDA f29C0,X
        AND #$10
        BNE b984D
        LDA ab29DB
        BMI b9823
        LDA f29C0,X
        AND #$20
        BNE b9848
b9823   
	TXA 
        LDX abEB
        INX 
        CPX #$0B
        BCS b984D
        STX abEB
        STA fBEB0,X
        TAX 
        LDA f29C0,X
        ORA #$80
        STA f29C0,X
        JSR s98B1
j983C   
	LDA #$FF
        STA abB8
        STA f2940,X
        NOP 
        NOP 
        NOP 
        CLC 
        RTS 

b9848   
	LDX #$02
        JSR s8DAA
b984D   
	SEC 
        RTS 

b984F ; draw object point   
	CMP #$1C
        BNE b984D
        LDA abA9
        BPL b984D
        LDA abAF
        CMP #$08
        BCS b984D
        LDX #$02
        LDY #$00
        JSR s999A
        BCS b984D
        LDX abAF
        LDA f29C0,X
        JSR s98B1
        LDX abAF
        LDA OBJ_X_LSB,X
        STA CURR_X_LSB
        LDA OBJ_X_MSB,X
        STA CURR_X_MSB
        LDA OBJ_X_HSB,X
        STA CURR_X_HSB
        LDA OBJ_Z_LSB,X
        STA CURR_Z_LSB
        LDA OBJ_Y_MSB,X
        STA CURR_Z_MSB
        LDA OBJ_Z_HSB,X
        STA CURR_Z_HSB
        LDA f802A,X
        LSR 
        ROR 
        ROR 
        ROR 
        TAY 
        AND #$03
        STA YAW_HI
        TYA 
        ROR 
        AND #$F0
        STA YAW_LO
        STX abA9
        TXA 
        JSR s9D99
        JSR CALC_ROT_MAT ; cal rotation
        JSR s9950
        LDX abAF
        JMP j983C

s98B1   
	AND #$0C
        BEQ b98C3
        LSR 
        LSR 
        LSR 
        BEQ b98BF
        JSR s8DA4
        BCC b98C3
b98BF   
	TXA 
        NOP 
        NOP 
        NOP 
b98C3   
	LDX abAF
        JMP jB94D

j98C8   
	LDY abA9
        BPL b98CD
        RTS 

        .REPT 138	
		NOP
	.NEXT

CAMERA_OBJECT_DIFF   ; find difference between object and camera ?
        SEC
        LDA OBJ_X_LSB,X     ; object x lsb ; f2880
        SBC CURR_X_LSB        ; - camera x lsb
        STA DIFF_X_LSB        ; = diff x lsb
        LDA OBJ_X_MSB,X     ; object x msb ; f2480
        SBC CURR_X_MSB        ; - camera x msb
        STA DIFF_X_MSB        ; = diff x msb
        LDA OBJ_X_HSB,X     ; object x hsb ; f2540
        SBC CURR_X_HSB        ; - camera x hsb
        STA DIFF_X_HSB        ; = diff x hsb
        SEC 
        LDA OBJ_Y_LSB,X     ; object y lsb ; f28C0
        SBC CURR_Y_LSB        ; - camera y hsb
        STA DIFF_Y_LSB        ; = diff y lsb 
        LDA OBJ_Y_MSB,X     ; object y msb ; f24C0
        SBC CURR_Y_MSB        ; - camera y hsb
        STA DIFF_Y_MSB        ; = diff y hsb
        LDA OBJ_Y_HSB,X     ; object y hsb ; f2580
        SBC CURR_Y_HSB        ; - camera y hsb
	STA DIFF_Y_HSB        ; = diff y hsb
	SEC 
        LDA OBJ_Z_LSB,X     ; object z lsb ; f2900
        SBC CURR_Z_LSB        ; - camera z lsb
        STA DIFF_Z_LSB        ; = diff z lsb
        LDA OBJ_Z_MSB,X    ; object z msb ; ab2500
        SBC CURR_Z_MSB        ; - camera z msb
        STA DIFF_Z_MSB        ; = diff z msb
        LDA OBJ_Z_HSB,X    ; object z hsb ; ab25C0
        SBC CURR_Z_HSB        ; - camera z hsb
        STA DIFF_Z_HSB        ; = diff z hsb
        RTS 

s999A   
	STX ab08
        STY ab09
        LDA DIFF_X_LSB
        LDX DIFF_X_MSB
        LDY DIFF_X_HSB
        JSR s99BE
        BCS b99BD
        LDA DIFF_Y_LSB
        LDX DIFF_Y_MSB
        LDY DIFF_Y_HSB
        JSR s99BE
        BCS b99BD
        LDA DIFF_Z_LSB
        LDX DIFF_Z_MSB
        LDY DIFF_Z_HSB
        JSR s99BE
b99BD   
	RTS 

s99BE   
	BPL b99D5
        EOR #$FF
        PHA 
f99C3   
	TXA 
        EOR #$FF
        TAX 
        TYA 
        EOR #$FF
        TAY 
        PLA 
        CLC 
        ADC #$01
        BCC b99D5
        INX 
        BNE b99D5
        INY 
b99D5   
	SEC 
        TXA 
        SBC ab08
        TYA 
        SBC ab09
        RTS 

LINE_DRAW ; LINE_DRAW_04 - DRAW LINE - x is start index - y is end index
        LDA f0700,X ; z pos + or - ?
        BEQ b9A07
        BMI b99FB
        LDA f0700,Y ; z pos + or - ?
        BEQ b99FB
        BMI b9A07
        LDA f0380,Y ; end hor pos
        EOR #$80
        STA ab06
        LDA f0380,X ; start hor pos
        EOR #$80
        CMP ab06
        BCS b9A07
b99FB   
	TYA 
        STX ab06
        TAX 
f99FF   
	LDY ab06
        LDA f0700,X ; z pos + or - ?
        BPL b9A07
        RTS 

b9A07   
	LDA f0700,X ; z pos + or - ?
        STA ab6E
        BMI b9A2C
        LDA f0680,X
        STA ab6A
        LDA f06C0,X
        STA ab6B
        LDA ab0600,X
        STA ab5E
        LDA f03C0,X
        STA ab5F
        LDA f7600,X
        STA ab60
        LDA f0640,X
        STA ab61
b9A2C   
	LDA ab0100,X
        STA ab52
        LDA f0140,X
        STA ab53
        LDA f0180,X
        STA ab54
        LDA f02C0,X
        STA ab55
        LDA f0340,X
        STA ab56
        LDA f0380,X
        STA ab57
        LDA f0700,Y ; z pos + or - ?
        STA ab6F
        BMI b9A6F
        LDA f0680,Y
        STA ab6C
        LDA f06C0,Y
        STA ab6D
        LDA ab0600,Y
        STA ab62
        LDA f03C0,Y
        STA ab63
        LDA f7600,Y
        STA ab64
        LDA f0640,Y
        STA ab65
b9A6F   
	LDA ab0100,Y
        STA ab58
        LDA f0140,Y
        STA ab59
        LDA f0180,Y
        STA ab5A
        LDA f02C0,Y
        STA ab5B
        LDA f0340,Y
        STA ab5C
        LDA f0380,Y
        STA ab5D
        LDA ab6F
        BPL b9A94
        JMP j9B2C ; LINE DRAW

b9A94   
	LDX ab5E
        LDA ab5F
        EOR #$01
        STX ab08
        STA ab09
        LDX ab62
        LDY ab63
        JSR FP_ADD
        STX ab0A
        STY ab0B
        TYA 
        ASL 
        AND #$02
        STA ab67
        LDX ab60
        LDA ab61
        EOR #$01
        STX ab08
        STA ab09
        LDX ab64
        LDY ab65
        JSR FP_ADD
        STX ab0C
        STY ab0D
        TYA 
        AND #$01
        ORA ab67
        STA ab67
        LDX ab08
        LDA LOG_TABLE,X
        LDX ab0A
        SEC 
        SBC LOG_TABLE,X
        TAY 
        LDA ab09
        ORA #$02
        BCS b9AE0
        SBC #$03
        SEC 
b9AE0   
	SBC ab0B
        AND #$FD
        STA ab69
        LDX EXP_TABLE,Y
        STX ab68
        TAY 
        BMI b9B14
        LDA ab67
        ORA #$04
        STA ab67
        LDX ab0A
        LDA LOG_TABLE,X
        LDX ab0C
        SEC 
        SBC LOG_TABLE,X
        TAY 
        LDA ab0B
        ORA #$02
        BCS b9B09
        SBC #$03
        SEC 
b9B09   
	SBC ab0D
        AND #$FD
        STA ab09
        LDX EXP_TABLE,Y
        STX ab08
b9B14   
	TAY 
        BMI b9B1E
        LDA #$FF
        STA LINE_INC
        JMP j9C10

b9B1E   CLC 
        ADC #$20
        AND #$FC
        TAY 
        JSR FPTO16BIT
        STY LINE_INC
        JMP j9C10

j9B2C   
	LDX ab5C ; LINE_DRAW_03
        LDA LOG_TABLE,X
        LDX ab56
        SEC 
        SBC LOG_TABLE,X
        TAY 
        LDA ab5D
        ORA #$02
        BCS b9B41
        SBC #$03
        SEC 
b9B41   
	SBC ab57
        AND #$FD
        STA ab0B
        LDX EXP_TABLE,Y
        STX ab0A
        EOR #$01
        STA ab0B
        LDX ab0A
        LDA LOG_TABLE,X
        LDX ab52
        CLC 
        ADC LOG_TABLE,X
        TAY 
        LDA ab0B
        BCC b9B63
        ADC #$03
        CLC 
b9B63   
	ADC ab53
        AND #$FD
        STA ab09
        LDX EXP_TABLE,Y
        STX ab08
        LDX ab58
        LDY ab59
        JSR FP_ADD
        STX ab0C
        STY ab0D
        TYA 
        EOR ab57
        ASL 
        AND #$02
        STA ab67
        LDX ab0A
        LDA LOG_TABLE,X
        LDX ab54
        CLC 
        ADC LOG_TABLE,X
        TAY 
        LDA ab0B
        BCC b9B94
        ADC #$03
        CLC 
b9B94   
	ADC ab55
        AND #$FD
        STA ab09
f9B9A   
	LDX EXP_TABLE,Y
        STX ab08
        LDX ab5A
        LDY ab5B
        JSR FP_ADD
        STX ab0A
        STY ab0B
        TYA 
        EOR ab57
        AND #$01
        ORA ab67
        STA ab67
        LDX ab08
        LDA LOG_TABLE,X
        LDX ab0C
        SEC 
        SBC LOG_TABLE,X
        TAY 
        LDA ab09
        ORA #$02
        BCS b9BC8
        SBC #$03
        SEC 
b9BC8   
	SBC ab0D
        AND #$FD
        STA ab69
        LDX EXP_TABLE,Y
        STX ab68
        TAY 
        BMI b9BFC
        LDA ab67
        ORA #$04
        STA ab67
        LDX ab0C
        LDA LOG_TABLE,X
        LDX ab0A
        SEC 
        SBC LOG_TABLE,X
        TAY 
        LDA ab0D
        ORA #$02
        BCS b9BF1
        SBC #$03
        SEC 
b9BF1   
	SBC ab0B
        AND #$FD
        STA ab09
        LDX EXP_TABLE,Y
        STX ab08
b9BFC   
	TAY 
        BMI b9C05
        LDA #$FF
        STA LINE_INC
        BNE j9C10
b9C05   
	CLC 
        ADC #$20
        AND #$FC
        TAY 
        JSR FPTO16BIT
        STY LINE_INC
j9C10   
	LDX ab67    ; GET LINE TYPE 0-7
        LDY LINE_DRAW_CONV_PTR,X ; CONVERT LINE TYPE TO POINTER TYPE
        STY ab67    ; GET POINTER TO LINE NEEDED
        LDA LINE_DRAW_PTR_LO,Y ; GET POINTER TO CORRECT LINE
        STA ab04    ; STORE AT JUMP TABLE ADDRESS
        LDA LINE_DRAW_PTR_HI,Y ; GET POINTER TO CORRECT LINE
        STA ab05    ; STORE AT JUMP TABLE ADDRESS
        LDA ab6F
        BEQ b9C2F
        LDA fBBD8,Y
        STA ab6C
        LDA fBBE0,Y
        STA ab6D
b9C2F   
	LDA ab6E
        BNE b9C36
        JMP LINE_DRAW_JMP

b9C36   
	LDA ab61
        ASL 
        ASL 
        AND #$04
        ORA ab6E
        STA ab06
        LDA ab5F
        ASL 
        ASL 
        ASL 
        AND #$08
        ORA ab06
        TAX 
        TYA 
        ORA fBBE8,X
        LSR 
        TAX 
        LDA fBBF8,X
        BNE b9C56
        RTS 

b9C56   
	STA ab6E
        LDA ab6F
        BMI b9C7C
        LDA ab65
        ASL 
        ASL 
        AND #$04
        ORA ab6F
        STA ab06
        LDA ab63
        ASL 
        ASL 
        ASL 
        AND #$08
        ORA ab06
        TAX 
        TYA 
        ORA fBBE8,X
        LSR 
        TAX 
        LDA fBC18,X
        BNE b9C7C
        RTS 

b9C7C   
	LDA ab6E
        AND #$01
        BEQ b9CC1
        LDX ab92
        LDA ab93
        SEC 
        SBC ab21
        STX ab08
        STA ab09
        LDX ab5E
        LDA ab5F
        EOR #$01
        TAY 
        JSR FP_ADD
        LDX ab68
        LDY ab69
        JSR FPMUL
        LDX ab60
        LDY ab61
        JSR FP_ADD
        TYA 
        CLC 
        ADC ab21
        BVS b9CC1
        TAY 
        JSR FPTO8BIT ; do perspective?
        BCS b9CC1
        CLC 
        ADC ab8F
        CMP #$88 ; clip test?
        BCS b9CC1
        STA ab6B
        LDA #$9F ; clip right ?
        STA ab6A ; clip right ?
        JMP LINE_DRAW_JMP

b9CC1   
	LDA ab6E
        AND #$02
        BEQ b9D06
        LDX ab96
        LDA ab97
        SEC 
        SBC ab21
        STX ab08
        STA ab09
        LDX ab60
        LDA ab61
        EOR #$01
        TAY 
        JSR FP_ADD
        LDX ab68
        LDY ab69
        JSR FPDIV
        LDX ab5E
        LDY ab5F
        JSR FP_ADD
        TYA 
        CLC 
        ADC ab21
        BVS b9D06
        TAY 
        JSR FPTO8BIT ; do perspective
        BCS b9D06
        CLC 
        ADC ab8E
        CMP #$A0 ; clip test
        BCS b9D06
        STA ab6A
        LDA #$87 ; clip bottom
        STA ab6B ; clip bottom
        JMP LINE_DRAW_JMP

b9D06   
	LDA ab6E ; LINE DRAW
        AND #$04
        BEQ b9D4B
        LDX ab90
        LDA ab91
        SEC 
        SBC ab21
        STX ab08
        STA ab09
        LDX ab5E
        LDA ab5F
        EOR #$01
        TAY 
        JSR FP_ADD
        LDX ab68
        LDY ab69
        JSR FPMUL
        LDX ab60
        LDY ab61
        JSR FP_ADD
        TYA 
        CLC 
        ADC ab21
        BVS b9D4B
        TAY 
        JSR FPTO8BIT ; do perspective
        BCS b9D4B
        CLC 
        ADC ab8F
        CMP #$88 ; clip test
        BCS b9D4B
        STA ab6B
        LDA #$00 ; clip off top
        STA ab6A ; clip off top 
        JMP LINE_DRAW_JMP

b9D4B   
	LDA ab6E ; LINE DRAW
        AND #$08
        BEQ b9D98
        LDX ab94
        LDA ab95
        SEC 
        SBC ab21
        STX ab08
        STA ab09
        LDX ab60
        LDA ab61
        EOR #$01
        TAY 
        JSR FP_ADD
        LDX ab68
        LDY ab69
        JSR FPDIV
        LDX ab5E
        LDY ab5F
        JSR FP_ADD
        TYA 
        CLC 
        ADC ab21
        BVS b9D98
        TAY 
        JSR FPTO8BIT
        BCS b9D98
        CLC 
        ADC ab8E
        CMP #$A0 ; clip test
        BCS b9D98
        STA ab6A
        LDA #$00 ; clip off right
        STA ab6B ; clip off right

LINE_DRAW_JMP
	LDX ab6A
        LDY ab6B
        LDA #$80
        STA ab08
        JMP (f0004) ; LINE_DRAW_01

b9D98   RTS 

s9D99   
	ASL 
        ASL 
        ASL 
f9D9C   
	ASL 
        TAX 
        LDY #$00
b9DA0  
	LDA f9DAD,X
        STA fBEA0,Y
        INX 
        INY 
        CPY #$10
        BNE b9DA0
        RTS 

f9DAD   SLO f9F,X
        CPX #$FC
        BRK 
        BRK 
        PHP 
        PHP 
        BRK 
  .BYTE $FC,$00,$FC ; NOP fFC00,X
b9DB9   BPL b9E15
        BNE b9DB9
        SLO f9F,X
        CPX #$FC
        BRK 
        BRK 
        PHP 
        PHP 
b9DC5   BRK 
  .BYTE $FC,$00,$FC ; NOP fFC00,X
        BPL b9DD5
        BCC b9DC5
        SBC ~f009E,X
b9DD1   =*+$01
        CPY #$00
        BPL b9DD4
b9DD4   BRK 
b9DD5   BRK 
        SED 
        BRK 
  .BYTE $FC,$10,$01 ; NOP f0110,X
        BCC b9DD1
        SLO f9F,X
        INY 
b9DE1   =*+$01
  .BYTE $FC,$00,$04 ; NOP f0400,X
  .BYTE $0C,$08,$00 ; NOP ~f0008
        BRK 
  .BYTE $80,$FC ; NOP #$FC
        BPL b9E45
        BCC b9DE1
        SLO f9F,X
        CPX #$FC
        BRK 
        NOP ab08
        DEY 
b9DF5   BRK 
        BRK 
        BRK 
        SED 
        BPL b9DFC
b9DFC   =*+$01
        BCC b9DF5
        SBC fE09E,X
  .BYTE $FC,$00,$00 ; NOP ~f0000,X
        BRK 
        BRK 
        BRK 
  .BYTE $FC,$00,$FC ; NOP fFC00,X
b9E09   BPL b9E0C
b9E0C   =*+$01
        BNE b9E09
        SLO f9F,X
        CPX #$FC
        BRK 
        BRK 
        PHP 
        PHP 
b9E15   BRK 
  .BYTE $FC,$00,$FC ; NOP fFC00,X
b9E19   BPL b9E75
        BCC b9E19
        EOR fE09E,X
  .BYTE $FC,$00,$00 ; NOP ~f0000,X
        PHP 
        PHP 
        BRK 
  .BYTE $FC,$00,$FC ; NOP fFC00,X
b9E29   BPL b9E2C
b9E2C   =*+$01
        BCC b9E29
        SLO f9F,X
f9E2F   BRK 
        CPY #$00
        BPL b9E35
        PHP 
b9E35   BRK 
        BRK 
        BRK 
        SED 
        BRK 
        BRK 
        BRK 
        BRK 
        LDX f2F9E,Y
        BPL b9E57
        ORA ~f0000
b9E45   BRK 
        BRK 
        BRK 
        BRK 
        BRK 
        BRK 
        BRK 
        BRK 
        ROR ab9E
        JSR ~f0008
        BRK 
        BRK 
        BRK 
        BRK 
        BRK 
b9E57   BRK 
        BRK 
        BRK 
        BRK 
        BRK 
        BRK 
        JMP jAA62

        LDA CURR_Y_HSB
        BEQ b9EBE
        BPL b9E6A
        LDA CURR_Y_HSB
        LSR 
        LSR 
b9E6A   
	LSR 
        TAX 
        LDA CURR_Y_MSB
        SEC 
        SBC f9E9E,X
        STA CURR_Y_MSB
b9E75   =*+$01
        LDA CURR_Y_HSB
        SBC f9EAE,X
        STA CURR_Y_HSB
        BNE b9E90
        LDA #$4C
        CMP s9E93
        BEQ b9E90
        STA s9E93
        LDA #$06
        STA CURR_Y_HSB
        LDA #$60
        STA fBEA0
b9E90   
	JMP j9ED6

s9E93   
	JMP BIT24TOFP

        PHA 
        TXA 
        CLC 
        ADC #$0C
        TAX 
        PLA 
        RTS 

f9E9E   RTI 

        NOP #$00
        NOP #$00
        NOP #$00
        NOP #$00
        NOP #$00
        NOP #$00
        NOP #$00
        BRK 
f9EAE   
	BRK 
        BRK 
        ORA (p01,X)
  .BYTE $02    ;JAM 
  .BYTE $02    ;JAM 
        SLO (p03,X)
        NOP ab04
        ORA ab05
        ASL ab06
        SLO ab08
b9EBE   
	LDA CURR_Y_MSB
        SEC 
        SBC abBEA2
        STA CURR_Y_MSB
        LDA CURR_Y_HSB
        SBC #$00
        STA CURR_Y_HSB
        BPL j9ED6
j9ECE   
	LDA #$00
        STA abFA
        SEC 
        JMP jA0AF

j9ED6   
	LDA ROLL_LO
        CLC 
        ADC abBEA3
        STA ROLL_LO
        BCC b9EE2
        INC ROLL_HI
b9EE2   
	LDA PITCH_LO
        CLC 
        ADC abBEA4
        STA PITCH_LO
        BCC b9EEE
        INC PITCH_HI
b9EEE   
	LDA YAW_LO
        CLC 
        ADC abBEA5
        STA YAW_LO
        BCC b9EFA
        INC YAW_HI
b9EFA   
	JMP jA12B

        LDA #$00
        STA abBEA6
        LDA #$3F
        STA CURR_Y_LSB
        JSR s9F17
        LDA ab7F
        BNE b9F16
        DEC CURR_Y_HSB
        BPL b9F16
        STA CURR_Y_HSB
        JMP j9ECE

b9F16   
	RTS 

s9F17  
	LDA abCA
        BEQ ab9F1E
        JMP jA24A

ab9F1E  
	LDX ab22
        LDY ab23
        STX ab08
        STY ab09
        LDX abBEA2
        LDY abBEA3
        JSR FPMUL
        STX ab22
        STY ab23
JOYSTICK_LEFT
        LDA #$04
        BIT ab80
        BNE JOYSTICK_RIGHT
                LDX abBEA4
                LDY abBEA5
                JSR FP_ADD
                STX ab22
                STY ab23
JOYSTICK_RIGHT
        LDA #$08 
        BIT ab80
        BNE JOYSTICK_UP
                LDX abBEA4
                LDY abBEA5
                INY 
                JSR FP_ADD
                STX ab22
                STY ab23
JOYSTICK_UP
        LDA #$01
        BIT ab80
        BNE JOYSTICK_DOWN
                LDA PITCH_LO
                CLC 
                ADC abBEA6
                STA PITCH_LO
                LDA PITCH_HI
                ADC #$00
                AND #$03
                STA PITCH_HI
JOYSTICK_DOWN
        LDA #$02
        BIT ab80
        BNE b9F86
                SEC
                LDA PITCH_LO
                SBC abBEA6
                STA PITCH_LO
                LDA PITCH_HI
		SBC #$00
		AND #$03
		STA PITCH_HI
b9F86   
	LDX abEC
        LDA abED
        LDY b29DC
        BPL b9F98
        LDY abA9
        CPY #$01
        BNE b9F98
        CLC 
        ADC #$04
b9F98   
	STX ab08
        STA ab09
        LDX abBEAE
f9F9F   
	LDY abBEAF
        JSR FPMUL
        LDX ab26
        LDY ab27
        JSR FP_ADD
        LDY abBEAB
        LDX abBEAA
        JSR FPMUL
        STX ab26
        STY ab27
        LDX ab38
        LDY ab39
        STX ab08
        STY ab09
f9FC1   
	LDX ab3E
f9FC3   
	LDY ab3F
        JSR FPMUL
        LDX ab26
        LDY ab27
        JSR FPMUL
ab9FCF  
	JSR FPTO16BIT
        TYA 
        CLC 
        ADC CURR_Z_LSB
        STA CURR_Z_LSB
        LDY #$00
        TXA 
        BPL b9FDF
        LDY #$FF
b9FDF   
	ADC CURR_Z_MSB
        STA CURR_Z_MSB
        TYA 
        ADC CURR_Z_HSB
        STA CURR_Z_HSB
        LDX ab38
        LDY ab39
        STX ab08
        STY ab09
        LDX ab3C
        LDY ab3D
        JSR FPMUL
        LDX ab26
        LDY ab27
        JSR FPMUL
        JSR FPTO16BIT
        TYA 
        CLC 
        ADC CURR_X_LSB
        STA CURR_X_LSB
        LDY #$00
        TXA 
        BPL bA00E
        LDY #$FF
bA00E   
	ADC CURR_X_MSB
        STA CURR_X_MSB
        TYA 
        ADC CURR_X_HSB
        STA CURR_X_HSB
        LDA ab7F
        BEQ bA037
        LDA abFA
        BEQ bA024
        JSR sA13D
        BCS bA037
bA024   
	LDA ab27
        EOR #$80
        CMP #$9C
        BCS bA037
        LDA #<f0200
        STA PITCH_LO
        LDA #>f0200
        STA PITCH_HI
        JMP jA102

bA037   
	LDX ab36
        LDY ab37
        STX ab08
        STY ab09
        LDX ab26
        LDY ab27
        JSR FPMUL
        TYA 
        LDY abBEA9
        LSR 
        BCS bA06B
        LDA abBEAD
        LDX b29DC
        BPL bA05D
        LDX abA9
        CPX #$01
        BNE bA05D
        LDA #$5A
bA05D   
	SEC 
        SBC CURR_Y_HSB
        BPL bA06B
        ASL 
        BPL bA069
        ASL 
        TAY 
        BMI bA06B
bA069   
	LDY #$88
bA06B   
	LDX abBEA8
        JSR FPMUL
        JSR FPTO16BIT
        TYA 
        CLC 
        ADC CURR_Y_LSB
        STA CURR_Y_LSB
        TXA 
        ADC CURR_Y_MSB
        STA CURR_Y_MSB
fA07F   
	TXA 
        BPL bA086
        LDA #$FF
        BMI bA088
bA086   
	LDA #$00
bA088   
	ADC CURR_Y_HSB
        STA CURR_Y_HSB
        BMI bA09A ; ground check ?
        BNE bA0E2 ; ground check ?
        LDA CURR_Y_MSB
        BNE bA0F7
        LDA CURR_Y_LSB
        CMP #$40
        BCS bA0F7
bA09A   ; ground check ?
	LDA ab09
        EOR #$80
fA09E   
	CMP #$A0
abA0A0  
	BCS jA0AF
        LDA PITCH_HI
        LSR 
        STA ab06
        LDA PITCH_LO
        ROR 
        LSR ab06
        ROR 
        CMP #$A0
jA0AF   
	PHP 
        LDA #$00
        STA CURR_Y_MSB
        STA CURR_Y_HSB
bA0B6   
	STA ROLL_LO
fA0B8   
	STA ROLL_HI
        LDA #$3F
fA0BD   =*+$01
        STA ab7F
fA0BE   
	STA CURR_Y_LSB
        LDA PITCH_HI
        AND #$02
        BEQ bA0D7
        STA PITCH_HI
        LDA #$00
        STA PITCH_LO
        LDX #$09
bA0CE   
	LDA f9E2F,X
        STA abBEA2,X
        DEX 
        BPL bA0CE
bA0D7   
	PLP 
        BCC jA102
        NOP 
        NOP 
        NOP 
        LDA #$02
        STA abF9
        RTS 

bA0E2  ; ground check? 
	CMP #$40
        BNE bA0F7
        JSR sA13D
        BCS bA0F7
        LDA #$FF
        STA CURR_Y_MSB
        STA abFA
        CLC 
        PHP 
        LDA #$00
        BEQ bA0B6
bA0F7   
	LDA #$00
        STA ab7F
        STA abFA
        LDA abA9
        JSR s9D99
jA102   
	LDX ab22
        LDY ab23
        JSR FPTO16BIT
        TXA 
        ASL 
        TYA 
        ADC YAW_LO
        STA YAW_LO
        TXA 
        ADC YAW_HI
        STA YAW_HI
        LDA ab7F
        BNE jA12B
        LDX ab22
        LDA abBEA7
        BMI bA123
        CLC 
        ADC ab23
bA123   
	TAY 
        JSR FPTO16BIT
        STY ROLL_LO
        STX ROLL_HI
jA12B   
	LDA abF2
        BMI bA13C
        LDA ab99
        CLC 
        ADC abA2
        STA ab99
        LDA ab9A
        ADC #$00
        STA ab9A
bA13C   
	RTS 

sA13D   RTS 

	.REPT 38
		NOP
	.NEXT
        RTS 

MOVEMENT
        LDA abF1
        BEQ bA170
        LDX ab80
        LDA fA17B,X
        STA ab80
bA170   
	LDA abA8
        BNE bA18B
        LDA abA9
        BMI bA18B
        JMP (fBEA0)

fA17B   
	BRK 
        ORA (SCREEN_POS_PTR,X)
        SLO (p08,X)
        ORA #$0A
sA182   
	ANC #$04
        ORA ab06
        SLO ab0C
        ORA ab0F0E
bA18B   
	LDA abCA
        BEQ bA192
        JMP jA24A

bA192   
	LDA abA9
        BPL bA1AC
        LDA #$01
        BIT ab80
        BNE bA1A1
        LDA #$01
        JSR sA1ED
bA1A1   
	LDA #$02
        BIT ab80
        BNE bA1AC
        LDA #$00
        JSR sA1ED
bA1AC   
	LDA #$04
        BIT ab80
        BNE bA1C1
        LDA YAW_LO
        CLC 
        ADC abAC
        STA YAW_LO
        LDA YAW_HI
        ADC #$00
        AND #$03
        STA YAW_HI
bA1C1   
	LDA #$08
        BIT ab80
        BNE bA1D6
        LDA YAW_LO
        SEC 
        SBC abAC
        STA YAW_LO
        LDA YAW_HI
        SBC #$00
        AND #$03
        STA YAW_HI
bA1D6   
	LDA abFA
        BEQ bA1EA
        JSR sA13D
        BCC bA1EA
        LDA #$09
        STA abA9
        JSR s9D99
        LDA #$00
        STA abA8
bA1EA   
	JMP jA12B

sA1ED   
	PHA 
        LDX abAA
        EOR abAB
        STX ab08
        STA ab09
        LDX ab3E
        LDY ab3F
        JSR FPMUL
        JSR FPTO16BIT
        TYA 
        CLC 
        ADC CURR_Z_LSB
        STA CURR_Z_LSB
        TXA 
        ADC CURR_Z_MSB
        STA CURR_Z_MSB
        TXA 
        BPL bA212
        LDA #$FF
        BMI bA214
bA212   
	LDA #$00
bA214   
	ADC CURR_Z_HSB
        STA CURR_Z_HSB
        PLA 
        LDX abAA
        EOR abAB
        STX ab08
        STA ab09
        LDX ab3C
        LDY ab3D
        JSR FPMUL
        JSR FPTO16BIT
        TYA 
        CLC 
        ADC CURR_X_LSB
        STA CURR_X_LSB
        TXA 
        ADC CURR_X_MSB
        STA CURR_X_MSB
        TXA 
        BPL bA23D
        LDA #$FF
        BMI bA23F
bA23D   
	LDA #$00
bA23F   
	ADC CURR_X_HSB
        STA CURR_X_HSB
        LDA abB1
        BEQ bA249
        DEC abB1
bA249   
	RTS 

jA24A  
	LDA abCB
        PHA 
        LDY #$DD
        JSR UMUL8
        ASL 
        CLC 
        ADC #$80
        STA CURR_Y_LSB
        LDA abCC
        TAX 
        ADC #$00
        LSR 
        ROR CURR_Y_LSB
        STA CURR_Y_MSB
        PLA 
        CMP abCB
        BNE jA24A
        LDA #$00
        STA CURR_Y_HSB
        LDA CURR_Y_MSB
        CMP #$06
        BCC bA27B
        LDA CURR_Y_MSB
        SBC #$07
        STA CURR_Y_MSB
        BCS bA27B
        DEC CURR_Y_HSB
bA27B   
	LDA abCA
        BMI bA2BD
        LDA CURR_Y_LSB
        CLC 
        ADC #$26
        STA CURR_Y_LSB
        BCC bA28E
        INC CURR_Y_MSB
        BNE bA28E
        INC CURR_Y_HSB
bA28E   
	LDA abA8
        BEQ bA30A
        CPX #$0C
        BNE bA30A
        LDA #$00
        STA abA8
        STA CURR_X_LSB
        STA CURR_Z_LSB
        LDA #$71
        STA CURR_X_MSB
        STA CURR_Z_MSB
        LDX abCD
        LDA fB4B6,X
        STA CURR_X_HSB
        LDA fB4BE,X
        STA CURR_Z_HSB
        JSR s950D
        LDA #$00
        STA abCD
        NOP 
        NOP 
        NOP 
        JMP sB232

bA2BD   
	LDA CURR_Y_LSB
        SEC 
        SBC #$06
        STA CURR_Y_LSB
sA2C4   
	BCS bA2D0
        LDA CURR_Y_MSB
        SBC #$00
        STA CURR_Y_MSB
        BCS bA2D0
        DEC CURR_Y_HSB
bA2D0   
	LDA abA8
        BNE bA2FA
        CPX #$08
        BNE bA30A
        LDX abCD
        LDY #$07
        STX ab08
        STY ab09
        JSR s90BE
        LDA abC4
        STA abA5
        LDA abC5
        STA abA6
        LDA #$08
        STA CURR_X_MSB
        STA CURR_Z_MSB
        LDA #$01
        STA abA8
        LDA #$00
        STA abFA
        RTS 

bA2FA   RTS 

	.REPT 46
		NOP
	.NEXT

CALC_ROT_MAT   ; rotation matrix calculation?
		LDX ab2E
        LDY ab2F
        STX ab08
        STY ab09
        LDX ab36
        LDY ab37
        JSR FPMUL
        STX ab16
        STY ab17
        LDX ab3C
        LDY ab3D
        JSR FPMUL
        STX ab0A
        STY ab0B
        LDX ab30
        LDY ab31
        STX ab08
        STY ab09
        LDX ab3E
        LDY ab3F
        JSR FPMUL
        LDX ab0A
        LDY ab0B
        JSR FP_ADD
        STX ab40
        TYA 
        EOR abF1
        STA ab41
        LDX ab2E
        LDY ab2F
        STX ab08
        STY ab09
        LDX ab38
        LDY ab39
        JSR FPMUL
        TYA 
        EOR #$01
        EOR abF1
        STX ab42
        STA ab43
        STA ab09
        LDX ab8C
        LDY ab8D
        JSR FPMUL
        TYA 
        EOR #$01
        STA ab09
        JSR FPTO8BIT
        CLC 
        ADC #$50
        STA ab8E
        LDX #$40
        LDY #$19
        JSR FP_ADD
        STX ab90
        STY ab91
        LDX #$3E
        LDY #$1C
        JSR FP_ADD
        STX ab92
        STY ab93
        LDX ab16
        LDY ab17
        STX ab08
        STY ab09
        LDX ab3E
        LDY ab3F
        JSR FPMUL
        STX ab0A
        STY ab0B
        LDX ab30
        LDY ab31
        STX ab08
        STY ab09
        LDX ab3C
        LDA ab3D
        EOR #$01
        TAY 
        JSR FPMUL
        LDX ab0A
        LDY ab0B
        JSR FP_ADD
        STX ab44
        TYA 
        EOR abF1
        STA ab45
        LDX ab30
        LDY ab31
        STX ab08
        STY ab09
        LDX ab36
        LDY ab37
        JSR FPMUL
        STX ab16
        STY ab17
        LDX ab3C
        LDY ab3D
        JSR FPMUL
        TYA 
        EOR #$01
        STX ab0A
        STA ab0B
        LDX ab2E
        LDY ab2F
        STX ab08
		STY ab09
        LDX ab3E
        LDY ab3F
        JSR FPMUL
        LDX ab0A
        LDY ab0B
        JSR FP_ADD
        STX ab46
        STY ab47
        LDX ab30
        LDY ab31
        STX ab08
        STY ab09
        LDX ab38
        LDY ab39
        JSR FPMUL
        STX ab48
        STY ab49
        LDX ab8C
        LDY ab8D
        JSR FPMUL
        TYA 
        EOR #$01
        STA ab09
        JSR FPTO8BIT
        CLC 
        ADC #$44
        STA ab8F
        LDX #$10
        LDY #$19
        JSR FP_ADD
        STX ab94
        STY ab95
        LDX #$0E
        LDY #$1C
        JSR FP_ADD
        STX ab96
        STY ab97
        LDX ab16
        LDY ab17
        STX ab08
        STY ab09
        LDX ab3E
        LDY ab3F
        JSR FPMUL
        STX ab0A
        STY ab0B
        LDX ab2E
        LDY ab2F
        STX ab08
        STY ab09
        LDX ab3C
        LDY ab3D
        JSR FPMUL
        LDX ab0A
        LDY ab0B
        JSR FP_ADD
        TYA 
        EOR #$01
        STX ab4A
        STA ab4B
        LDX ab38
        LDY ab39
        STX ab08
        STY ab09
        LDX ab3C
        LDY ab3D
        JSR FPMUL
        STX ab4C
        STY ab4D
        LDX ab36
        LDY ab37
        STX ab4E
        STY ab4F
        LDX ab38
        LDY ab39
        STX ab08
        STY ab09
        LDX ab3E
        LDY ab3F
        JSR FPMUL
        STX ab50
        STY ab51
        RTS 
; not used start
sA4B2   
	LDY ab9F
        BNE bA4B7
        RTS 

bA4B7   
	DEY 
        STY ab19
; not used end		
jA4BA   
	LDY ab19
        LDX f57A0,Y
        LDA f57B0,Y
        STX ab08
        STA ab09
        LDX ab9D
        LDY ab9E
        JSR FPMUL
        STX ab0A
        STY ab0B
        LDY ab19
        LDX f57C0,Y
        LDA f57D0,Y
        EOR #$01
        STX ab08
        STA ab09
        LDX ab9B
        LDY ab9C
        JSR FPMUL
        LDX ab0A
        LDY ab0B
        JSR FP_ADD
        JSR FPTO16BIT
        TYA 
        LDY ab19
        STA f0400,Y
        TXA 
        CLC 
        ADC abA0
        STA f0440,Y
        LDX f57A0,Y
        LDA f57B0,Y
        STX ab08
        STA ab09
        LDX ab9B
        LDY ab9C
        JSR FPMUL
        STX ab0A
        STY ab0B
        LDY ab19
        LDX f57C0,Y
        LDA f57D0,Y
        STX ab08
        STA ab09
        LDX ab9D
        LDY ab9E
        JSR FPMUL
        LDX ab0A
        LDY ab0B
        JSR FP_ADD
        JSR FPTO16BIT
        TYA 
        LDY ab19
        STA f0500,Y
        TXA 
        CLC 
        ADC abA1
        STA f0540,Y
        DEC ab19
        BMI bA543
        JMP jA4BA

bA543   RTS 

GET_ROT	LDX 	ROLL_LO
        LDY 	ROLL_HI
        JSR 	COS_FP
        STX 	ab30
        STY 	ab31

        LDX 	ROLL_LO
        LDY 	ROLL_HI
        JSR 	SIN_FP
        STX 	ab2E
        STY 	ab2F
        STX 	ab08
        STY 	ab09

        LDX 	ab30
        LDY 	ab31
        JSR 	FPDIV ; (4)
        STX 	ab32
        STY 	ab33

        LDX 	ab30
        LDY 	ab31
        STX 	ab08
        STY 	ab09

        LDX 	ab2E
        LDY 	ab2F
        JSR 	FPDIV ; (5)
        STX 	ab34
        STY 	ab35

        LDX 	PITCH_LO
        LDY 	PITCH_HI
        JSR 	COS_FP
        STX 	ab38
        STY 	ab39

        LDX 	PITCH_LO
        LDY 	PITCH_HI
        JSR 	SIN_FP
        STX 	ab36
        STY 	ab37
        STX 	ab08
        STY 	ab09

        LDX 	ab38
        LDY 	ab39
        JSR 	FPDIV ; (8)
        STX 	ab3A
        STY 	ab3B

        LDX 	YAW_LO
        LDY 	YAW_HI
        JSR 	SIN_FP
        STX 	ab3C
        STY 	ab3D
	
        LDX 	YAW_LO
        LDY 	YAW_HI
        JSR 	COS_FP
        STX 	ab3E
        STY 	ab3F

        LDX 	ab99
        LDY 	ab9A
        JSR 	SIN_FP
        STX 	ab9B
        STY 	ab9C

        LDX 	ab99
        LDY 	ab9A
        JSR 	COS_FP
        STX 	ab9D
        STY 	ab9E
        RTS 

sA5CE   
	LDY ab19 ; current point position
        LDA f0400,Y 	; get x ?
        SEC 
        SBC CURR_X_LSB 		; sub current x
        STA ab07 		; store diff x
        LDA f0440,Y 	; get y ?
        SBC CURR_X_MSB 		; sub current y
        TAX ; ?
        LDA f0740,Y
        SBC CURR_X_HSB
        JSR BIT24TOFP
        STA ab52
fA5E8   
	STX ab53
        LDA f0480,Y
        SEC 
        SBC CURR_Y_LSB
        STA ab07
        LDA f04C0,Y
        SBC CURR_Y_MSB
        TAX 
        LDA f0780,Y
        SBC CURR_Y_HSB
        JSR BIT24TOFP
        STA ab54
        STX ab55
        LDA f0500,Y
        SEC 
        SBC CURR_Z_LSB
        STA ab07
        LDA f0540,Y
        SBC CURR_Z_MSB
        TAX 
        LDA f07C0,Y
        SBC CURR_Z_HSB
        JSR BIT24TOFP
        STA ab56
        STX ab57
        RTS 

sA61F   
	LDY abAD
        INY 
        LDA (OBJECT_POINTER),Y
        STA abCF
        INY 
        LDA (OBJECT_POINTER),Y
        STA abD1
        INY 
        LDA (OBJECT_POINTER),Y
        STA abD3
        STY abAD
        JSR sA6AD
        LDA DIFF_X_LSB
        CLC 
        ADC abCF
        STA ab07
        LDA DIFF_X_MSB
        ADC abD0
        TAX 
        LDA DIFF_X_HSB
        ADC #$00
        JSR BIT24TOFP
        STA ab52
        STX ab53
        LDA DIFF_Y_LSB
        CLC 
        ADC abD1
        STA ab07
        LDA DIFF_Y_MSB
        ADC abD2
        TAX 
        LDA DIFF_Y_HSB
        ADC #$00
        JSR BIT24TOFP
        STA ab54
        STX ab55
        LDA DIFF_Z_LSB
        CLC 
        ADC abD3
        STA ab07
        LDA DIFF_Z_MSB
        ADC abD4
        TAX 
        LDA DIFF_Z_HSB
        ADC #$00
        JSR BIT24TOFP
        STA ab56
        STX ab57
        RTS 

sA67B   
	TAY 
        LDA #$00
        STA ab07
        SEC 
        LDA #$80
        SBC CURR_X_MSB
        TAX 
        TYA 
        AND #$0F
        SBC CURR_X_HSB
        JSR BIT24TOFP
        STA ab52
        STX ab53
        LDA #$00
        STA ab07
        SEC 
        LDA #$80
        SBC CURR_Z_MSB
        TAX 
        TYA 
        PHP 
        LSR 
        LSR 
        LSR 
        LSR 
        PLP 
        SBC CURR_Z_HSB
        JSR BIT24TOFP
        STA ab56
        STX ab57
        RTS 

sA6AD  
	LDA #$00
        STA abD0
        STA abD2
        STA abD4
        LDA abAF
        CMP #$10
        BCS bA6F1
        LDX abAF
        LDA f802A,X
        BEQ bA6CD
        LDX abD3
        LDY abCF
        JSR sA728
        STX abD3
        STY abCF
bA6CD  
	LDX abAF
        LDA f801A,X
        BEQ bA6DF
        LDX abD1
        LDY abD3
        JSR sA728
        STX abD1
        STY abD3
bA6DF   
	LDX abAF
        LDA f800A,X
        BEQ bA6F1
        LDX abCF
        LDY abD1
        JSR sA728
        STX abCF
        STY abD1
bA6F1   
	LDA abCF
        EOR #$80
        ASL 
        ROL abD0
        ASL 
        ROL abD0
        ASL 
        ROL abD0
        ASL 
        ROL abD0
        STA abCF
        LDA abD1
        EOR #$80
        ASL 
        ROL abD2
        ASL 
        ROL abD2
        ASL 
        ROL abD2
        ASL 
        ROL abD2
        STA abD1
        LDA abD3
        EOR #$80
        ASL 
        ROL abD4
        ASL 
        ROL abD4
        ASL 
        ROL abD4
        ASL 
        ROL abD4
        STA abD3
        RTS 

 bA30A = $a30a
 
sA728   RTS 

	.REPT 46
		NOP
	.NEXT
        RTS 

sA75C   
	LDA abA8	; non 0 is underground 0 if on surface 
        BNE bA764 ; underground
        LDA abA9 ; 128 if walking on planet
        BPL PRJXFRM ; rotate 3d
bA764   
	JMP jA979 ; rotate 2d?

PRJXFRM LDX ab52 ; x pos
        LDA LOG_TABLE,X
        LDX ab4C ; mx1
        CLC 
        ADC LOG_TABLE,X
        TAY 
        LDA ab53
        BCC bA77A
        ADC #$03
        CLC 
bA77A   ADC ab4D
        AND #$FD
        STA ab0B
        LDX EXP_TABLE,Y
        STX ab0A
        LDX ab54
        LDA LOG_TABLE,X
        LDX ab4E
        CLC 
        ADC LOG_TABLE,X
        TAY 
        LDA ab55
        BCC bA798
        ADC #$03
        CLC 
bA798   ADC ab4F
        AND #$FD
        STA ab0D
        LDX EXP_TABLE,Y
        STX ab0C
        LDX ab56
        LDA LOG_TABLE,X
        LDX ab50
        CLC 
        ADC LOG_TABLE,X
        TAY 
        LDA ab57
        BCC bA7B6
        ADC #$03
        CLC 
bA7B6   ADC ab51
        AND #$FD
        STA ab09
        LDX EXP_TABLE,Y
        STX ab08
        LDX ab0C
        LDY ab0D
        JSR FP_ADD
        LDX ab0A
        LDY ab0B
        JSR FP_ADD
        STX ab5C
        STY ab5D
        TYA 
        AND #$01
        LSR 
abA7D7  
	ROR 
        STA ab6E
        LDX ab52
        LDA LOG_TABLE,X
        LDX ab40
        CLC 
        ADC LOG_TABLE,X
        TAY 
        LDA ab53
        BCC bA7ED
        ADC #$03
        CLC 
bA7ED  
	ADC ab41
        AND #$FD
        STA ab0B
        LDX EXP_TABLE,Y
        STX ab0A
        LDX ab54
        LDA LOG_TABLE,X
        LDX ab42
        CLC 
        ADC LOG_TABLE,X
        TAY 
        LDA ab55
        BCC bA80B
        ADC #$03
        CLC 
bA80B   
	ADC ab43
        AND #$FD
        STA ab0D
        LDX EXP_TABLE,Y
        STX ab0C
        LDX ab56
        LDA LOG_TABLE,X
        LDX ab44
        CLC 
        ADC LOG_TABLE,X
        TAY 
        LDA ab57
        BCC bA829
        ADC #$03
        CLC 
bA829   
	ADC ab45
        AND #$FD
        STA ab09
        LDX EXP_TABLE,Y
        STX ab08
        LDX ab0C
        LDY ab0D
        JSR FP_ADD
        LDX ab0A
        LDY ab0B
        JSR FP_ADD
        STX ab58
        STY ab59
        LDA ab6E
        BNE bA881
        LDX ab08
        LDA LOG_TABLE,X
        LDX ab5C
        SEC 
        SBC LOG_TABLE,X
        TAY 
        LDA ab09
        ORA #$02
        BCS bA85F
        SBC #$03
        SEC 
bA85F   
	SBC ab5D
        AND #$FD
        STA ab5F
        LDX EXP_TABLE,Y
        STX ab5E
        CLC 
        ADC ab21
        BVS bA87D
        TAY 
        JSR FPTO8BIT
        BCS bA87D
        ADC ab8E
        STA ab6A
        CMP #$A0 ; clip test?
        BCC bA881
bA87D  
	LDA #$01
        STA ab6E
bA881   
	LDX ab52
        LDA LOG_TABLE,X
        LDX ab46
        CLC 
        ADC LOG_TABLE,X
        TAY 
        LDA ab53
        BCC bA894
        ADC #$03
        CLC 
bA894   
	ADC ab47
        AND #$FD
        STA ab0B
        LDX EXP_TABLE,Y
        STX ab0A
        LDX ab54
        LDA LOG_TABLE,X
        LDX ab48
        CLC 
        ADC LOG_TABLE,X
        TAY 
        LDA ab55
        BCC bA8B2
        ADC #$03
        CLC 
bA8B2   
	ADC ab49
        AND #$FD
        STA ab0D
        LDX EXP_TABLE,Y
        STX ab0C
        LDX ab56
        LDA LOG_TABLE,X
        LDX ab4A
        CLC 
        ADC LOG_TABLE,X
        TAY 
        LDA ab57
        BCC bA8D0
        ADC #$03
        CLC 
bA8D0   
	ADC ab4B
        AND #$FD
        STA ab09
        LDX EXP_TABLE,Y
        STX ab08
        LDX ab0C
        LDY ab0D
        JSR FP_ADD
        LDX ab0A
        LDY ab0B
        JSR FP_ADD
        STX ab5A
        TYA 
        CLC 
        ADC #$04
        BVS bA8F2
        TAY 
bA8F2   
	STY ab5B
        STY ab09
        LDA ab6E
        BMI bA933
        LDX ab08
        LDA LOG_TABLE,X
        LDX ab5C
        SEC 
        SBC LOG_TABLE,X
        TAY 
        LDA ab09
        ORA #$02
        BCS bA90F
        SBC #$03
        SEC 
bA90F   
	SBC ab5D
        AND #$FD
        STA ab61
        LDX EXP_TABLE,Y
        STX ab60
        CLC 
        ADC ab21
        BVS bA92D
        TAY 
        JSR FPTO8BIT
        BCS bA92D
        ADC ab8F
        STA ab6B
        CMP #$88 ; clip test
        BCC bA933
bA92D   
	LDA ab6E
        ORA #$02
        STA ab6E
bA933   
	LDY ab19
        LDA ab6E
        STA f0700,Y ; z pos + or - ?
        BMI bA95A ; its minus
        LDA ab5E
        STA ab0600,Y
        LDA ab5F
        STA f03C0,Y
        LDA ab60
        STA f7600,Y
        LDA ab61
        STA f0640,Y
        LDA ab6A ; get perspective ver
abA952  
	STA f0680,Y ; put perspective ver
        LDA ab6B ; get perspective hor
        STA f06C0,Y ; put perspective hor
bA95A   
	LDA ab58
        STA ab0100,Y 
        LDA ab59
        STA f0140,Y
        LDA ab5A
        STA f0180,Y
        LDA ab5B
        STA f02C0,Y
        LDA ab5C
        STA f0340,Y
        LDA ab5D
        STA f0380,Y
        RTS 

jA979  
	RTS 

jAA62 = $aa62
	.REPT 724
		NOP
	.NEXT

        NOP f3F,X
        JSR ~e0038
        ORA f03,X

        PHP 
        .BYTE $99
bAC53   INX 
        LDA ab08
        ADC LINE_INC
        STA ab08
        BCC LINE_DRAW_0
        INY 
        CPY #$88
        BEQ bAC81
LINE_DRAW_0
        LDA VER_POS_LO,Y ; LINE-DRAW-START
        STA SCREEN_POS_LO
        TXA 
        ASL 
        LDA VER_POS_HI,Y
        ADC SCREEN_BANK
        STA SCREEN_POS_HI
        STY ab06
        LDY HOR_SCR_POS,X
        LDA (SCREEN_POS_PTR),Y
abAC78   =*+$02
abAC76  
		AND AND_PIXEL_POS,X
        STA (SCREEN_POS_PTR),Y
        LDY ab06
        CPX ab6C
        BNE bAC53
bAC81   
	RTS 

bAC82   
	INY  ; LINE-DRAW
        LDA ab08
        ADC LINE_INC
        STA ab08
        BCC LINE_DRAW_1
        INX 
        CPX #$A0
        BEQ bACB0
LINE_DRAW_1
        LDA VER_POS_LO,Y ; LINE-DRAW-START
        STA SCREEN_POS_LO
        TXA 
        ASL 
        LDA VER_POS_HI,Y
        ADC SCREEN_BANK
        STA SCREEN_POS_HI
        STY ab06
        LDY HOR_SCR_POS,X
        LDA (SCREEN_POS_PTR),Y
abACA7   =*+$02
abACA5  
		AND AND_PIXEL_POS,X
        STA (SCREEN_POS_PTR),Y
fACAA   
	LDY ab06
abACAC  
	CPY ab6D
        BNE bAC82 ; GOTO LINE-DRAW
bACB0   
	RTS 

bACB1   
	INY  ; LINE-DRAW
        LDA ab08
        ADC LINE_INC
        STA ab08
        BCC LINE_DRAW_2
        DEX 
        CPX #$FF
        BEQ bACDF
LINE_DRAW_2
        LDA VER_POS_LO,Y ; LINE-DRAW-START
        STA SCREEN_POS_LO
        TXA 
        ASL 
        LDA VER_POS_HI,Y
        ADC SCREEN_BANK
        STA SCREEN_POS_HI
        STY ab06
        LDY HOR_SCR_POS,X
        LDA (SCREEN_POS_PTR),Y
abACD6   =*+$02
abACD4  
	AND AND_PIXEL_POS,X
        STA (SCREEN_POS_PTR),Y
        LDY ab06
        CPY ab6D
        BNE bACB1 ; GOTO LINE-DRAW
bACDF   
	RTS 

bACE0   
	DEX ; LINE-DRAW
        LDA ab08
        SBC LINE_INC
        STA ab08
        BCS LINE_DRAW_3
        INY 
        CPY #$88
        BEQ bAD0E
LINE_DRAW_3
        LDA VER_POS_LO,Y ; LINE-DRAW-START
        STA SCREEN_POS_LO
        TXA 
        ASL 
        LDA VER_POS_HI,Y
        ADC SCREEN_BANK
        STA SCREEN_POS_HI
        STY ab06
        LDY HOR_SCR_POS,X
        LDA (SCREEN_POS_PTR),Y
abAD05   =*+$02
abAD03  
	AND AND_PIXEL_POS,X
        STA (SCREEN_POS_PTR),Y
        LDY ab06
        CPX ab6C
        BNE bACE0 ; GOTO LINE-DRAW
bAD0E   
	RTS 

bAD0F   
	DEX  ; LINE-DRAW
        LDA ab08
        SBC LINE_INC
        STA ab08
        BCS LINE_DRAW_4
        DEY 
        CPY #$FF
        BEQ bAD3D
LINE_DRAW_4
        LDA VER_POS_LO,Y ; LINE-DRAW-START
        STA SCREEN_POS_LO
        TXA 
        ASL 
        LDA VER_POS_HI,Y
        ADC SCREEN_BANK
        STA SCREEN_POS_HI
        STY ab06
        LDY HOR_SCR_POS,X
        LDA (SCREEN_POS_PTR),Y
abAD34   =*+$02
abAD32  
	AND AND_PIXEL_POS,X
        STA (SCREEN_POS_PTR),Y
        LDY ab06
        CPX ab6C
        BNE bAD0F ; GOTO LINE-DRAW
bAD3D   
		RTS 

bAD3E   
	DEY  ; LINE-DRAW
        LDA ab08
        ADC LINE_INC
        STA ab08
        BCC LINE_DRAW_5
        DEX 
        CPX #$FF
        BEQ bAD6C
LINE_DRAW_5
        LDA VER_POS_LO,Y ; LINE-DRAW-START
        STA SCREEN_POS_LO
        TXA 
        ASL 
        LDA VER_POS_HI,Y
        ADC SCREEN_BANK
        STA SCREEN_POS_HI
        STY ab06
        LDY HOR_SCR_POS,X
        LDA (SCREEN_POS_PTR),Y
abAD63   =*+$02
abAD61  
	AND AND_PIXEL_POS,X
        STA (SCREEN_POS_PTR),Y
        LDY ab06
        CPY ab6D
        BNE bAD3E ; GOTO LINE-DRAW
bAD6C   
	RTS 

bAD6D   
	DEY  ; LINE-DRAW
        LDA ab08
        SBC LINE_INC
        STA ab08
        BCS LINE_DRAW_6
                INX             ; NEXT VER
                CPX #$A0        ; OFF BOTTOM
                BEQ bAD9B       ; EXIT
LINE_DRAW_6
        LDA VER_POS_LO,Y ; LINE-DRAW-START
        STA SCREEN_POS_LO
        TXA 
        ASL 
        LDA VER_POS_HI,Y
        ADC SCREEN_BANK
        STA SCREEN_POS_HI
        STY ab06
        LDY HOR_SCR_POS,X
        LDA (SCREEN_POS_PTR),Y
abAD92   =*+$02
abAD90  
	AND AND_PIXEL_POS,X
        STA (SCREEN_POS_PTR),Y
        LDY ab06
        CPY ab6D
        BNE bAD6D ; GOTO LINE-DRAW 
bAD9B   
		RTS 

bAD9C   
	INX	; LINE-DRAW
	LDA	ab08
        ADC	LINE_INC
        STA	ab08
        BCC	LINE_DRAW_7
        DEY 
        CPY	#$FF
        BEQ	bADCA
LINE_DRAW_7
        LDA	VER_POS_LO,Y ; LINE-DRAW-START
abADAD  
	STA	SCREEN_POS_LO
	TXA 
	ASL 
	LDA VER_POS_HI,Y
	ADC SCREEN_BANK
	STA SCREEN_POS_HI
	STY ab06
	LDY HOR_SCR_POS,X
	LDA (SCREEN_POS_PTR),Y
abADC1   =*+$02
abADBF  
	AND AND_PIXEL_POS,X
	STA (SCREEN_POS_PTR),Y
	LDY ab06
	CPX ab6C
	BNE bAD9C ; GOTO LINE DRAW
bADCA   
	RTS 

PLOT_POINT
        LDA	f0700,X	; GET POINT FROM PLOT POINT TABLE ?
        BNE	PLOT_POINT_EXIT	; EXIT IF ITS not ZERO - this being set to not zero plots a point - what sets it to 0?
		LDY	f06C0,X	; GET VER POS
		LDA	VER_POS_LO,Y 
		STA	SCREEN_POS_LO
		LDA	f0680,X	; GET HOR POS
		TAX 	
		ASL 
		LDA	VER_POS_HI,Y
		ADC	SCREEN_BANK
		STA	SCREEN_POS_HI
		LDY	HOR_SCR_POS,X
		LDA	(SCREEN_POS_PTR),Y	; GET SCREEN BYTE
		AND	AND_PIXEL_POS,X			; AND PIXEL
		STA	(SCREEN_POS_PTR),Y	; PUT SCREEN BYTE
PLOT_POINT_EXIT   
	RTS 

sADEF   
	LDA abE8
        ROR 
        ROR 
        ROR 
        EOR abE8
        ROR 
        ROR abF3
        ROR abE8
        RTS 

COLOUR_SETUP_WHITE
        LDA #>AND_PIXEL_POS
        LDX #$3D
        BNE COLOUR_SETUP
COLOUR_SETUP_BLACK
	LDA #>ORA_PIXEL_POS
        LDX #$1D
COLOUR_SETUP   
	STA abAC78
        STA abACA7
        STA abACD6
        STA abAD05
        STA abAD34
        STA abAD63
        STA abAD92
        STA abADC1
        STX abAC76
        STX abACA5
        STX abACD4
        STX abAD03
        STX abAD32
        STX abAD61
        STX abAD90
        STX abADBF
        RTS 

        RTS 

sae96 = $ae96
jaed3 = $aed3
sAEF3 = $AEF3

        	.REPT 282
		NOP
	.NEXT

        TAY 
        ORA #$00
        PHP 
        BRK 
        BRK 
        BRK 
        BVC bAF60
        BRK 
        PHP 
        BPL bAF5F
bAF60   =*+$01
bAF5F   
		LDY #$A8
        ORA #$00
        PHP 
        BRK 
        BRK 
        BRK 
        CPX ab05
        BRK 
        PHP 
        BPL bAF6D

bAF6D   .BYTE $A0

DRAW_SCREEN
		LDA #$78
        STA ab1A
        LDA #$00
        STA SCREEN_POS_LO

			LDA		#$E0
WAIT_RASTER		CMP 	$D012
				BNE 	WAIT_RASTER

        LDA	abC8
        BPL	bAF84
        JSR	sAE96
bAF84   
		INC	SCREEN_FLIP	; INCREMENT SCREEN FLIP
        LDA	SCREEN_FLIP	; GET SCREEN FLIP
        LSR 				; SHIFT BIT0 INTO CARRY
        BCS	bAF97		; CARRY SET ?
		LDA	#$40			; SCREEN 1 OFFSET
		STA	SCREEN_BANK		; SCREEN 1 OFFSET
		STA	SCREEN_POS_HI
		LDA	#$78
		STA	abC7
		BNE	bAFA1
		
bAF97  	LDA	#$60			; SCREEN 2 OFFSET
        STA	SCREEN_BANK		; SCREEN 2 OFFSET
        STA	SCREEN_POS_HI
        LDA	#$70
        STA	abC7

bAFA1   LDA abC8
        BEQ bAFA8
        JSR sAEF3
bAFA8   
		LDA abF0
        BEQ bAFBD
        DEC abF0
abAFAE  
		BNE bAFB7
        LDA abC4
        STA abA5
        JMP bAFBD

bAFB7  	TAX 
        LDA fBB7E,X
        STA abA5

bAFBD   LDA abA8
        BEQ bAFCA
        JMP jB197

bAFCA   LDA abF9
        BEQ bAFD5
        DEC abF9
        BNE bAFD5

bAFD5   LDX #$55
        LDY #$AA
        LDA PITCH_HI
        CLC 
        ADC #$01
        EOR ROLL_HI
        LSR 
        EOR abF1
        AND #$01
        BEQ bAFF1
        STY ab82
        STX ab83
        LDA #$FF
        STA ab84
        BNE bAFF7

bAFF1   STA ab84
        STX ab82
        STY ab83

bAFF7   LDX ab34
        LDA ab35
        EOR #$01
        EOR abF1
        TAY 
        AND #$01
        STA ab7D
        TYA 
        AND #$FC
        CLC 
        ADC #$18
        BVS bB012
        TAY 
        JSR FPTO16BIT
        BCC bB016

bB012   LDX #$FF
        LDY #$FF

bB016   TYA 
        ASL 
        STA ab7B
        TXA 
        ROL 
        STA ab7C
        LDX ab3A
        LDA ab3B
        CLC 
        ADC ab21
        BVC bB02B
        LDX #<p7400
        LDA #>p7400

bB02B   STX ab16
        STA ab17
        EOR #$01
        STX ab08
        STA ab09
        LDX ab2E
        LDY ab2F
        JSR FPDIV
        STX ab0A
        STY ab0B
        LDX #<p140C
        LDY #>p140C
        STX ab08
        STY ab09
        LDX ab32
        LDY ab33
        JSR FPDIV
        LDX ab0A
        LDY ab0B
        JSR FP_ADD
        TYA 
        EOR abF1
        TAY 
        JSR FPTO8BIT
        BCS bB06A
        ADC #$50 ; add screen half
        CMP #$A0 ; clip test
        BCS bB06A
        STA ab09
        JMP jB0E1

bB06A   LDX ab16
        LDY ab17
        STX ab08
        STY ab09
        LDX ab30
        LDY ab31
        JSR FPDIV
        STX ab0A
        STY ab0B
        LDX #$3C
        LDA #$19
        EOR ab7D
        STX ab08
        STA ab09
        LDX ab32
        LDA ab33
        EOR abF1
        TAY 
        JSR FPMUL
        LDX ab0A
        LDY ab0B
        JSR FP_ADD
        TYA 
        CLC 
        ADC #$04
        BVS bB0AA
        TAY 
        JSR FPTO8BIT
        BCS bB0AA
        ADC #$44 ; add screen half
        CMP #$88 ; clip tee
        BCC bB0C7

bB0AA   LDA PITCH_HI
        EOR ab7D

abB0AE  STA ab06
        LDA ROLL_HI
        CLC 
        ADC #$03
        LSR 
        EOR ab06
        AND #$01
        BEQ bB0C0
        LDA ab83
        BNE bB0C2

bB0C0   LDA ab82

bB0C2   LDX #$88
        JMP jB178

bB0C7   EOR #$FF
        ADC #$88
        TAX 
        LDA ab7D
        BEQ bB0D8
        LDA #$9F
        STA ab09
        LDA ab83
        BNE bB0DE

bB0D8   LDA #$01
        STA ab09
        LDA ab82

bB0DE   JSR jB178

jB0E1   LDA #$00
        STA ab08
        LDA ab09

jB0E7   AND #$FC
        STA ab06
        EOR #$FF
        SEC 
        ADC #$A0
        TAX 
        CMP #$84
        BCC bB0F9
			ADC #$01
			INC SCREEN_POS_HI
bB0F9   STA abB0FF +1
        LDA ab83
abB0FF	JSR DRAW_SCREEN_COLUMN_FORWARDS
        LDA ab06
        CMP #$20
        BCC bB10B
			ADC #$01
			DEC SCREEN_POS_HI
bB10B   STA abB111 +1
        LDA ab82
abB111	JSR DRAW_SCREEN_COLUMN_BACKWARDS
        TXA 
        SEC 
        SBC #$04
        ASL 
        TAY 
        BCC DRAW_HORIZON_DETAIL
		INC	SCREEN_POS_HI

DRAW_HORIZON_DETAIL  
        LDA ab09
        AND #$03
        TAX 
        LDA HORIZON_DETAIL,X
        EOR ab84
        STA (SCREEN_POS_PTR),Y
        INC ab1A
        BEQ bB167
        LDX ab1A
        LDA HORIZON_COLUMNS_HI,X
        STA SCREEN_POS_LO
        LDA HORIZON_COLUMNS_LO,X
        ORA SCREEN_BANK
        STA SCREEN_POS_HI
        LDA ab7D
        BNE bB155
        LDA ab08
        CLC 
        ADC ab7B
        STA ab08
        LDA ab09
        ADC ab7C
        BCS DRAW_SCREEN_BLOCK
        CMP #$A0
        BCS DRAW_SCREEN_BLOCK
        STA ab09
        JMP jB0E7

bB155   LDA ab08
        SEC 
        SBC ab7B
        STA ab08
        LDA ab09
        SBC ab7C
        BCC DRAW_SCREEN_BLOCK
        STA ab09
        JMP jB0E7

bB167   RTS 

DRAW_SCREEN_BLOCK	LDA 	#0 ; draw screen block?
					SEC 
					SBC 	ab1A
					TAX 
					LDA 	ab7D
					BEQ 	bB176
					LDA 	ab82
					BNE 	jB178
bB176   				LDA 	ab83
jB178   			STA 	ab06
					CPX 	#0
					BEQ 	DSCF_XT
DSCF_LOOP				JSR 	DRAW_SCREEN_COLUMN_FORWARDS
						INC 	ab1A
						LDY 	ab1A
						LDA 	HORIZON_COLUMNS_HI,Y
						STA 	SCREEN_POS_LO
						LDA 	HORIZON_COLUMNS_LO,Y
						ORA 	SCREEN_BANK
						STA 	SCREEN_POS_HI
						LDA 	ab06
						DEX 
						BNE 	DSCF_LOOP
DSCF_XT				RTS 

sb232 = $b232

jB197   
	RTS 

sB270   
	RTS 

        ORA ab0B
sB281   
	LDA #$FF
        STA $DC02    ;CIA1: Data Direction Register A
        LDA #$00
        STA ab07
abB28C   =*+$02
        STA $DC03    ;CIA1: Data Direction Register B
        TAX 
        STA $DC00    ;CIA1: Data Port Register A
        LDY $DC01    ;CIA1: Data Port Register B
        CPY #$FF
        BEQ bB2F8
        LDA #$FE
bB29A   
	STA $DC00    ;CIA1: Data Port Register A
        LDY $DC01    ;CIA1: Data Port Register B
        CPY #$FF
        BEQ bB2E0
        PHA 
        TYA 
        LDY #$08
bB2A8   
	DEY 
        BMI bB2DF
        ASL 
        BCS bB2A8
        PHA 
        TXA 
        ASL 
        ASL 
        ASL 
        STY ab06
        ORA ab06
        STA ab06
        CMP #$3A
        BEQ bB2D1
        CMP #$0F
        BEQ bB2D8
        CMP #$34
        BEQ bB2D8
        LDA ab07
        AND #$C0
        ORA ab06
jB2CB   
	STA ab07
        PLA 
        JMP bB2A8

bB2D1   
	LDA ab07
        ORA #$80
        JMP jB2CB

bB2D8   
	LDA ab07
        ORA #$40
        JMP jB2CB

bB2DF   
	PLA 
bB2E0   
	INX 
        SEC 
        ROL 
        BCS bB29A
        LDY ab07
        TYA 
        AND #$3F
        BEQ bB2F8
        EOR abEA
abB2EE  
	AND #$3F
        BEQ bB2F4
        STY abE9
bB2F4   
	STY abEA
        CLC 
        RTS 

bB2F8   
	LDY #$FF
        STY abEA
        SEC 
        RTS 

READ_JOYSTICK_KEYBOARD
        LDA #$00
        STA $DC02    ;CIA1: Data Direction Register A
        LDA $DC00    ;CIA1: Data Port Register A
        TAX 
        AND #$0F
        STA ab80 ; JOYSTICK MOVEMENT
        TXA 
        LSR 
        LSR 
        LSR 
        LSR 
        AND #$01
        STA ab81 ; FIRE BUTTON
        TXA 
        AND #$1F
        CMP #$1F
        BEQ bB324
        LDA #$80
        ORA abBEC0_JOYSTICK
        STA abBEC0_JOYSTICK
		nop
		nop
bB323   
	RTS 

bB324   
	JSR sB281
        BCS bB323
        LDA #$80
        ORA abBEC0_JOYSTICK
        STA abBEC0_JOYSTICK
		nop
		nop
jB331   
	LDY abE9
        LDX abEA
        CPY #$81
        BNE bB33F
        JSR sB281
        JMP jB331

bB33F   
	CPY #$12 ; KEY B?
        BNE bB349
        JSR sB4B2
        JMP bB323

bB349   
	CPY #$2A
        BNE bB356
        JSR sB4B2
        JSR sB949
        JMP j98C8

bB356   
	CPX #$2B
        BNE bB361
        LDX #$F8
        LDY #$FC
        JMP jB499

bB361   
	CPX #$28
        BNE bB36C
        LDX #$08
        LDY #$00
        JMP jB499

bB36C   
	CPY #$8D
        BNE bB377
 nop
 nop
 nop
;        STY ab825F
        LDX #$3B
        BNE bB382

bB377   
	CPY #$AA
        BNE bB3E4
        LDA #$00
 nop
 nop
 nop
;        STA ab825F
        LDX #$3A

bB382   
	JSR jB94D
        JSR sB4B2
        JSR sB3D6
bB38B   
	JSR sB281
        LDA abE9
        CMP #$04
        BEQ bB38B
        AND #$3F
        TAX 
        LDA fBC50,X
        BEQ bB3D1
        LSR 
        SEC 
        SBC #$04
        CMP #$0A
        BNE bB3A7
        LDA #$00
        CLC 
bB3A7   
	BCS bB3D1
        ORA #$30
 nop
 nop
 nop
;        STA ab825E
        JSR sB4B2
        JSR jB94D
        LDX #$38
        JSR sB3D6
        LDA #$05
        STA ab01
bB3BD   
	JSR sB281
        LDA abE9
        CMP #$04
        BEQ bB3BD
        LDX #$35
        STX ab01
        CMP #$01
        BNE bB3D1
 nop
 nop
 nop
;        JMP j819E

bB3D1   
	LDX #$32
        JMP sB3D6

sB3D6   
	LDA abE6
        BNE sB3D6
        JSR s8DAA
bB3DD   
	LDA abE0
        CMP #$1E
        BCC bB3DD
        RTS 

bB3E4   
	NOP 
        CPY #$BE
        BNE bB3F6
        JSR jB94D
        JSR sB4B2
        LDX #$FF
        TXS 
        CLD 
        JMP j80E8

bB3F6   
	CPY #$0E
        BEQ bB3FD
        JMP jB47E

bB3FD   
	JSR sB4B2
        LDA abCA
        BNE bB42F
        LDA abA8
        BNE bB455
        LDA ab7F
        BEQ bB42F
        LDA CURR_X_MSB
        LSR 
        LSR 
        CMP #$1C
        BNE bB42F
        LDA CURR_Z_MSB
        LSR 
        LSR 
        CMP #$1C
        BNE bB42F
        LDX #$08
bB41E   
	LDA fB4B6,X
        CMP CURR_X_HSB
        BNE bB42C
        LDA fB4BE,X
        CMP CURR_Z_HSB
        BEQ bB430
bB42C   
	DEX 
        BNE bB41E
bB42F   
	RTS 

bB430   
	CPX #$05
        BNE bB43E
        LDA ab29EE
        BMI bB43E
        LDX #$39
        JMP s8DAA

bB43E   
	JSR jB94D
        STX abCD
        LDA abBBCF
        STA abC6
        LDA abBBCE
        STA abC2
        LDA #$0D
        LDX #$83
        LDY #$80
        BMI bB470
bB455   
	LDX #$00
        LDA #$08
        CMP abCD
        BCC bB42F
        BNE bB460
        DEX 
bB460   
	STX abFA
        JSR jB94D
        LDA abBBCA
        STA abC2
        LDA #$00
        LDX #$42
        LDY #$01
bB470   
	STA abCC
        STX abCB
        STY abCA
        LDA #$30
        JSR sB93A
        JMP s9950

jB47E   
	TYA 
        AND #$3F
        TAX 
        LDA fBC50,X
        BEQ bB42F
        TAX 
        TYA 
        ROL 
        ROL 
        TXA 
        ROL 
        STA abED
        LDA #$00
        STA abEC
        NOP 
        NOP 
        NOP 
        JMP sB4B2

jB499   
	STX ab08
        STY ab09
        LDX abEC
        LDY abED
        JSR FPMUL
        TYA 
        AND #$FC
        CMP #$3C
        BEQ sB4B2
        STX abEC
        STY abED
        NOP 
        NOP 
        NOP 
sB4B2  
	LDA #$04
        STA abE9
fB4B6   
	RTS 

        ORA #$09
        SLO (p0B,X)
        SLO (p51,X)
        DEY 
fB4BE   
	PHP 
        ASL ab05
        BRK 
        ORA ab230F
        DEY 
        PHP 
        STA abB4D3
        LDX #$17
bB4CC   
	STA fDB77,X
        DEX 
        BNE bB4CC
        RTS 

abB4D3  
	.BYTE $02    ;JAM 
;        STA abDAFA
;        STA abDAFB
;        STA abDB22
;        STA abDB23
;        STA abDB4A
;        STA abDB4B
;        STA abDB72
;        STA abDB73
;        RTS 
;
;        STA abDB42
;        STA abDB43
;        STA abDB44
;        STA abDB45
;        STA abDB6A
;        STA abDB6B
;        STA abDB6C
;        STA abDB6D
;        RTS 

sB506   RTS 

sb749 = $b749

        RTS 

 jb94d = $b94D
jb949 = $b949
sb93a = $b93a
sb949 = $b949

	* = $B9BB
pB9BB   PHA 
        LDA abC7
        STA $D018    ;VIC Memory Control Register
        LDA #$3B
        STA $D011    ;VIC Control Register 1
        LDA abA3
        STA $D021    ;Background Color 0
        LDA #$18
        STA $D016    ;VIC Control Register 2
        LDA #<pBA1E
        STA fFFFE    ;IRQ
        LDA #>pBA1E
        STA fFFFF    ;IRQ
        LDA #$BA
        STA $D012    ;Raster Position
        LDA #$01
        STA $D019    ;VIC Interrupt Request Register (IRR)
        PLA 
        RTI 

bB9F4   RTS 

	* = $BA1E
pBA1E   PHA 
        LDA #<pB9BB
        STA fFFFE    ;IRQ
        LDA #>pB9BB
        STA fFFFF    ;IRQ
        LDA #$00
        STA $D012    ;Raster Position
        LDA #$01
        STA $D019    ;VIC Interrupt Request Register (IRR)
        LDA #$7E
        STA $D018    ;VIC Memory Control Register
        LDA #$1B
        STA $D011    ;VIC Control Register 1
        LDA #$08
        STA $D016    ;VIC Control Register 2
		PLA 
        RTI 

fBB7E 
	.fill (9*8),0
	.fill (4),0
abBBCA  .BYTE $0B,$00,$09,$00
abBBCE  .BYTE $0B
abBBCF  .BYTE $00
LINE_DRAW_CONV_PTR      .BYTE $00,$07,$03,$04,$01,$06,$02,$05
fBBD8   .BYTE $9F,$9F,$00,$00,$00,$00,$9F,$9F
fBBE0   .BYTE $87,$87,$87,$87,$00,$00,$00,$00
fBBE8   .BYTE $40,$38,$08,$00,$40,$38,$28,$30
  .BYTE $40,$18,$08,$10,$40,$18,$28,$20
fBBF8   .BYTE $00,$00,$03,$00,$00,$00,$02,$02
  .BYTE $00
  .BYTE $00,$00,$06,$04,$00,$00,$04,$0C
  .BYTE $00,$00,$00,$08,$08,$00,$00,$00
  .BYTE $09,$00,$00,$00,$01,$01,$00
fBC18   .BYTE $01,$00,$00,$00,$01,$01,$00,$00
  .BYTE $00,$01,$00,$00,$00,$01,$01,$00
  .BYTE $00,$00,$01,$00,$00,$00,$01,$01
  .BYTE $00,$00,$00,$01,$01
  .BYTE $00,$00,$01

LINE_DRAW_PTR_LO   .BYTE <LINE_DRAW_0,<LINE_DRAW_1,<LINE_DRAW_2,<LINE_DRAW_3,<LINE_DRAW_4,<LINE_DRAW_5,<LINE_DRAW_6,<LINE_DRAW_7 
LINE_DRAW_PTR_HI   .BYTE >LINE_DRAW_0,>LINE_DRAW_1,>LINE_DRAW_2,>LINE_DRAW_3,>LINE_DRAW_4,>LINE_DRAW_5,>LINE_DRAW_6,>LINE_DRAW_7 
  .BYTE $C0,$30,$0C,$03
HORIZON_DETAIL .BYTE $56,$5A,$6A,$AA
		
fBC50 
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $0E,$00,$00,$10,$00,$00,$00,$00
  .BYTE $12,$00,$00,$14,$00,$00,$00,$00
  .BYTE $16,$00,$00,$18,$00,$00,$00,$00
  .BYTE $1A,$00,$00,$1C,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $00,$00,$00,$00,$00,$00,$00,$00
  .BYTE $0A,$42,$00,$0C,$42,$00,$00,$00

.ALIGN $100
DRAW_SCREEN_COLUMN_FORWARDS
        LDY #$00
        STA (SCREEN_POS_PTR),Y
        LDY #$08
        STA (SCREEN_POS_PTR),Y
        LDY #$10
        STA (SCREEN_POS_PTR),Y
        LDY #$18
        STA (SCREEN_POS_PTR),Y
        LDY #$20
        STA (SCREEN_POS_PTR),Y
        LDY #$28
        STA (SCREEN_POS_PTR),Y
        LDY #$30
        STA (SCREEN_POS_PTR),Y
        LDY #$38
        STA (SCREEN_POS_PTR),Y
        LDY #$40
        STA (SCREEN_POS_PTR),Y
        LDY #$48
        STA (SCREEN_POS_PTR),Y
        LDY #$50
        STA (SCREEN_POS_PTR),Y
        LDY #$58
        STA (SCREEN_POS_PTR),Y
        LDY #$60
        STA (SCREEN_POS_PTR),Y
        LDY #$68
        STA (SCREEN_POS_PTR),Y
        LDY #$70
        STA (SCREEN_POS_PTR),Y
        LDY #$78
        STA (SCREEN_POS_PTR),Y
        LDY #$80
        STA (SCREEN_POS_PTR),Y
        LDY #$88
        STA (SCREEN_POS_PTR),Y
        LDY #$90
        STA (SCREEN_POS_PTR),Y
        LDY #$98
        STA (SCREEN_POS_PTR),Y
        LDY #$A0
        STA (SCREEN_POS_PTR),Y
        LDY #$A8
        STA (SCREEN_POS_PTR),Y
        LDY #$B0
        STA (SCREEN_POS_PTR),Y
        LDY #$B8
        STA (SCREEN_POS_PTR),Y
        LDY #$C0
        STA (SCREEN_POS_PTR),Y
        LDY #$C8
        STA (SCREEN_POS_PTR),Y
        LDY #$D0
        STA (SCREEN_POS_PTR),Y
        LDY #$D8
        STA (SCREEN_POS_PTR),Y
        LDY #$E0
        STA (SCREEN_POS_PTR),Y
        LDY #$E8
        STA (SCREEN_POS_PTR),Y
        LDY #$F0
        STA (SCREEN_POS_PTR),Y
        LDY #$F8
        STA (SCREEN_POS_PTR),Y
        LDY #$00
        INC SCREEN_POS_HI
        STA (SCREEN_POS_PTR),Y
        LDY #$08
        STA (SCREEN_POS_PTR),Y
        LDY #$10
        STA (SCREEN_POS_PTR),Y
        LDY #$18
        STA (SCREEN_POS_PTR),Y
        LDY #$20
        STA (SCREEN_POS_PTR),Y
        LDY #$28
        STA (SCREEN_POS_PTR),Y
        LDY #$30
        STA (SCREEN_POS_PTR),Y
		LDY #$38
        STA (SCREEN_POS_PTR),Y
        RTS 

fBEA0   .BYTE $17,$9F
abBEA2  .BYTE $E0
abBEA3  .BYTE $FC
abBEA4  .BYTE $00
abBEA5  .BYTE $00
abBEA6  .BYTE $08
abBEA7  .BYTE $08
abBEA8  .BYTE $00
abBEA9  .BYTE $FC
abBEAA  .BYTE $00
abBEAB  .BYTE $FC,$10
abBEAD  .BYTE $0A
abBEAE  .BYTE $90
abBEAF  .BYTE $F8
fBEB0   .BYTE $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

.ALIGN $100
DRAW_SCREEN_COLUMN_BACKWARDS
        LDY #$30
        STA (SCREEN_POS_PTR),Y
		LDY #$28
        STA (SCREEN_POS_PTR),Y
        LDY #$20
        STA (SCREEN_POS_PTR),Y
        LDY #$18
        STA (SCREEN_POS_PTR),Y
        LDY #$10
        STA (SCREEN_POS_PTR),Y
        LDY #$08
        STA (SCREEN_POS_PTR),Y
        LDY #$00
        STA (SCREEN_POS_PTR),Y
        LDY #$F8
        DEC SCREEN_POS_HI
        STA (SCREEN_POS_PTR),Y
        LDY #$F0
        STA (SCREEN_POS_PTR),Y
        LDY #$E8
        STA (SCREEN_POS_PTR),Y
        LDY #$E0
        STA (SCREEN_POS_PTR),Y
        LDY #$D8
        STA (SCREEN_POS_PTR),Y
        LDY #$D0
        STA (SCREEN_POS_PTR),Y
        LDY #$C8
        STA (SCREEN_POS_PTR),Y
        LDY #$C0
        STA (SCREEN_POS_PTR),Y
        LDY #$B8
        STA (SCREEN_POS_PTR),Y
        LDY #$B0
        STA (SCREEN_POS_PTR),Y
        LDY #$A8
        STA (SCREEN_POS_PTR),Y
        LDY #$A0
        STA (SCREEN_POS_PTR),Y
        LDY #$98
        STA (SCREEN_POS_PTR),Y
        LDY #$90
        STA (SCREEN_POS_PTR),Y
        LDY #$88
        STA (SCREEN_POS_PTR),Y
        LDY #$80
        STA (SCREEN_POS_PTR),Y
        LDY #$78
        STA (SCREEN_POS_PTR),Y
        LDY #$70
        STA (SCREEN_POS_PTR),Y
        LDY #$68
        STA (SCREEN_POS_PTR),Y
        LDY #$60
        STA (SCREEN_POS_PTR),Y
        LDY #$58
        STA (SCREEN_POS_PTR),Y
        LDY #$50
        STA (SCREEN_POS_PTR),Y
        LDY #$48
        STA (SCREEN_POS_PTR),Y
        LDY #$40
        STA (SCREEN_POS_PTR),Y
        LDY #$38
        STA (SCREEN_POS_PTR),Y
        LDY #$30
        STA (SCREEN_POS_PTR),Y
        LDY #$28
        STA (SCREEN_POS_PTR),Y
        LDY #$20
        STA (SCREEN_POS_PTR),Y
        LDY #$18
        STA (SCREEN_POS_PTR),Y
        LDY #$10
        STA (SCREEN_POS_PTR),Y
        LDY #$08
        STA (SCREEN_POS_PTR),Y
        LDY #$00
        STA (SCREEN_POS_PTR),Y
        RTS 



